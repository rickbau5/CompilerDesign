Func main returns type int [line: 1]
!   Child: 0  Compound [line: 1]
!   !   Child: 0  Assign: = [line: 3]
!   !   !   Child: 0  Id: assign [line: 3]
!   !   !   Child: 1  Id: ment [line: 3]
!   !   Sibling: 0  Assign: = [line: 4]
!   !   !   Child: 0  Op: [ [line: 4]
!   !   !   !   Child: 0  Id: arr [line: 4]
!   !   !   !   Child: 1  Const: 1 [line: 4]
!   !   !   Child: 1  Id: ay [line: 4]
!   !   Sibling: 1  Op: [ [line: 5]
!   !   !   Child: 0  Id: ohne [line: 5]
!   !   !   Child: 1  Const: 2 [line: 5]
!   !   Sibling: 2  Assign: = [line: 6]
!   !   !   Child: 0  Op: . [line: 6]
!   !   !   !   Child: 0  Id: structure [line: 6]
!   !   !   !   Child: 1  Id: member [line: 6]
!   !   !   Child: 1  Id: something [line: 6]
!   !   Sibling: 3  Op: . [line: 7]
!   !   !   Child: 0  Id: struct [line: 7]
!   !   !   Child: 1  Id: x [line: 7]
!   !   Sibling: 4  Assign: = [line: 8]
!   !   !   Child: 0  Op: . [line: 8]
!   !   !   !   Child: 0  Op: . [line: 8]
!   !   !   !   !   Child: 0  Id: struct [line: 8]
!   !   !   !   !   Child: 1  Id: y [line: 8]
!   !   !   !   Child: 1  Id: z [line: 8]
!   !   !   Child: 1  Const: 'y' [line: 8]
!   !   Sibling: 5  Op: == [line: 11]
!   !   !   Child: 0  Id: a [line: 11]
!   !   !   Child: 1  Id: b [line: 11]
!   !   Sibling: 6  Op: != [line: 12]
!   !   !   Child: 0  Id: b [line: 12]
!   !   !   Child: 1  Id: c [line: 12]
!   !   Sibling: 7  Op: <= [line: 13]
!   !   !   Child: 0  Id: d [line: 13]
!   !   !   Child: 1  Id: e [line: 13]
!   !   Sibling: 8  Op: >= [line: 14]
!   !   !   Child: 0  Id: f [line: 14]
!   !   !   Child: 1  Id: g [line: 14]
!   !   Sibling: 9  Op: < [line: 15]
!   !   !   Child: 0  Id: h [line: 15]
!   !   !   Child: 1  Id: i [line: 15]
!   !   Sibling: 10  Op: > [line: 16]
!   !   !   Child: 0  Id: j [line: 16]
!   !   !   Child: 1  Id: k [line: 16]
