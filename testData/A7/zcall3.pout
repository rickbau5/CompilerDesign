Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func ant returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 1]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   Child: 1  Return [type void] [line: 2]
!   !   Child: 0  Op: * [type int] [line: 2]
!   !   !   Child: 0  Const: 666 [type int] [line: 2]
!   !   !   Child: 1  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
Sibling: 7  Func bat returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 5]
!   Child: 0  Param b  [ref: Param, size: 1, loc: -2] [type int] [line: 5]
!   Child: 1  Compound [ref: None, size: -3, loc: 0] [type void] [line: 5]
!   !   Child: 1  Return [type void] [line: 6]
!   !   !   Child: 0  Op: * [type int] [line: 6]
!   !   !   !   Child: 0  Const: 666 [type int] [line: 6]
!   !   !   !   Child: 1  Id: b  [ref: Param, size: 1, loc: -2] [type int] [line: 6]
Sibling: 8  Func cow returns type int [ref: Global, size: -4, loc: 0] [type int] [line: 10]
!   Child: 0  Param c  [ref: Param, size: 1, loc: -2] [type int] [line: 10]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 10]
!   !   Child: 0  Var stuff  [ref: Local, size: 1, loc: -3] [type int] [line: 11]
!   !   Child: 1  Return [type void] [line: 13]
!   !   !   Child: 0  Op: * [type int] [line: 13]
!   !   !   !   Child: 0  Const: 666 [type int] [line: 13]
!   !   !   !   Child: 1  Id: c  [ref: Param, size: 1, loc: -2] [type int] [line: 13]
Sibling: 9  Func dog returns type int [ref: Global, size: -5, loc: 0] [type int] [line: 17]
!   Child: 0  Param d  [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   Child: 1  Compound [ref: None, size: -4, loc: 0] [type void] [line: 17]
!   !   Child: 0  Var stuff  [ref: Local, size: 1, loc: -3] [type int] [line: 18]
!   !   Child: 1  Compound [ref: None, size: -5, loc: 0] [type void] [line: 20]
!   !   !   Child: 0  Var moreStuff  [ref: Local, size: 1, loc: -4] [type int] [line: 21]
!   !   !   Child: 1  Return [type void] [line: 23]
!   !   !   !   Child: 0  Op: * [type int] [line: 23]
!   !   !   !   !   Child: 0  Const: 666 [type int] [line: 23]
!   !   !   !   !   Child: 1  Id: d  [ref: Param, size: 1, loc: -2] [type int] [line: 23]
Sibling: 10  Func main returns type void [ref: Global, size: -2, loc: 0] [type void] [line: 28]
!   Child: 1  Compound [ref: None, size: -2, loc: 0] [type void] [line: 29]
!   !   Child: 1  Call: ant [type int] [line: 30]
!   !   !   Child: 0  Const: 111 [type int] [line: 30]
!   !   Sibling: 0  Call: bat [type int] [line: 31]
!   !   !   Child: 0  Const: 222 [type int] [line: 31]
!   !   Sibling: 1  Call: cow [type int] [line: 32]
!   !   !   Child: 0  Const: 333 [type int] [line: 32]
!   !   Sibling: 2  Call: dog [type int] [line: 33]
!   !   !   Child: 0  Const: 444 [type int] [line: 33]
Offset for end of global space: 0
Source: zcall3.c-  Object: zcall3.tm
Number of warnings: 0
Number of errors: 0
