ERROR(26): 'and' requires operands of type bool but rhs is of type int.
ERROR(26): 'or' requires operands of type bool but rhs is of type int.
ERROR(35): '+' requires operands of type int but lhs is of type bool.
ERROR(35): '+' requires operands of type int but rhs is of type bool.
ERROR(35): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(40): Symbol 'x' is not defined.
ERROR(41): Symbol 'x' is not defined.
ERROR(44): Symbol 'x' is not defined.
ERROR(44): Symbol 'x' is not defined.
Func input returns type int [type int] [line: -1]
Sibling: 0  Func output returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type int [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type bool [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [type char] [line: -1]
Sibling: 4  Func outputc returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type void [type void] [line: -1]
Sibling: 5  Func outnl returns type void [type void] [line: -1]
Sibling: 6  Var g of type int [type int] [line: 4]
Sibling: 7  Func main returns type void [type void] [line: 6]
!   Child: 1  Compound [type void] [line: 7]
!   !   Child: 1  Compound [type void] [line: 8]
!   !   !   Child: 0  Var x of type int [type int] [line: 9]
!   !   !   Sibling: 0  Var y of type int [type int] [line: 10]
!   !   !   Child: 1  Assign: = [type int] [line: 12]
!   !   !   !   Child: 0  Id: x [type int] [line: 12]
!   !   !   !   Child: 1  Const: 11 [type int] [line: 12]
!   !   !   Sibling: 0  Assign: = [type int] [line: 13]
!   !   !   !   Child: 0  Id: y [type int] [line: 13]
!   !   !   !   Child: 1  Const: 12 [type int] [line: 13]
!   !   !   Sibling: 1  Assign: = [type int] [line: 14]
!   !   !   !   Child: 0  Id: g [type int] [line: 14]
!   !   !   !   Child: 1  Const: 13 [type int] [line: 14]
!   !   !   Sibling: 2  Assign: = [type int] [line: 16]
!   !   !   !   Child: 0  Id: x [type int] [line: 16]
!   !   !   !   Child: 1  Op: + [type int] [line: 16]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Op: + [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 16]
!   !   !   !   !   !   !   !   Child: 1  Id: x [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: y [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 16]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 16]
!   !   !   !   !   !   Child: 0  Id: x [type int] [line: 16]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 16]
!   !   !   !   !   !   !   Child: 0  Id: y [type int] [line: 16]
!   !   !   !   !   !   !   Child: 1  Id: g [type int] [line: 16]
!   !   !   Sibling: 3  Assign: = [type int] [line: 17]
!   !   !   !   Child: 0  Id: x [type int] [line: 17]
!   !   !   !   Child: 1  Op: - [type int] [line: 17]
!   !   !   !   !   Child: 0  Op: - [type int] [line: 17]
!   !   !   !   !   !   Child: 0  Op: - [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Op: / [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 1  Id: x [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Op: / [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Id: y [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 17]
!   !   !   !   !   Child: 1  Op: / [type int] [line: 17]
!   !   !   !   !   !   Child: 0  Id: x [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 17]
!   !   !   !   !   !   !   Child: 0  Id: y [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Id: g [type int] [line: 17]
!   !   !   Sibling: 4  Assign: = [type int] [line: 18]
!   !   !   !   Child: 0  Id: x [type int] [line: 18]
!   !   !   !   Child: 1  Op: / [type int] [line: 18]
!   !   !   !   !   Child: 0  Op: % [type int] [line: 18]
!   !   !   !   !   !   Child: 0  Op: / [type int] [line: 18]
!   !   !   !   !   !   !   Child: 0  Op: % [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Id: x [type int] [line: 18]
!   !   !   !   !   !   Child: 1  Op: % [type int] [line: 18]
!   !   !   !   !   !   !   Child: 0  Op: / [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: y [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Id: x [type int] [line: 18]
!   !   !   !   !   Child: 1  Op: % [type int] [line: 18]
!   !   !   !   !   !   Child: 0  Id: y [type int] [line: 18]
!   !   !   !   !   !   Child: 1  Id: g [type int] [line: 18]
!   !   Sibling: 0  Compound [type void] [line: 20]
!   !   !   Child: 0  Var x of type bool [type bool] [line: 21]
!   !   !   Sibling: 0  Var y of type bool [type bool] [line: 21]
!   !   !   Sibling: 1  Var z is array of type bool [type bool] [line: 21]
!   !   !   Child: 1  Assign: = [type bool] [line: 23]
!   !   !   !   Child: 0  Id: x [type bool] [line: 23]
!   !   !   !   Child: 1  Const: true [type bool] [line: 23]
!   !   !   Sibling: 0  Assign: = [type bool] [line: 24]
!   !   !   !   Child: 0  Id: y [type bool] [line: 24]
!   !   !   !   Child: 1  Const: false [type bool] [line: 24]
!   !   !   Sibling: 1  Assign: = [type bool] [line: 26]
!   !   !   !   Child: 0  Id: x [type bool] [line: 26]
!   !   !   !   Child: 1  Op: or [type bool] [line: 26]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 26]
!   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 26]
!   !   !   !   !   !   !   !   Child: 0  Const: false [type bool] [line: 26]
!   !   !   !   !   !   !   !   Child: 1  Id: x [type bool] [line: 26]
!   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 0  Id: y [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 26]
!   !   !   !   !   Child: 1  Op: and [type bool] [line: 26]
!   !   !   !   !   !   Child: 0  Id: x [type bool] [line: 26]
!   !   !   !   !   !   Child: 1  Op: or [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 0  Id: y [type bool] [line: 26]
!   !   !   !   !   !   !   Child: 1  Id: g [type int] [line: 26]
!   !   !   Sibling: 2  Assign: = [type bool] [line: 27]
!   !   !   !   Child: 0  Id: x [type bool] [line: 27]
!   !   !   !   Child: 1  Op: or [type bool] [line: 27]
!   !   !   !   !   Child: 0  Op: not [type bool] [line: 27]
!   !   !   !   !   !   Child: 0  Const: true [type bool] [line: 27]
!   !   !   !   !   Child: 1  Op: not [type bool] [line: 27]
!   !   !   !   !   !   Child: 0  Op: not [type bool] [line: 27]
!   !   !   !   !   !   !   Child: 0  Id: x [type bool] [line: 27]
!   !   !   Sibling: 3  Assign: = [type bool] [line: 29]
!   !   !   !   Child: 0  Id: x [type bool] [line: 29]
!   !   !   !   Child: 1  Op: and [type bool] [line: 29]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 29]
!   !   !   !   !   !   Child: 0  Id: x [type bool] [line: 29]
!   !   !   !   !   !   Child: 1  Id: y [type bool] [line: 29]
!   !   !   !   !   Child: 1  Id: x [type bool] [line: 29]
!   !   !   Sibling: 4  Assign: = [type bool] [line: 30]
!   !   !   !   Child: 0  Id: x [type bool] [line: 30]
!   !   !   !   Child: 1  Op: or [type bool] [line: 30]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 30]
!   !   !   !   !   !   Child: 0  Id: x [type bool] [line: 30]
!   !   !   !   !   !   Child: 1  Id: y [type bool] [line: 30]
!   !   !   !   !   Child: 1  Id: x [type bool] [line: 30]
!   !   !   Sibling: 5  Assign: = [type bool] [line: 32]
!   !   !   !   Child: 0  Id: x [type bool] [line: 32]
!   !   !   !   Child: 1  Op: [ [type bool] [line: 32]
!   !   !   !   !   Child: 0  Id: z [type bool] [line: 32]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 32]
!   !   !   Sibling: 6  Assign: = [type bool] [line: 33]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 33]
!   !   !   !   !   Child: 0  Id: z [type bool] [line: 33]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 33]
!   !   !   !   Child: 1  Id: x [type bool] [line: 33]
!   !   !   Sibling: 7  Assign: = [type bool] [line: 34]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 34]
!   !   !   !   !   Child: 0  Id: z [type bool] [line: 34]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 34]
!   !   !   !   Child: 1  Op: [ [type bool] [line: 34]
!   !   !   !   !   Child: 0  Id: z [type bool] [line: 34]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 34]
!   !   !   Sibling: 8  Assign: = [type bool] [line: 35]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 35]
!   !   !   !   !   Child: 0  Id: z [type bool] [line: 35]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 35]
!   !   !   !   Child: 1  Op: + [type int] [line: 35]
!   !   !   !   !   Child: 0  Op: [ [type bool] [line: 35]
!   !   !   !   !   !   Child: 0  Id: z [type bool] [line: 35]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 35]
!   !   !   !   !   Child: 1  Op: [ [type bool] [line: 35]
!   !   !   !   !   !   Child: 0  Id: z [type bool] [line: 35]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 35]
!   !   Sibling: 1  Compound [type void] [line: 37]
!   !   !   Child: 0  Var z is array of type int [type int] [line: 38]
!   !   !   Child: 1  Assign: = [undefined type] [line: 40]
!   !   !   !   Child: 0  Id: x [undefined type] [line: 40]
!   !   !   !   Child: 1  Op: [ [type int] [line: 40]
!   !   !   !   !   Child: 0  Id: z [type int] [line: 40]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 40]
!   !   !   Sibling: 0  Assign: = [type int] [line: 41]
!   !   !   !   Child: 0  Op: [ [type int] [line: 41]
!   !   !   !   !   Child: 0  Id: z [type int] [line: 41]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 41]
!   !   !   !   Child: 1  Id: x [undefined type] [line: 41]
!   !   !   Sibling: 1  Assign: = [type int] [line: 42]
!   !   !   !   Child: 0  Op: [ [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: z [type int] [line: 42]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 42]
!   !   !   !   Child: 1  Op: [ [type int] [line: 42]
!   !   !   !   !   Child: 0  Id: z [type int] [line: 42]
!   !   !   !   !   Child: 1  Const: 2 [type int] [line: 42]
!   !   !   Sibling: 2  Assign: = [type int] [line: 43]
!   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   Child: 0  Id: z [type int] [line: 43]
!   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   Child: 1  Op: + [type int] [line: 43]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 43]
!   !   !   !   !   !   Child: 0  Id: z [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 43]
!   !   !   !   !   Child: 1  Op: [ [type int] [line: 43]
!   !   !   !   !   !   Child: 0  Id: z [type int] [line: 43]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 43]
!   !   !   Sibling: 3  Assign: = [undefined type] [line: 44]
!   !   !   !   Child: 0  Id: x [undefined type] [line: 44]
!   !   !   !   Child: 1  Op: + [type int] [line: 44]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 44]
!   !   !   !   !   !   Child: 0  Op: + [type int] [line: 44]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 0  Id: z [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 44]
!   !   !   !   !   !   !   Child: 1  Op: * [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 0  Id: z [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 0  Id: z [type int] [line: 44]
!   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 44]
!   !   !   !   !   !   Child: 1  Op: * [type int] [line: 44]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 0  Id: z [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 44]
!   !   !   !   !   !   !   Child: 1  Const: 7 [type int] [line: 44]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 44]
!   !   !   !   !   !   Child: 0  Id: x [undefined type] [line: 44]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 44]
!   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 0  Id: z [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 44]
!   !   !   !   !   !   !   Child: 1  Id: g [type int] [line: 44]
!   !   Sibling: 2  Compound [type void] [line: 47]
!   !   !   Child: 0  Var a of type int [type int] [line: 48]
!   !   !   Sibling: 0  Var b of type int [type int] [line: 48]
!   !   !   Sibling: 1  Var c of type int [type int] [line: 48]
!   !   !   Sibling: 2  Var d of type int [type int] [line: 48]
!   !   !   Child: 1  Assign: = [type int] [line: 49]
!   !   !   !   Child: 0  Id: a [type int] [line: 49]
!   !   !   !   Child: 1  Assign: = [type int] [line: 49]
!   !   !   !   !   Child: 0  Id: b [type int] [line: 49]
!   !   !   !   !   Child: 1  Id: c [type int] [line: 49]
!   !   !   Sibling: 0  Assign: = [type int] [line: 50]
!   !   !   !   Child: 0  Id: a [type int] [line: 50]
!   !   !   !   Child: 1  Op: + [type int] [line: 50]
!   !   !   !   !   Child: 0  Op: + [type int] [line: 50]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 50]
!   !   !   !   !   !   Child: 1  Id: c [type int] [line: 50]
!   !   !   !   !   Child: 1  Id: d [type int] [line: 50]
!   !   !   Sibling: 1  Assign: = [type int] [line: 51]
!   !   !   !   Child: 0  Id: a [type int] [line: 51]
!   !   !   !   Child: 1  Op: * [type int] [line: 51]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 51]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 51]
!   !   !   !   !   !   Child: 1  Id: c [type int] [line: 51]
!   !   !   !   !   Child: 1  Id: d [type int] [line: 51]
!   !   !   Sibling: 2  Assign: = [type int] [line: 52]
!   !   !   !   Child: 0  Id: g [type int] [line: 52]
!   !   !   !   Child: 1  Assign: += [type int] [line: 52]
!   !   !   !   !   Child: 0  Id: a [type int] [line: 52]
!   !   !   !   !   Child: 1  Assign: -= [type int] [line: 52]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 52]
!   !   !   !   !   !   Child: 1  Op: + [type int] [line: 52]
!   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 52]
!   !   !   !   !   !   !   Child: 1  Id: d [type int] [line: 52]
!   !   !   Sibling: 3  Assign: = [type int] [line: 53]
!   !   !   !   Child: 0  Id: a [type int] [line: 53]
!   !   !   !   Child: 1  Op: + [type int] [line: 53]
!   !   !   !   !   Child: 0  Assign: = [type int] [line: 53]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 53]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 53]
!   !   !   !   !   Child: 1  Assign: = [type int] [line: 53]
!   !   !   !   !   !   Child: 0  Id: c [type int] [line: 53]
!   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 53]
!   !   Sibling: 3  Compound [type void] [line: 55]
!   !   !   Child: 0  Var a of type int [type int] [line: 56]
!   !   !   Sibling: 0  Var b of type int [type int] [line: 56]
!   !   !   Sibling: 1  Var x of type bool [type bool] [line: 57]
!   !   !   Sibling: 2  Var y of type bool [type bool] [line: 57]
!   !   !   Child: 1  Assign: = [type bool] [line: 58]
!   !   !   !   Child: 0  Id: x [type bool] [line: 58]
!   !   !   !   Child: 1  Op: or [type bool] [line: 58]
!   !   !   !   !   Child: 0  Id: x [type bool] [line: 58]
!   !   !   !   !   Child: 1  Op: and [type bool] [line: 58]
!   !   !   !   !   !   Child: 0  Id: y [type bool] [line: 58]
!   !   !   !   !   !   Child: 1  Op: > [type bool] [line: 58]
!   !   !   !   !   !   !   Child: 0  Op: * [type int] [line: 58]
!   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 58]
!   !   !   !   !   !   !   !   Child: 1  Id: a [type int] [line: 58]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 58]
!   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 58]
!   !   !   !   !   !   !   !   Child: 1  Id: b [type int] [line: 58]
Number of warnings: 0
Number of errors: 9
