Func input returns type int [type int] [line: -1]
Sibling: 0  Func output returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type int [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type bool [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [type char] [line: -1]
Sibling: 4  Func outputc returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type void [type void] [line: -1]
Sibling: 5  Func outnl returns type void [type void] [line: -1]
Sibling: 6  Func gcd returns type int [type int] [line: 2]
!   Child: 0  Param u of type int [type int] [line: 2]
!   Sibling: 0  Param v of type int [type int] [line: 2]
!   Child: 1  If [type void] [line: 2]
!   !   Child: 0  Op: == [type bool] [line: 2]
!   !   !   Child: 0  Id: v [type int] [line: 2]
!   !   !   Child: 1  Const: 0 [type int] [line: 2]
!   !   Child: 1  Return [type void] [line: 2]
!   !   !   Child: 0  Id: u [type int] [line: 2]
!   !   Child: 2  Return [type void] [line: 2]
!   !   !   Child: 0  Call: gcd [type int] [line: 2]
!   !   !   !   Child: 0  Id: v [type int] [line: 2]
!   !   !   !   Sibling: 0  Op: - [type int] [line: 2]
!   !   !   !   !   Child: 0  Id: u [type int] [line: 2]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 2]
!   !   !   !   !   !   Child: 0  Op: / [type int] [line: 2]
!   !   !   !   !   !   !   Child: 0  Id: u [type int] [line: 2]
!   !   !   !   !   !   !   Child: 1  Id: v [type int] [line: 2]
!   !   !   !   !   !   Child: 1  Id: v [type int] [line: 2]
Sibling: 7  Func main returns type void [type void] [line: 4]
!   Child: 1  Compound [type void] [line: 5]
!   !   Child: 0  Var x of type int [type int] [line: 6]
!   !   Sibling: 0  Var y of type int [type int] [line: 6]
!   !   Child: 1  Assign: = [type int] [line: 8]
!   !   !   Child: 0  Id: x [type int] [line: 8]
!   !   !   Child: 1  Call: input [type int] [line: 8]
!   !   Sibling: 0  Assign: = [type int] [line: 9]
!   !   !   Child: 0  Id: y [type int] [line: 9]
!   !   !   Child: 1  Call: input [type int] [line: 9]
!   !   Sibling: 1  Call: output [type void] [line: 10]
!   !   !   Child: 0  Call: gcd [type int] [line: 10]
!   !   !   !   Child: 0  Id: x [type int] [line: 10]
!   !   !   !   Sibling: 0  Id: y [type int] [line: 10]
Number of warnings: 0
Number of errors: 0
