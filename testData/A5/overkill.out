ERROR(24): 'and' requires operands of type bool but lhs is of type int.
ERROR(24): 'and' requires operands of type bool but rhs is of type int.
ERROR(25): 'or' requires operands of type bool but lhs is of type int.
ERROR(25): 'or' requires operands of type bool but rhs is of type int.
ERROR(27): '!=' requires that either both or neither operands be arrays.
ERROR(28): The operation '<=' does not work with arrays.
ERROR(29): '==' requires that either both or neither operands be arrays.
ERROR(30): The operation '>=' does not work with arrays.
ERROR(31): The operation '<' does not work with arrays.
ERROR(32): The operation '>' does not work with arrays.
ERROR(33): The operation '*=' does not work with arrays.
ERROR(34): The operation '+=' does not work with arrays.
ERROR(35): The operation '-=' does not work with arrays.
ERROR(36): The operation '/=' does not work with arrays.
ERROR(37): The operation '+' does not work with arrays.
ERROR(38): The operation '-' does not work with arrays.
ERROR(39): The operation '*' does not work with arrays.
ERROR(40): The operation '/' does not work with arrays.
ERROR(41): The operation '%' does not work with arrays.
ERROR(42): 'and' requires operands of type bool but lhs is of type int.
ERROR(42): 'and' requires operands of type bool but rhs is of type int.
ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): 'or' requires operands of type bool but lhs is of type int.
ERROR(43): 'or' requires operands of type bool but rhs is of type int.
ERROR(43): The operation 'or' does not work with arrays.
ERROR(44): '=' requires that either both or neither operands be arrays.
ERROR(45): '!=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(46): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(47): '==' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(48): '>=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(49): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(50): '>' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(51): '*=' requires operands of type int but rhs is of type char.
ERROR(52): '+=' requires operands of type int but rhs is of type char.
ERROR(53): '-=' requires operands of type int but rhs is of type char.
ERROR(54): '/=' requires operands of type int but rhs is of type char.
ERROR(55): '+' requires operands of type int but rhs is of type char.
ERROR(56): '-' requires operands of type int but rhs is of type char.
ERROR(57): '*' requires operands of type int but rhs is of type char.
ERROR(58): '/' requires operands of type int but rhs is of type char.
ERROR(59): '%' requires operands of type int but rhs is of type char.
ERROR(60): 'and' requires operands of type bool but lhs is of type int.
ERROR(60): 'and' requires operands of type bool but rhs is of type char.
ERROR(61): 'or' requires operands of type bool but lhs is of type int.
ERROR(61): 'or' requires operands of type bool but rhs is of type char.
ERROR(62): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(63): '!=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(63): '!=' requires that either both or neither operands be arrays.
ERROR(64): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(64): The operation '<=' does not work with arrays.
ERROR(65): '==' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(65): '==' requires that either both or neither operands be arrays.
ERROR(66): '>=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(66): The operation '>=' does not work with arrays.
ERROR(67): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(67): The operation '<' does not work with arrays.
ERROR(68): '>' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(68): The operation '>' does not work with arrays.
ERROR(69): '*=' requires operands of type int but rhs is of type char.
ERROR(69): The operation '*=' does not work with arrays.
ERROR(70): '+=' requires operands of type int but rhs is of type char.
ERROR(70): The operation '+=' does not work with arrays.
ERROR(71): '-=' requires operands of type int but rhs is of type char.
ERROR(71): The operation '-=' does not work with arrays.
ERROR(72): '/=' requires operands of type int but rhs is of type char.
ERROR(72): The operation '/=' does not work with arrays.
ERROR(73): '+' requires operands of type int but rhs is of type char.
ERROR(73): The operation '+' does not work with arrays.
ERROR(74): '-' requires operands of type int but rhs is of type char.
ERROR(74): The operation '-' does not work with arrays.
ERROR(75): '*' requires operands of type int but rhs is of type char.
ERROR(75): The operation '*' does not work with arrays.
ERROR(76): '/' requires operands of type int but rhs is of type char.
ERROR(76): The operation '/' does not work with arrays.
ERROR(77): '%' requires operands of type int but rhs is of type char.
ERROR(77): The operation '%' does not work with arrays.
ERROR(78): 'and' requires operands of type bool but lhs is of type int.
ERROR(78): 'and' requires operands of type bool but rhs is of type char.
ERROR(78): The operation 'and' does not work with arrays.
ERROR(79): 'or' requires operands of type bool but lhs is of type int.
ERROR(79): 'or' requires operands of type bool but rhs is of type char.
ERROR(79): The operation 'or' does not work with arrays.
ERROR(80): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(80): '=' requires that either both or neither operands be arrays.
ERROR(81): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(82): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(83): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(84): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(85): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(86): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(87): '*=' requires operands of type int but rhs is of type bool.
ERROR(88): '+=' requires operands of type int but rhs is of type bool.
ERROR(89): '-=' requires operands of type int but rhs is of type bool.
ERROR(90): '/=' requires operands of type int but rhs is of type bool.
ERROR(91): '+' requires operands of type int but rhs is of type bool.
ERROR(92): '-' requires operands of type int but rhs is of type bool.
ERROR(93): '*' requires operands of type int but rhs is of type bool.
ERROR(94): '/' requires operands of type int but rhs is of type bool.
ERROR(95): '%' requires operands of type int but rhs is of type bool.
ERROR(96): 'and' requires operands of type bool but lhs is of type int.
ERROR(97): 'or' requires operands of type bool but lhs is of type int.
ERROR(98): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(99): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(99): '!=' requires that either both or neither operands be arrays.
ERROR(100): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(100): The operation '<=' does not work with arrays.
ERROR(101): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(101): '==' requires that either both or neither operands be arrays.
ERROR(102): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(102): The operation '>=' does not work with arrays.
ERROR(103): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(103): The operation '<' does not work with arrays.
ERROR(104): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(104): The operation '>' does not work with arrays.
ERROR(105): '*=' requires operands of type int but rhs is of type bool.
ERROR(105): The operation '*=' does not work with arrays.
ERROR(106): '+=' requires operands of type int but rhs is of type bool.
ERROR(106): The operation '+=' does not work with arrays.
ERROR(107): '-=' requires operands of type int but rhs is of type bool.
ERROR(107): The operation '-=' does not work with arrays.
ERROR(108): '/=' requires operands of type int but rhs is of type bool.
ERROR(108): The operation '/=' does not work with arrays.
ERROR(109): '+' requires operands of type int but rhs is of type bool.
ERROR(109): The operation '+' does not work with arrays.
ERROR(110): '-' requires operands of type int but rhs is of type bool.
ERROR(110): The operation '-' does not work with arrays.
ERROR(111): '*' requires operands of type int but rhs is of type bool.
ERROR(111): The operation '*' does not work with arrays.
ERROR(112): '/' requires operands of type int but rhs is of type bool.
ERROR(112): The operation '/' does not work with arrays.
ERROR(113): '%' requires operands of type int but rhs is of type bool.
ERROR(113): The operation '%' does not work with arrays.
ERROR(114): 'and' requires operands of type bool but lhs is of type int.
ERROR(114): The operation 'and' does not work with arrays.
ERROR(115): 'or' requires operands of type bool but lhs is of type int.
ERROR(115): The operation 'or' does not work with arrays.
ERROR(116): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(116): '=' requires that either both or neither operands be arrays.
ERROR(117): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(118): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(119): '==' requires operands of NONVOID but rhs is of type void.
ERROR(120): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(121): '<' requires operands of type char or type int but rhs is of type void.
ERROR(122): '>' requires operands of type char or type int but rhs is of type void.
ERROR(123): '*=' requires operands of type int but rhs is of type void.
ERROR(124): '+=' requires operands of type int but rhs is of type void.
ERROR(125): '-=' requires operands of type int but rhs is of type void.
ERROR(126): '/=' requires operands of type int but rhs is of type void.
ERROR(127): '+' requires operands of type int but rhs is of type void.
ERROR(128): '-' requires operands of type int but rhs is of type void.
ERROR(129): '*' requires operands of type int but rhs is of type void.
ERROR(130): '/' requires operands of type int but rhs is of type void.
ERROR(131): '%' requires operands of type int but rhs is of type void.
ERROR(132): 'and' requires operands of type bool but lhs is of type int.
ERROR(132): 'and' requires operands of type bool but rhs is of type void.
ERROR(133): 'or' requires operands of type bool but lhs is of type int.
ERROR(133): 'or' requires operands of type bool but rhs is of type void.
ERROR(134): '=' requires operands of NONVOID but rhs is of type void.
ERROR(135): '!=' requires that either both or neither operands be arrays.
ERROR(136): The operation '<=' does not work with arrays.
ERROR(137): '==' requires that either both or neither operands be arrays.
ERROR(138): The operation '>=' does not work with arrays.
ERROR(139): The operation '<' does not work with arrays.
ERROR(140): The operation '>' does not work with arrays.
ERROR(141): The operation '*=' does not work with arrays.
ERROR(142): The operation '+=' does not work with arrays.
ERROR(143): The operation '-=' does not work with arrays.
ERROR(144): The operation '/=' does not work with arrays.
ERROR(145): The operation '+' does not work with arrays.
ERROR(146): The operation '-' does not work with arrays.
ERROR(147): The operation '*' does not work with arrays.
ERROR(148): The operation '/' does not work with arrays.
ERROR(149): The operation '%' does not work with arrays.
ERROR(150): 'and' requires operands of type bool but lhs is of type int.
ERROR(150): 'and' requires operands of type bool but rhs is of type int.
ERROR(150): The operation 'and' does not work with arrays.
ERROR(151): 'or' requires operands of type bool but lhs is of type int.
ERROR(151): 'or' requires operands of type bool but rhs is of type int.
ERROR(151): The operation 'or' does not work with arrays.
ERROR(152): '=' requires that either both or neither operands be arrays.
ERROR(154): The operation '<=' does not work with arrays.
ERROR(156): The operation '>=' does not work with arrays.
ERROR(157): The operation '<' does not work with arrays.
ERROR(158): The operation '>' does not work with arrays.
ERROR(159): The operation '*=' does not work with arrays.
ERROR(160): The operation '+=' does not work with arrays.
ERROR(161): The operation '-=' does not work with arrays.
ERROR(162): The operation '/=' does not work with arrays.
ERROR(163): The operation '+' does not work with arrays.
ERROR(164): The operation '-' does not work with arrays.
ERROR(165): The operation '*' does not work with arrays.
ERROR(166): The operation '/' does not work with arrays.
ERROR(167): The operation '%' does not work with arrays.
ERROR(168): 'and' requires operands of type bool but lhs is of type int.
ERROR(168): 'and' requires operands of type bool but rhs is of type int.
ERROR(168): The operation 'and' does not work with arrays.
ERROR(169): 'or' requires operands of type bool but lhs is of type int.
ERROR(169): 'or' requires operands of type bool but rhs is of type int.
ERROR(169): The operation 'or' does not work with arrays.
ERROR(171): '!=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(171): '!=' requires that either both or neither operands be arrays.
ERROR(172): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(172): The operation '<=' does not work with arrays.
ERROR(173): '==' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(173): '==' requires that either both or neither operands be arrays.
ERROR(174): '>=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(174): The operation '>=' does not work with arrays.
ERROR(175): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(175): The operation '<' does not work with arrays.
ERROR(176): '>' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(176): The operation '>' does not work with arrays.
ERROR(177): '*=' requires operands of type int but rhs is of type char.
ERROR(177): The operation '*=' does not work with arrays.
ERROR(178): '+=' requires operands of type int but rhs is of type char.
ERROR(178): The operation '+=' does not work with arrays.
ERROR(179): '-=' requires operands of type int but rhs is of type char.
ERROR(179): The operation '-=' does not work with arrays.
ERROR(180): '/=' requires operands of type int but rhs is of type char.
ERROR(180): The operation '/=' does not work with arrays.
ERROR(181): '+' requires operands of type int but rhs is of type char.
ERROR(181): The operation '+' does not work with arrays.
ERROR(182): '-' requires operands of type int but rhs is of type char.
ERROR(182): The operation '-' does not work with arrays.
ERROR(183): '*' requires operands of type int but rhs is of type char.
ERROR(183): The operation '*' does not work with arrays.
ERROR(184): '/' requires operands of type int but rhs is of type char.
ERROR(184): The operation '/' does not work with arrays.
ERROR(185): '%' requires operands of type int but rhs is of type char.
ERROR(185): The operation '%' does not work with arrays.
ERROR(186): 'and' requires operands of type bool but lhs is of type int.
ERROR(186): 'and' requires operands of type bool but rhs is of type char.
ERROR(186): The operation 'and' does not work with arrays.
ERROR(187): 'or' requires operands of type bool but lhs is of type int.
ERROR(187): 'or' requires operands of type bool but rhs is of type char.
ERROR(187): The operation 'or' does not work with arrays.
ERROR(188): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(188): '=' requires that either both or neither operands be arrays.
ERROR(189): '!=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(190): '<=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(190): The operation '<=' does not work with arrays.
ERROR(191): '==' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(192): '>=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(192): The operation '>=' does not work with arrays.
ERROR(193): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(193): The operation '<' does not work with arrays.
ERROR(194): '>' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(194): The operation '>' does not work with arrays.
ERROR(195): '*=' requires operands of type int but rhs is of type char.
ERROR(195): The operation '*=' does not work with arrays.
ERROR(196): '+=' requires operands of type int but rhs is of type char.
ERROR(196): The operation '+=' does not work with arrays.
ERROR(197): '-=' requires operands of type int but rhs is of type char.
ERROR(197): The operation '-=' does not work with arrays.
ERROR(198): '/=' requires operands of type int but rhs is of type char.
ERROR(198): The operation '/=' does not work with arrays.
ERROR(199): '+' requires operands of type int but rhs is of type char.
ERROR(199): The operation '+' does not work with arrays.
ERROR(200): '-' requires operands of type int but rhs is of type char.
ERROR(200): The operation '-' does not work with arrays.
ERROR(201): '*' requires operands of type int but rhs is of type char.
ERROR(201): The operation '*' does not work with arrays.
ERROR(202): '/' requires operands of type int but rhs is of type char.
ERROR(202): The operation '/' does not work with arrays.
ERROR(203): '%' requires operands of type int but rhs is of type char.
ERROR(203): The operation '%' does not work with arrays.
ERROR(204): 'and' requires operands of type bool but lhs is of type int.
ERROR(204): 'and' requires operands of type bool but rhs is of type char.
ERROR(204): The operation 'and' does not work with arrays.
ERROR(205): 'or' requires operands of type bool but lhs is of type int.
ERROR(205): 'or' requires operands of type bool but rhs is of type char.
ERROR(205): The operation 'or' does not work with arrays.
ERROR(206): '=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(207): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(207): '!=' requires that either both or neither operands be arrays.
ERROR(208): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(208): The operation '<=' does not work with arrays.
ERROR(209): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(209): '==' requires that either both or neither operands be arrays.
ERROR(210): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(210): The operation '>=' does not work with arrays.
ERROR(211): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(211): The operation '<' does not work with arrays.
ERROR(212): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(212): The operation '>' does not work with arrays.
ERROR(213): '*=' requires operands of type int but rhs is of type bool.
ERROR(213): The operation '*=' does not work with arrays.
ERROR(214): '+=' requires operands of type int but rhs is of type bool.
ERROR(214): The operation '+=' does not work with arrays.
ERROR(215): '-=' requires operands of type int but rhs is of type bool.
ERROR(215): The operation '-=' does not work with arrays.
ERROR(216): '/=' requires operands of type int but rhs is of type bool.
ERROR(216): The operation '/=' does not work with arrays.
ERROR(217): '+' requires operands of type int but rhs is of type bool.
ERROR(217): The operation '+' does not work with arrays.
ERROR(218): '-' requires operands of type int but rhs is of type bool.
ERROR(218): The operation '-' does not work with arrays.
ERROR(219): '*' requires operands of type int but rhs is of type bool.
ERROR(219): The operation '*' does not work with arrays.
ERROR(220): '/' requires operands of type int but rhs is of type bool.
ERROR(220): The operation '/' does not work with arrays.
ERROR(221): '%' requires operands of type int but rhs is of type bool.
ERROR(221): The operation '%' does not work with arrays.
ERROR(222): 'and' requires operands of type bool but lhs is of type int.
ERROR(222): The operation 'and' does not work with arrays.
ERROR(223): 'or' requires operands of type bool but lhs is of type int.
ERROR(223): The operation 'or' does not work with arrays.
ERROR(224): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(224): '=' requires that either both or neither operands be arrays.
ERROR(225): '!=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(226): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(226): The operation '<=' does not work with arrays.
ERROR(227): '==' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(228): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(228): The operation '>=' does not work with arrays.
ERROR(229): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(229): The operation '<' does not work with arrays.
ERROR(230): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(230): The operation '>' does not work with arrays.
ERROR(231): '*=' requires operands of type int but rhs is of type bool.
ERROR(231): The operation '*=' does not work with arrays.
ERROR(232): '+=' requires operands of type int but rhs is of type bool.
ERROR(232): The operation '+=' does not work with arrays.
ERROR(233): '-=' requires operands of type int but rhs is of type bool.
ERROR(233): The operation '-=' does not work with arrays.
ERROR(234): '/=' requires operands of type int but rhs is of type bool.
ERROR(234): The operation '/=' does not work with arrays.
ERROR(235): '+' requires operands of type int but rhs is of type bool.
ERROR(235): The operation '+' does not work with arrays.
ERROR(236): '-' requires operands of type int but rhs is of type bool.
ERROR(236): The operation '-' does not work with arrays.
ERROR(237): '*' requires operands of type int but rhs is of type bool.
ERROR(237): The operation '*' does not work with arrays.
ERROR(238): '/' requires operands of type int but rhs is of type bool.
ERROR(238): The operation '/' does not work with arrays.
ERROR(239): '%' requires operands of type int but rhs is of type bool.
ERROR(239): The operation '%' does not work with arrays.
ERROR(240): 'and' requires operands of type bool but lhs is of type int.
ERROR(240): The operation 'and' does not work with arrays.
ERROR(241): 'or' requires operands of type bool but lhs is of type int.
ERROR(241): The operation 'or' does not work with arrays.
ERROR(242): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(243): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(243): '!=' requires that either both or neither operands be arrays.
ERROR(244): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(244): The operation '<=' does not work with arrays.
ERROR(245): '==' requires operands of NONVOID but rhs is of type void.
ERROR(245): '==' requires that either both or neither operands be arrays.
ERROR(246): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(246): The operation '>=' does not work with arrays.
ERROR(247): '<' requires operands of type char or type int but rhs is of type void.
ERROR(247): The operation '<' does not work with arrays.
ERROR(248): '>' requires operands of type char or type int but rhs is of type void.
ERROR(248): The operation '>' does not work with arrays.
ERROR(249): '*=' requires operands of type int but rhs is of type void.
ERROR(249): The operation '*=' does not work with arrays.
ERROR(250): '+=' requires operands of type int but rhs is of type void.
ERROR(250): The operation '+=' does not work with arrays.
ERROR(251): '-=' requires operands of type int but rhs is of type void.
ERROR(251): The operation '-=' does not work with arrays.
ERROR(252): '/=' requires operands of type int but rhs is of type void.
ERROR(252): The operation '/=' does not work with arrays.
ERROR(253): '+' requires operands of type int but rhs is of type void.
ERROR(253): The operation '+' does not work with arrays.
ERROR(254): '-' requires operands of type int but rhs is of type void.
ERROR(254): The operation '-' does not work with arrays.
ERROR(255): '*' requires operands of type int but rhs is of type void.
ERROR(255): The operation '*' does not work with arrays.
ERROR(256): '/' requires operands of type int but rhs is of type void.
ERROR(256): The operation '/' does not work with arrays.
ERROR(257): '%' requires operands of type int but rhs is of type void.
ERROR(257): The operation '%' does not work with arrays.
ERROR(258): 'and' requires operands of type bool but lhs is of type int.
ERROR(258): 'and' requires operands of type bool but rhs is of type void.
ERROR(258): The operation 'and' does not work with arrays.
ERROR(259): 'or' requires operands of type bool but lhs is of type int.
ERROR(259): 'or' requires operands of type bool but rhs is of type void.
ERROR(259): The operation 'or' does not work with arrays.
ERROR(260): '=' requires operands of NONVOID but rhs is of type void.
ERROR(260): '=' requires that either both or neither operands be arrays.
ERROR(261): '!=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(262): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(263): '==' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(264): '>=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(265): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(266): '>' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(267): '*=' requires operands of type int but lhs is of type char.
ERROR(268): '+=' requires operands of type int but lhs is of type char.
ERROR(269): '-=' requires operands of type int but lhs is of type char.
ERROR(270): '/=' requires operands of type int but lhs is of type char.
ERROR(271): '+' requires operands of type int but lhs is of type char.
ERROR(272): '-' requires operands of type int but lhs is of type char.
ERROR(273): '*' requires operands of type int but lhs is of type char.
ERROR(274): '/' requires operands of type int but lhs is of type char.
ERROR(275): '%' requires operands of type int but lhs is of type char.
ERROR(276): 'and' requires operands of type bool but lhs is of type char.
ERROR(276): 'and' requires operands of type bool but rhs is of type int.
ERROR(277): 'or' requires operands of type bool but lhs is of type char.
ERROR(277): 'or' requires operands of type bool but rhs is of type int.
ERROR(278): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(279): '!=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(279): '!=' requires that either both or neither operands be arrays.
ERROR(280): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(280): The operation '<=' does not work with arrays.
ERROR(281): '==' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(281): '==' requires that either both or neither operands be arrays.
ERROR(282): '>=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(282): The operation '>=' does not work with arrays.
ERROR(283): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(283): The operation '<' does not work with arrays.
ERROR(284): '>' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(284): The operation '>' does not work with arrays.
ERROR(285): '*=' requires operands of type int but lhs is of type char.
ERROR(285): The operation '*=' does not work with arrays.
ERROR(286): '+=' requires operands of type int but lhs is of type char.
ERROR(286): The operation '+=' does not work with arrays.
ERROR(287): '-=' requires operands of type int but lhs is of type char.
ERROR(287): The operation '-=' does not work with arrays.
ERROR(288): '/=' requires operands of type int but lhs is of type char.
ERROR(288): The operation '/=' does not work with arrays.
ERROR(289): '+' requires operands of type int but lhs is of type char.
ERROR(289): The operation '+' does not work with arrays.
ERROR(290): '-' requires operands of type int but lhs is of type char.
ERROR(290): The operation '-' does not work with arrays.
ERROR(291): '*' requires operands of type int but lhs is of type char.
ERROR(291): The operation '*' does not work with arrays.
ERROR(292): '/' requires operands of type int but lhs is of type char.
ERROR(292): The operation '/' does not work with arrays.
ERROR(293): '%' requires operands of type int but lhs is of type char.
ERROR(293): The operation '%' does not work with arrays.
ERROR(294): 'and' requires operands of type bool but lhs is of type char.
ERROR(294): 'and' requires operands of type bool but rhs is of type int.
ERROR(294): The operation 'and' does not work with arrays.
ERROR(295): 'or' requires operands of type bool but lhs is of type char.
ERROR(295): 'or' requires operands of type bool but rhs is of type int.
ERROR(295): The operation 'or' does not work with arrays.
ERROR(296): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(296): '=' requires that either both or neither operands be arrays.
ERROR(303): '*=' requires operands of type int but lhs is of type char.
ERROR(303): '*=' requires operands of type int but rhs is of type char.
ERROR(304): '+=' requires operands of type int but lhs is of type char.
ERROR(304): '+=' requires operands of type int but rhs is of type char.
ERROR(305): '-=' requires operands of type int but lhs is of type char.
ERROR(305): '-=' requires operands of type int but rhs is of type char.
ERROR(306): '/=' requires operands of type int but lhs is of type char.
ERROR(306): '/=' requires operands of type int but rhs is of type char.
ERROR(307): '+' requires operands of type int but lhs is of type char.
ERROR(307): '+' requires operands of type int but rhs is of type char.
ERROR(308): '-' requires operands of type int but lhs is of type char.
ERROR(308): '-' requires operands of type int but rhs is of type char.
ERROR(309): '*' requires operands of type int but lhs is of type char.
ERROR(309): '*' requires operands of type int but rhs is of type char.
ERROR(310): '/' requires operands of type int but lhs is of type char.
ERROR(310): '/' requires operands of type int but rhs is of type char.
ERROR(311): '%' requires operands of type int but lhs is of type char.
ERROR(311): '%' requires operands of type int but rhs is of type char.
ERROR(312): 'and' requires operands of type bool but lhs is of type char.
ERROR(312): 'and' requires operands of type bool but rhs is of type char.
ERROR(313): 'or' requires operands of type bool but lhs is of type char.
ERROR(313): 'or' requires operands of type bool but rhs is of type char.
ERROR(315): '!=' requires that either both or neither operands be arrays.
ERROR(316): The operation '<=' does not work with arrays.
ERROR(317): '==' requires that either both or neither operands be arrays.
ERROR(318): The operation '>=' does not work with arrays.
ERROR(319): The operation '<' does not work with arrays.
ERROR(320): The operation '>' does not work with arrays.
ERROR(321): '*=' requires operands of type int but lhs is of type char.
ERROR(321): '*=' requires operands of type int but rhs is of type char.
ERROR(321): The operation '*=' does not work with arrays.
ERROR(322): '+=' requires operands of type int but lhs is of type char.
ERROR(322): '+=' requires operands of type int but rhs is of type char.
ERROR(322): The operation '+=' does not work with arrays.
ERROR(323): '-=' requires operands of type int but lhs is of type char.
ERROR(323): '-=' requires operands of type int but rhs is of type char.
ERROR(323): The operation '-=' does not work with arrays.
ERROR(324): '/=' requires operands of type int but lhs is of type char.
ERROR(324): '/=' requires operands of type int but rhs is of type char.
ERROR(324): The operation '/=' does not work with arrays.
ERROR(325): '+' requires operands of type int but lhs is of type char.
ERROR(325): '+' requires operands of type int but rhs is of type char.
ERROR(325): The operation '+' does not work with arrays.
ERROR(326): '-' requires operands of type int but lhs is of type char.
ERROR(326): '-' requires operands of type int but rhs is of type char.
ERROR(326): The operation '-' does not work with arrays.
ERROR(327): '*' requires operands of type int but lhs is of type char.
ERROR(327): '*' requires operands of type int but rhs is of type char.
ERROR(327): The operation '*' does not work with arrays.
ERROR(328): '/' requires operands of type int but lhs is of type char.
ERROR(328): '/' requires operands of type int but rhs is of type char.
ERROR(328): The operation '/' does not work with arrays.
ERROR(329): '%' requires operands of type int but lhs is of type char.
ERROR(329): '%' requires operands of type int but rhs is of type char.
ERROR(329): The operation '%' does not work with arrays.
ERROR(330): 'and' requires operands of type bool but lhs is of type char.
ERROR(330): 'and' requires operands of type bool but rhs is of type char.
ERROR(330): The operation 'and' does not work with arrays.
ERROR(331): 'or' requires operands of type bool but lhs is of type char.
ERROR(331): 'or' requires operands of type bool but rhs is of type char.
ERROR(331): The operation 'or' does not work with arrays.
ERROR(332): '=' requires that either both or neither operands be arrays.
ERROR(333): '!=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(334): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(335): '==' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(336): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(337): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(338): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(339): '*=' requires operands of type int but lhs is of type char.
ERROR(339): '*=' requires operands of type int but rhs is of type bool.
ERROR(340): '+=' requires operands of type int but lhs is of type char.
ERROR(340): '+=' requires operands of type int but rhs is of type bool.
ERROR(341): '-=' requires operands of type int but lhs is of type char.
ERROR(341): '-=' requires operands of type int but rhs is of type bool.
ERROR(342): '/=' requires operands of type int but lhs is of type char.
ERROR(342): '/=' requires operands of type int but rhs is of type bool.
ERROR(343): '+' requires operands of type int but lhs is of type char.
ERROR(343): '+' requires operands of type int but rhs is of type bool.
ERROR(344): '-' requires operands of type int but lhs is of type char.
ERROR(344): '-' requires operands of type int but rhs is of type bool.
ERROR(345): '*' requires operands of type int but lhs is of type char.
ERROR(345): '*' requires operands of type int but rhs is of type bool.
ERROR(346): '/' requires operands of type int but lhs is of type char.
ERROR(346): '/' requires operands of type int but rhs is of type bool.
ERROR(347): '%' requires operands of type int but lhs is of type char.
ERROR(347): '%' requires operands of type int but rhs is of type bool.
ERROR(348): 'and' requires operands of type bool but lhs is of type char.
ERROR(349): 'or' requires operands of type bool but lhs is of type char.
ERROR(350): '=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(351): '!=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(351): '!=' requires that either both or neither operands be arrays.
ERROR(352): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(352): The operation '<=' does not work with arrays.
ERROR(353): '==' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(353): '==' requires that either both or neither operands be arrays.
ERROR(354): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(354): The operation '>=' does not work with arrays.
ERROR(355): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(355): The operation '<' does not work with arrays.
ERROR(356): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(356): The operation '>' does not work with arrays.
ERROR(357): '*=' requires operands of type int but lhs is of type char.
ERROR(357): '*=' requires operands of type int but rhs is of type bool.
ERROR(357): The operation '*=' does not work with arrays.
ERROR(358): '+=' requires operands of type int but lhs is of type char.
ERROR(358): '+=' requires operands of type int but rhs is of type bool.
ERROR(358): The operation '+=' does not work with arrays.
ERROR(359): '-=' requires operands of type int but lhs is of type char.
ERROR(359): '-=' requires operands of type int but rhs is of type bool.
ERROR(359): The operation '-=' does not work with arrays.
ERROR(360): '/=' requires operands of type int but lhs is of type char.
ERROR(360): '/=' requires operands of type int but rhs is of type bool.
ERROR(360): The operation '/=' does not work with arrays.
ERROR(361): '+' requires operands of type int but lhs is of type char.
ERROR(361): '+' requires operands of type int but rhs is of type bool.
ERROR(361): The operation '+' does not work with arrays.
ERROR(362): '-' requires operands of type int but lhs is of type char.
ERROR(362): '-' requires operands of type int but rhs is of type bool.
ERROR(362): The operation '-' does not work with arrays.
ERROR(363): '*' requires operands of type int but lhs is of type char.
ERROR(363): '*' requires operands of type int but rhs is of type bool.
ERROR(363): The operation '*' does not work with arrays.
ERROR(364): '/' requires operands of type int but lhs is of type char.
ERROR(364): '/' requires operands of type int but rhs is of type bool.
ERROR(364): The operation '/' does not work with arrays.
ERROR(365): '%' requires operands of type int but lhs is of type char.
ERROR(365): '%' requires operands of type int but rhs is of type bool.
ERROR(365): The operation '%' does not work with arrays.
ERROR(366): 'and' requires operands of type bool but lhs is of type char.
ERROR(366): The operation 'and' does not work with arrays.
ERROR(367): 'or' requires operands of type bool but lhs is of type char.
ERROR(367): The operation 'or' does not work with arrays.
ERROR(368): '=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(368): '=' requires that either both or neither operands be arrays.
ERROR(369): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(370): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(371): '==' requires operands of NONVOID but rhs is of type void.
ERROR(372): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(373): '<' requires operands of type char or type int but rhs is of type void.
ERROR(374): '>' requires operands of type char or type int but rhs is of type void.
ERROR(375): '*=' requires operands of type int but lhs is of type char.
ERROR(375): '*=' requires operands of type int but rhs is of type void.
ERROR(376): '+=' requires operands of type int but lhs is of type char.
ERROR(376): '+=' requires operands of type int but rhs is of type void.
ERROR(377): '-=' requires operands of type int but lhs is of type char.
ERROR(377): '-=' requires operands of type int but rhs is of type void.
ERROR(378): '/=' requires operands of type int but lhs is of type char.
ERROR(378): '/=' requires operands of type int but rhs is of type void.
ERROR(379): '+' requires operands of type int but lhs is of type char.
ERROR(379): '+' requires operands of type int but rhs is of type void.
ERROR(380): '-' requires operands of type int but lhs is of type char.
ERROR(380): '-' requires operands of type int but rhs is of type void.
ERROR(381): '*' requires operands of type int but lhs is of type char.
ERROR(381): '*' requires operands of type int but rhs is of type void.
ERROR(382): '/' requires operands of type int but lhs is of type char.
ERROR(382): '/' requires operands of type int but rhs is of type void.
ERROR(383): '%' requires operands of type int but lhs is of type char.
ERROR(383): '%' requires operands of type int but rhs is of type void.
ERROR(384): 'and' requires operands of type bool but lhs is of type char.
ERROR(384): 'and' requires operands of type bool but rhs is of type void.
ERROR(385): 'or' requires operands of type bool but lhs is of type char.
ERROR(385): 'or' requires operands of type bool but rhs is of type void.
ERROR(386): '=' requires operands of NONVOID but rhs is of type void.
ERROR(387): '!=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(387): '!=' requires that either both or neither operands be arrays.
ERROR(388): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(388): The operation '<=' does not work with arrays.
ERROR(389): '==' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(389): '==' requires that either both or neither operands be arrays.
ERROR(390): '>=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(390): The operation '>=' does not work with arrays.
ERROR(391): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(391): The operation '<' does not work with arrays.
ERROR(392): '>' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(392): The operation '>' does not work with arrays.
ERROR(393): '*=' requires operands of type int but lhs is of type char.
ERROR(393): The operation '*=' does not work with arrays.
ERROR(394): '+=' requires operands of type int but lhs is of type char.
ERROR(394): The operation '+=' does not work with arrays.
ERROR(395): '-=' requires operands of type int but lhs is of type char.
ERROR(395): The operation '-=' does not work with arrays.
ERROR(396): '/=' requires operands of type int but lhs is of type char.
ERROR(396): The operation '/=' does not work with arrays.
ERROR(397): '+' requires operands of type int but lhs is of type char.
ERROR(397): The operation '+' does not work with arrays.
ERROR(398): '-' requires operands of type int but lhs is of type char.
ERROR(398): The operation '-' does not work with arrays.
ERROR(399): '*' requires operands of type int but lhs is of type char.
ERROR(399): The operation '*' does not work with arrays.
ERROR(400): '/' requires operands of type int but lhs is of type char.
ERROR(400): The operation '/' does not work with arrays.
ERROR(401): '%' requires operands of type int but lhs is of type char.
ERROR(401): The operation '%' does not work with arrays.
ERROR(402): 'and' requires operands of type bool but lhs is of type char.
ERROR(402): 'and' requires operands of type bool but rhs is of type int.
ERROR(402): The operation 'and' does not work with arrays.
ERROR(403): 'or' requires operands of type bool but lhs is of type char.
ERROR(403): 'or' requires operands of type bool but rhs is of type int.
ERROR(403): The operation 'or' does not work with arrays.
ERROR(404): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(404): '=' requires that either both or neither operands be arrays.
ERROR(405): '!=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(406): '<=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(406): The operation '<=' does not work with arrays.
ERROR(407): '==' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(408): '>=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(408): The operation '>=' does not work with arrays.
ERROR(409): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(409): The operation '<' does not work with arrays.
ERROR(410): '>' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(410): The operation '>' does not work with arrays.
ERROR(411): '*=' requires operands of type int but lhs is of type char.
ERROR(411): The operation '*=' does not work with arrays.
ERROR(412): '+=' requires operands of type int but lhs is of type char.
ERROR(412): The operation '+=' does not work with arrays.
ERROR(413): '-=' requires operands of type int but lhs is of type char.
ERROR(413): The operation '-=' does not work with arrays.
ERROR(414): '/=' requires operands of type int but lhs is of type char.
ERROR(414): The operation '/=' does not work with arrays.
ERROR(415): '+' requires operands of type int but lhs is of type char.
ERROR(415): The operation '+' does not work with arrays.
ERROR(416): '-' requires operands of type int but lhs is of type char.
ERROR(416): The operation '-' does not work with arrays.
ERROR(417): '*' requires operands of type int but lhs is of type char.
ERROR(417): The operation '*' does not work with arrays.
ERROR(418): '/' requires operands of type int but lhs is of type char.
ERROR(418): The operation '/' does not work with arrays.
ERROR(419): '%' requires operands of type int but lhs is of type char.
ERROR(419): The operation '%' does not work with arrays.
ERROR(420): 'and' requires operands of type bool but lhs is of type char.
ERROR(420): 'and' requires operands of type bool but rhs is of type int.
ERROR(420): The operation 'and' does not work with arrays.
ERROR(421): 'or' requires operands of type bool but lhs is of type char.
ERROR(421): 'or' requires operands of type bool but rhs is of type int.
ERROR(421): The operation 'or' does not work with arrays.
ERROR(422): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(423): '!=' requires that either both or neither operands be arrays.
ERROR(424): The operation '<=' does not work with arrays.
ERROR(425): '==' requires that either both or neither operands be arrays.
ERROR(426): The operation '>=' does not work with arrays.
ERROR(427): The operation '<' does not work with arrays.
ERROR(428): The operation '>' does not work with arrays.
ERROR(429): '*=' requires operands of type int but lhs is of type char.
ERROR(429): '*=' requires operands of type int but rhs is of type char.
ERROR(429): The operation '*=' does not work with arrays.
ERROR(430): '+=' requires operands of type int but lhs is of type char.
ERROR(430): '+=' requires operands of type int but rhs is of type char.
ERROR(430): The operation '+=' does not work with arrays.
ERROR(431): '-=' requires operands of type int but lhs is of type char.
ERROR(431): '-=' requires operands of type int but rhs is of type char.
ERROR(431): The operation '-=' does not work with arrays.
ERROR(432): '/=' requires operands of type int but lhs is of type char.
ERROR(432): '/=' requires operands of type int but rhs is of type char.
ERROR(432): The operation '/=' does not work with arrays.
ERROR(433): '+' requires operands of type int but lhs is of type char.
ERROR(433): '+' requires operands of type int but rhs is of type char.
ERROR(433): The operation '+' does not work with arrays.
ERROR(434): '-' requires operands of type int but lhs is of type char.
ERROR(434): '-' requires operands of type int but rhs is of type char.
ERROR(434): The operation '-' does not work with arrays.
ERROR(435): '*' requires operands of type int but lhs is of type char.
ERROR(435): '*' requires operands of type int but rhs is of type char.
ERROR(435): The operation '*' does not work with arrays.
ERROR(436): '/' requires operands of type int but lhs is of type char.
ERROR(436): '/' requires operands of type int but rhs is of type char.
ERROR(436): The operation '/' does not work with arrays.
ERROR(437): '%' requires operands of type int but lhs is of type char.
ERROR(437): '%' requires operands of type int but rhs is of type char.
ERROR(437): The operation '%' does not work with arrays.
ERROR(438): 'and' requires operands of type bool but lhs is of type char.
ERROR(438): 'and' requires operands of type bool but rhs is of type char.
ERROR(438): The operation 'and' does not work with arrays.
ERROR(439): 'or' requires operands of type bool but lhs is of type char.
ERROR(439): 'or' requires operands of type bool but rhs is of type char.
ERROR(439): The operation 'or' does not work with arrays.
ERROR(440): '=' requires that either both or neither operands be arrays.
ERROR(442): The operation '<=' does not work with arrays.
ERROR(444): The operation '>=' does not work with arrays.
ERROR(445): The operation '<' does not work with arrays.
ERROR(446): The operation '>' does not work with arrays.
ERROR(447): '*=' requires operands of type int but lhs is of type char.
ERROR(447): '*=' requires operands of type int but rhs is of type char.
ERROR(447): The operation '*=' does not work with arrays.
ERROR(448): '+=' requires operands of type int but lhs is of type char.
ERROR(448): '+=' requires operands of type int but rhs is of type char.
ERROR(448): The operation '+=' does not work with arrays.
ERROR(449): '-=' requires operands of type int but lhs is of type char.
ERROR(449): '-=' requires operands of type int but rhs is of type char.
ERROR(449): The operation '-=' does not work with arrays.
ERROR(450): '/=' requires operands of type int but lhs is of type char.
ERROR(450): '/=' requires operands of type int but rhs is of type char.
ERROR(450): The operation '/=' does not work with arrays.
ERROR(451): '+' requires operands of type int but lhs is of type char.
ERROR(451): '+' requires operands of type int but rhs is of type char.
ERROR(451): The operation '+' does not work with arrays.
ERROR(452): '-' requires operands of type int but lhs is of type char.
ERROR(452): '-' requires operands of type int but rhs is of type char.
ERROR(452): The operation '-' does not work with arrays.
ERROR(453): '*' requires operands of type int but lhs is of type char.
ERROR(453): '*' requires operands of type int but rhs is of type char.
ERROR(453): The operation '*' does not work with arrays.
ERROR(454): '/' requires operands of type int but lhs is of type char.
ERROR(454): '/' requires operands of type int but rhs is of type char.
ERROR(454): The operation '/' does not work with arrays.
ERROR(455): '%' requires operands of type int but lhs is of type char.
ERROR(455): '%' requires operands of type int but rhs is of type char.
ERROR(455): The operation '%' does not work with arrays.
ERROR(456): 'and' requires operands of type bool but lhs is of type char.
ERROR(456): 'and' requires operands of type bool but rhs is of type char.
ERROR(456): The operation 'and' does not work with arrays.
ERROR(457): 'or' requires operands of type bool but lhs is of type char.
ERROR(457): 'or' requires operands of type bool but rhs is of type char.
ERROR(457): The operation 'or' does not work with arrays.
ERROR(459): '!=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(459): '!=' requires that either both or neither operands be arrays.
ERROR(460): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(460): The operation '<=' does not work with arrays.
ERROR(461): '==' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(461): '==' requires that either both or neither operands be arrays.
ERROR(462): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(462): The operation '>=' does not work with arrays.
ERROR(463): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(463): The operation '<' does not work with arrays.
ERROR(464): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(464): The operation '>' does not work with arrays.
ERROR(465): '*=' requires operands of type int but lhs is of type char.
ERROR(465): '*=' requires operands of type int but rhs is of type bool.
ERROR(465): The operation '*=' does not work with arrays.
ERROR(466): '+=' requires operands of type int but lhs is of type char.
ERROR(466): '+=' requires operands of type int but rhs is of type bool.
ERROR(466): The operation '+=' does not work with arrays.
ERROR(467): '-=' requires operands of type int but lhs is of type char.
ERROR(467): '-=' requires operands of type int but rhs is of type bool.
ERROR(467): The operation '-=' does not work with arrays.
ERROR(468): '/=' requires operands of type int but lhs is of type char.
ERROR(468): '/=' requires operands of type int but rhs is of type bool.
ERROR(468): The operation '/=' does not work with arrays.
ERROR(469): '+' requires operands of type int but lhs is of type char.
ERROR(469): '+' requires operands of type int but rhs is of type bool.
ERROR(469): The operation '+' does not work with arrays.
ERROR(470): '-' requires operands of type int but lhs is of type char.
ERROR(470): '-' requires operands of type int but rhs is of type bool.
ERROR(470): The operation '-' does not work with arrays.
ERROR(471): '*' requires operands of type int but lhs is of type char.
ERROR(471): '*' requires operands of type int but rhs is of type bool.
ERROR(471): The operation '*' does not work with arrays.
ERROR(472): '/' requires operands of type int but lhs is of type char.
ERROR(472): '/' requires operands of type int but rhs is of type bool.
ERROR(472): The operation '/' does not work with arrays.
ERROR(473): '%' requires operands of type int but lhs is of type char.
ERROR(473): '%' requires operands of type int but rhs is of type bool.
ERROR(473): The operation '%' does not work with arrays.
ERROR(474): 'and' requires operands of type bool but lhs is of type char.
ERROR(474): The operation 'and' does not work with arrays.
ERROR(475): 'or' requires operands of type bool but lhs is of type char.
ERROR(475): The operation 'or' does not work with arrays.
ERROR(476): '=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(476): '=' requires that either both or neither operands be arrays.
ERROR(477): '!=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(478): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(478): The operation '<=' does not work with arrays.
ERROR(479): '==' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(480): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(480): The operation '>=' does not work with arrays.
ERROR(481): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(481): The operation '<' does not work with arrays.
ERROR(482): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(482): The operation '>' does not work with arrays.
ERROR(483): '*=' requires operands of type int but lhs is of type char.
ERROR(483): '*=' requires operands of type int but rhs is of type bool.
ERROR(483): The operation '*=' does not work with arrays.
ERROR(484): '+=' requires operands of type int but lhs is of type char.
ERROR(484): '+=' requires operands of type int but rhs is of type bool.
ERROR(484): The operation '+=' does not work with arrays.
ERROR(485): '-=' requires operands of type int but lhs is of type char.
ERROR(485): '-=' requires operands of type int but rhs is of type bool.
ERROR(485): The operation '-=' does not work with arrays.
ERROR(486): '/=' requires operands of type int but lhs is of type char.
ERROR(486): '/=' requires operands of type int but rhs is of type bool.
ERROR(486): The operation '/=' does not work with arrays.
ERROR(487): '+' requires operands of type int but lhs is of type char.
ERROR(487): '+' requires operands of type int but rhs is of type bool.
ERROR(487): The operation '+' does not work with arrays.
ERROR(488): '-' requires operands of type int but lhs is of type char.
ERROR(488): '-' requires operands of type int but rhs is of type bool.
ERROR(488): The operation '-' does not work with arrays.
ERROR(489): '*' requires operands of type int but lhs is of type char.
ERROR(489): '*' requires operands of type int but rhs is of type bool.
ERROR(489): The operation '*' does not work with arrays.
ERROR(490): '/' requires operands of type int but lhs is of type char.
ERROR(490): '/' requires operands of type int but rhs is of type bool.
ERROR(490): The operation '/' does not work with arrays.
ERROR(491): '%' requires operands of type int but lhs is of type char.
ERROR(491): '%' requires operands of type int but rhs is of type bool.
ERROR(491): The operation '%' does not work with arrays.
ERROR(492): 'and' requires operands of type bool but lhs is of type char.
ERROR(492): The operation 'and' does not work with arrays.
ERROR(493): 'or' requires operands of type bool but lhs is of type char.
ERROR(493): The operation 'or' does not work with arrays.
ERROR(494): '=' requires operands of the same type but lhs is type char and rhs is type bool.
ERROR(495): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(495): '!=' requires that either both or neither operands be arrays.
ERROR(496): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(496): The operation '<=' does not work with arrays.
ERROR(497): '==' requires operands of NONVOID but rhs is of type void.
ERROR(497): '==' requires that either both or neither operands be arrays.
ERROR(498): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(498): The operation '>=' does not work with arrays.
ERROR(499): '<' requires operands of type char or type int but rhs is of type void.
ERROR(499): The operation '<' does not work with arrays.
ERROR(500): '>' requires operands of type char or type int but rhs is of type void.
ERROR(500): The operation '>' does not work with arrays.
ERROR(501): '*=' requires operands of type int but lhs is of type char.
ERROR(501): '*=' requires operands of type int but rhs is of type void.
ERROR(501): The operation '*=' does not work with arrays.
ERROR(502): '+=' requires operands of type int but lhs is of type char.
ERROR(502): '+=' requires operands of type int but rhs is of type void.
ERROR(502): The operation '+=' does not work with arrays.
ERROR(503): '-=' requires operands of type int but lhs is of type char.
ERROR(503): '-=' requires operands of type int but rhs is of type void.
ERROR(503): The operation '-=' does not work with arrays.
ERROR(504): '/=' requires operands of type int but lhs is of type char.
ERROR(504): '/=' requires operands of type int but rhs is of type void.
ERROR(504): The operation '/=' does not work with arrays.
ERROR(505): '+' requires operands of type int but lhs is of type char.
ERROR(505): '+' requires operands of type int but rhs is of type void.
ERROR(505): The operation '+' does not work with arrays.
ERROR(506): '-' requires operands of type int but lhs is of type char.
ERROR(506): '-' requires operands of type int but rhs is of type void.
ERROR(506): The operation '-' does not work with arrays.
ERROR(507): '*' requires operands of type int but lhs is of type char.
ERROR(507): '*' requires operands of type int but rhs is of type void.
ERROR(507): The operation '*' does not work with arrays.
ERROR(508): '/' requires operands of type int but lhs is of type char.
ERROR(508): '/' requires operands of type int but rhs is of type void.
ERROR(508): The operation '/' does not work with arrays.
ERROR(509): '%' requires operands of type int but lhs is of type char.
ERROR(509): '%' requires operands of type int but rhs is of type void.
ERROR(509): The operation '%' does not work with arrays.
ERROR(510): 'and' requires operands of type bool but lhs is of type char.
ERROR(510): 'and' requires operands of type bool but rhs is of type void.
ERROR(510): The operation 'and' does not work with arrays.
ERROR(511): 'or' requires operands of type bool but lhs is of type char.
ERROR(511): 'or' requires operands of type bool but rhs is of type void.
ERROR(511): The operation 'or' does not work with arrays.
ERROR(512): '=' requires operands of NONVOID but rhs is of type void.
ERROR(512): '=' requires that either both or neither operands be arrays.
ERROR(513): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(514): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(515): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(516): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(517): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(518): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(519): '*=' requires operands of type int but lhs is of type bool.
ERROR(520): '+=' requires operands of type int but lhs is of type bool.
ERROR(521): '-=' requires operands of type int but lhs is of type bool.
ERROR(522): '/=' requires operands of type int but lhs is of type bool.
ERROR(523): '+' requires operands of type int but lhs is of type bool.
ERROR(524): '-' requires operands of type int but lhs is of type bool.
ERROR(525): '*' requires operands of type int but lhs is of type bool.
ERROR(526): '/' requires operands of type int but lhs is of type bool.
ERROR(527): '%' requires operands of type int but lhs is of type bool.
ERROR(528): 'and' requires operands of type bool but rhs is of type int.
ERROR(529): 'or' requires operands of type bool but rhs is of type int.
ERROR(530): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(531): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(531): '!=' requires that either both or neither operands be arrays.
ERROR(532): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(532): The operation '<=' does not work with arrays.
ERROR(533): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(533): '==' requires that either both or neither operands be arrays.
ERROR(534): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(534): The operation '>=' does not work with arrays.
ERROR(535): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(535): The operation '<' does not work with arrays.
ERROR(536): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(536): The operation '>' does not work with arrays.
ERROR(537): '*=' requires operands of type int but lhs is of type bool.
ERROR(537): The operation '*=' does not work with arrays.
ERROR(538): '+=' requires operands of type int but lhs is of type bool.
ERROR(538): The operation '+=' does not work with arrays.
ERROR(539): '-=' requires operands of type int but lhs is of type bool.
ERROR(539): The operation '-=' does not work with arrays.
ERROR(540): '/=' requires operands of type int but lhs is of type bool.
ERROR(540): The operation '/=' does not work with arrays.
ERROR(541): '+' requires operands of type int but lhs is of type bool.
ERROR(541): The operation '+' does not work with arrays.
ERROR(542): '-' requires operands of type int but lhs is of type bool.
ERROR(542): The operation '-' does not work with arrays.
ERROR(543): '*' requires operands of type int but lhs is of type bool.
ERROR(543): The operation '*' does not work with arrays.
ERROR(544): '/' requires operands of type int but lhs is of type bool.
ERROR(544): The operation '/' does not work with arrays.
ERROR(545): '%' requires operands of type int but lhs is of type bool.
ERROR(545): The operation '%' does not work with arrays.
ERROR(546): 'and' requires operands of type bool but rhs is of type int.
ERROR(546): The operation 'and' does not work with arrays.
ERROR(547): 'or' requires operands of type bool but rhs is of type int.
ERROR(547): The operation 'or' does not work with arrays.
ERROR(548): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(548): '=' requires that either both or neither operands be arrays.
ERROR(549): '!=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(550): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(551): '==' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(552): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(553): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(554): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(555): '*=' requires operands of type int but lhs is of type bool.
ERROR(555): '*=' requires operands of type int but rhs is of type char.
ERROR(556): '+=' requires operands of type int but lhs is of type bool.
ERROR(556): '+=' requires operands of type int but rhs is of type char.
ERROR(557): '-=' requires operands of type int but lhs is of type bool.
ERROR(557): '-=' requires operands of type int but rhs is of type char.
ERROR(558): '/=' requires operands of type int but lhs is of type bool.
ERROR(558): '/=' requires operands of type int but rhs is of type char.
ERROR(559): '+' requires operands of type int but lhs is of type bool.
ERROR(559): '+' requires operands of type int but rhs is of type char.
ERROR(560): '-' requires operands of type int but lhs is of type bool.
ERROR(560): '-' requires operands of type int but rhs is of type char.
ERROR(561): '*' requires operands of type int but lhs is of type bool.
ERROR(561): '*' requires operands of type int but rhs is of type char.
ERROR(562): '/' requires operands of type int but lhs is of type bool.
ERROR(562): '/' requires operands of type int but rhs is of type char.
ERROR(563): '%' requires operands of type int but lhs is of type bool.
ERROR(563): '%' requires operands of type int but rhs is of type char.
ERROR(564): 'and' requires operands of type bool but rhs is of type char.
ERROR(565): 'or' requires operands of type bool but rhs is of type char.
ERROR(566): '=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(567): '!=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(567): '!=' requires that either both or neither operands be arrays.
ERROR(568): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(568): The operation '<=' does not work with arrays.
ERROR(569): '==' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(569): '==' requires that either both or neither operands be arrays.
ERROR(570): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(570): The operation '>=' does not work with arrays.
ERROR(571): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(571): The operation '<' does not work with arrays.
ERROR(572): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(572): The operation '>' does not work with arrays.
ERROR(573): '*=' requires operands of type int but lhs is of type bool.
ERROR(573): '*=' requires operands of type int but rhs is of type char.
ERROR(573): The operation '*=' does not work with arrays.
ERROR(574): '+=' requires operands of type int but lhs is of type bool.
ERROR(574): '+=' requires operands of type int but rhs is of type char.
ERROR(574): The operation '+=' does not work with arrays.
ERROR(575): '-=' requires operands of type int but lhs is of type bool.
ERROR(575): '-=' requires operands of type int but rhs is of type char.
ERROR(575): The operation '-=' does not work with arrays.
ERROR(576): '/=' requires operands of type int but lhs is of type bool.
ERROR(576): '/=' requires operands of type int but rhs is of type char.
ERROR(576): The operation '/=' does not work with arrays.
ERROR(577): '+' requires operands of type int but lhs is of type bool.
ERROR(577): '+' requires operands of type int but rhs is of type char.
ERROR(577): The operation '+' does not work with arrays.
ERROR(578): '-' requires operands of type int but lhs is of type bool.
ERROR(578): '-' requires operands of type int but rhs is of type char.
ERROR(578): The operation '-' does not work with arrays.
ERROR(579): '*' requires operands of type int but lhs is of type bool.
ERROR(579): '*' requires operands of type int but rhs is of type char.
ERROR(579): The operation '*' does not work with arrays.
ERROR(580): '/' requires operands of type int but lhs is of type bool.
ERROR(580): '/' requires operands of type int but rhs is of type char.
ERROR(580): The operation '/' does not work with arrays.
ERROR(581): '%' requires operands of type int but lhs is of type bool.
ERROR(581): '%' requires operands of type int but rhs is of type char.
ERROR(581): The operation '%' does not work with arrays.
ERROR(582): 'and' requires operands of type bool but rhs is of type char.
ERROR(582): The operation 'and' does not work with arrays.
ERROR(583): 'or' requires operands of type bool but rhs is of type char.
ERROR(583): The operation 'or' does not work with arrays.
ERROR(584): '=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(584): '=' requires that either both or neither operands be arrays.
ERROR(586): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(586): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(588): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(588): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(589): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(589): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(590): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(590): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(591): '*=' requires operands of type int but lhs is of type bool.
ERROR(591): '*=' requires operands of type int but rhs is of type bool.
ERROR(592): '+=' requires operands of type int but lhs is of type bool.
ERROR(592): '+=' requires operands of type int but rhs is of type bool.
ERROR(593): '-=' requires operands of type int but lhs is of type bool.
ERROR(593): '-=' requires operands of type int but rhs is of type bool.
ERROR(594): '/=' requires operands of type int but lhs is of type bool.
ERROR(594): '/=' requires operands of type int but rhs is of type bool.
ERROR(595): '+' requires operands of type int but lhs is of type bool.
ERROR(595): '+' requires operands of type int but rhs is of type bool.
ERROR(596): '-' requires operands of type int but lhs is of type bool.
ERROR(596): '-' requires operands of type int but rhs is of type bool.
ERROR(597): '*' requires operands of type int but lhs is of type bool.
ERROR(597): '*' requires operands of type int but rhs is of type bool.
ERROR(598): '/' requires operands of type int but lhs is of type bool.
ERROR(598): '/' requires operands of type int but rhs is of type bool.
ERROR(599): '%' requires operands of type int but lhs is of type bool.
ERROR(599): '%' requires operands of type int but rhs is of type bool.
ERROR(603): '!=' requires that either both or neither operands be arrays.
ERROR(604): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(604): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(604): The operation '<=' does not work with arrays.
ERROR(605): '==' requires that either both or neither operands be arrays.
ERROR(606): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(606): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(606): The operation '>=' does not work with arrays.
ERROR(607): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(607): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(607): The operation '<' does not work with arrays.
ERROR(608): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(608): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(608): The operation '>' does not work with arrays.
ERROR(609): '*=' requires operands of type int but lhs is of type bool.
ERROR(609): '*=' requires operands of type int but rhs is of type bool.
ERROR(609): The operation '*=' does not work with arrays.
ERROR(610): '+=' requires operands of type int but lhs is of type bool.
ERROR(610): '+=' requires operands of type int but rhs is of type bool.
ERROR(610): The operation '+=' does not work with arrays.
ERROR(611): '-=' requires operands of type int but lhs is of type bool.
ERROR(611): '-=' requires operands of type int but rhs is of type bool.
ERROR(611): The operation '-=' does not work with arrays.
ERROR(612): '/=' requires operands of type int but lhs is of type bool.
ERROR(612): '/=' requires operands of type int but rhs is of type bool.
ERROR(612): The operation '/=' does not work with arrays.
ERROR(613): '+' requires operands of type int but lhs is of type bool.
ERROR(613): '+' requires operands of type int but rhs is of type bool.
ERROR(613): The operation '+' does not work with arrays.
ERROR(614): '-' requires operands of type int but lhs is of type bool.
ERROR(614): '-' requires operands of type int but rhs is of type bool.
ERROR(614): The operation '-' does not work with arrays.
ERROR(615): '*' requires operands of type int but lhs is of type bool.
ERROR(615): '*' requires operands of type int but rhs is of type bool.
ERROR(615): The operation '*' does not work with arrays.
ERROR(616): '/' requires operands of type int but lhs is of type bool.
ERROR(616): '/' requires operands of type int but rhs is of type bool.
ERROR(616): The operation '/' does not work with arrays.
ERROR(617): '%' requires operands of type int but lhs is of type bool.
ERROR(617): '%' requires operands of type int but rhs is of type bool.
ERROR(617): The operation '%' does not work with arrays.
ERROR(618): The operation 'and' does not work with arrays.
ERROR(619): The operation 'or' does not work with arrays.
ERROR(620): '=' requires that either both or neither operands be arrays.
ERROR(621): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(622): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(622): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(623): '==' requires operands of NONVOID but rhs is of type void.
ERROR(624): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(624): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(625): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(625): '<' requires operands of type char or type int but rhs is of type void.
ERROR(626): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(626): '>' requires operands of type char or type int but rhs is of type void.
ERROR(627): '*=' requires operands of type int but lhs is of type bool.
ERROR(627): '*=' requires operands of type int but rhs is of type void.
ERROR(628): '+=' requires operands of type int but lhs is of type bool.
ERROR(628): '+=' requires operands of type int but rhs is of type void.
ERROR(629): '-=' requires operands of type int but lhs is of type bool.
ERROR(629): '-=' requires operands of type int but rhs is of type void.
ERROR(630): '/=' requires operands of type int but lhs is of type bool.
ERROR(630): '/=' requires operands of type int but rhs is of type void.
ERROR(631): '+' requires operands of type int but lhs is of type bool.
ERROR(631): '+' requires operands of type int but rhs is of type void.
ERROR(632): '-' requires operands of type int but lhs is of type bool.
ERROR(632): '-' requires operands of type int but rhs is of type void.
ERROR(633): '*' requires operands of type int but lhs is of type bool.
ERROR(633): '*' requires operands of type int but rhs is of type void.
ERROR(634): '/' requires operands of type int but lhs is of type bool.
ERROR(634): '/' requires operands of type int but rhs is of type void.
ERROR(635): '%' requires operands of type int but lhs is of type bool.
ERROR(635): '%' requires operands of type int but rhs is of type void.
ERROR(636): 'and' requires operands of type bool but rhs is of type void.
ERROR(637): 'or' requires operands of type bool but rhs is of type void.
ERROR(638): '=' requires operands of NONVOID but rhs is of type void.
ERROR(639): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(639): '!=' requires that either both or neither operands be arrays.
ERROR(640): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(640): The operation '<=' does not work with arrays.
ERROR(641): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(641): '==' requires that either both or neither operands be arrays.
ERROR(642): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(642): The operation '>=' does not work with arrays.
ERROR(643): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(643): The operation '<' does not work with arrays.
ERROR(644): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(644): The operation '>' does not work with arrays.
ERROR(645): '*=' requires operands of type int but lhs is of type bool.
ERROR(645): The operation '*=' does not work with arrays.
ERROR(646): '+=' requires operands of type int but lhs is of type bool.
ERROR(646): The operation '+=' does not work with arrays.
ERROR(647): '-=' requires operands of type int but lhs is of type bool.
ERROR(647): The operation '-=' does not work with arrays.
ERROR(648): '/=' requires operands of type int but lhs is of type bool.
ERROR(648): The operation '/=' does not work with arrays.
ERROR(649): '+' requires operands of type int but lhs is of type bool.
ERROR(649): The operation '+' does not work with arrays.
ERROR(650): '-' requires operands of type int but lhs is of type bool.
ERROR(650): The operation '-' does not work with arrays.
ERROR(651): '*' requires operands of type int but lhs is of type bool.
ERROR(651): The operation '*' does not work with arrays.
ERROR(652): '/' requires operands of type int but lhs is of type bool.
ERROR(652): The operation '/' does not work with arrays.
ERROR(653): '%' requires operands of type int but lhs is of type bool.
ERROR(653): The operation '%' does not work with arrays.
ERROR(654): 'and' requires operands of type bool but rhs is of type int.
ERROR(654): The operation 'and' does not work with arrays.
ERROR(655): 'or' requires operands of type bool but rhs is of type int.
ERROR(655): The operation 'or' does not work with arrays.
ERROR(656): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(656): '=' requires that either both or neither operands be arrays.
ERROR(657): '!=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(658): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(658): The operation '<=' does not work with arrays.
ERROR(659): '==' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(660): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(660): The operation '>=' does not work with arrays.
ERROR(661): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(661): The operation '<' does not work with arrays.
ERROR(662): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(662): The operation '>' does not work with arrays.
ERROR(663): '*=' requires operands of type int but lhs is of type bool.
ERROR(663): The operation '*=' does not work with arrays.
ERROR(664): '+=' requires operands of type int but lhs is of type bool.
ERROR(664): The operation '+=' does not work with arrays.
ERROR(665): '-=' requires operands of type int but lhs is of type bool.
ERROR(665): The operation '-=' does not work with arrays.
ERROR(666): '/=' requires operands of type int but lhs is of type bool.
ERROR(666): The operation '/=' does not work with arrays.
ERROR(667): '+' requires operands of type int but lhs is of type bool.
ERROR(667): The operation '+' does not work with arrays.
ERROR(668): '-' requires operands of type int but lhs is of type bool.
ERROR(668): The operation '-' does not work with arrays.
ERROR(669): '*' requires operands of type int but lhs is of type bool.
ERROR(669): The operation '*' does not work with arrays.
ERROR(670): '/' requires operands of type int but lhs is of type bool.
ERROR(670): The operation '/' does not work with arrays.
ERROR(671): '%' requires operands of type int but lhs is of type bool.
ERROR(671): The operation '%' does not work with arrays.
ERROR(672): 'and' requires operands of type bool but rhs is of type int.
ERROR(672): The operation 'and' does not work with arrays.
ERROR(673): 'or' requires operands of type bool but rhs is of type int.
ERROR(673): The operation 'or' does not work with arrays.
ERROR(674): '=' requires operands of the same type but lhs is type bool and rhs is type int.
ERROR(675): '!=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(675): '!=' requires that either both or neither operands be arrays.
ERROR(676): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(676): The operation '<=' does not work with arrays.
ERROR(677): '==' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(677): '==' requires that either both or neither operands be arrays.
ERROR(678): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(678): The operation '>=' does not work with arrays.
ERROR(679): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(679): The operation '<' does not work with arrays.
ERROR(680): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(680): The operation '>' does not work with arrays.
ERROR(681): '*=' requires operands of type int but lhs is of type bool.
ERROR(681): '*=' requires operands of type int but rhs is of type char.
ERROR(681): The operation '*=' does not work with arrays.
ERROR(682): '+=' requires operands of type int but lhs is of type bool.
ERROR(682): '+=' requires operands of type int but rhs is of type char.
ERROR(682): The operation '+=' does not work with arrays.
ERROR(683): '-=' requires operands of type int but lhs is of type bool.
ERROR(683): '-=' requires operands of type int but rhs is of type char.
ERROR(683): The operation '-=' does not work with arrays.
ERROR(684): '/=' requires operands of type int but lhs is of type bool.
ERROR(684): '/=' requires operands of type int but rhs is of type char.
ERROR(684): The operation '/=' does not work with arrays.
ERROR(685): '+' requires operands of type int but lhs is of type bool.
ERROR(685): '+' requires operands of type int but rhs is of type char.
ERROR(685): The operation '+' does not work with arrays.
ERROR(686): '-' requires operands of type int but lhs is of type bool.
ERROR(686): '-' requires operands of type int but rhs is of type char.
ERROR(686): The operation '-' does not work with arrays.
ERROR(687): '*' requires operands of type int but lhs is of type bool.
ERROR(687): '*' requires operands of type int but rhs is of type char.
ERROR(687): The operation '*' does not work with arrays.
ERROR(688): '/' requires operands of type int but lhs is of type bool.
ERROR(688): '/' requires operands of type int but rhs is of type char.
ERROR(688): The operation '/' does not work with arrays.
ERROR(689): '%' requires operands of type int but lhs is of type bool.
ERROR(689): '%' requires operands of type int but rhs is of type char.
ERROR(689): The operation '%' does not work with arrays.
ERROR(690): 'and' requires operands of type bool but rhs is of type char.
ERROR(690): The operation 'and' does not work with arrays.
ERROR(691): 'or' requires operands of type bool but rhs is of type char.
ERROR(691): The operation 'or' does not work with arrays.
ERROR(692): '=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(692): '=' requires that either both or neither operands be arrays.
ERROR(693): '!=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(694): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(694): The operation '<=' does not work with arrays.
ERROR(695): '==' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(696): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(696): The operation '>=' does not work with arrays.
ERROR(697): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(697): The operation '<' does not work with arrays.
ERROR(698): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(698): The operation '>' does not work with arrays.
ERROR(699): '*=' requires operands of type int but lhs is of type bool.
ERROR(699): '*=' requires operands of type int but rhs is of type char.
ERROR(699): The operation '*=' does not work with arrays.
ERROR(700): '+=' requires operands of type int but lhs is of type bool.
ERROR(700): '+=' requires operands of type int but rhs is of type char.
ERROR(700): The operation '+=' does not work with arrays.
ERROR(701): '-=' requires operands of type int but lhs is of type bool.
ERROR(701): '-=' requires operands of type int but rhs is of type char.
ERROR(701): The operation '-=' does not work with arrays.
ERROR(702): '/=' requires operands of type int but lhs is of type bool.
ERROR(702): '/=' requires operands of type int but rhs is of type char.
ERROR(702): The operation '/=' does not work with arrays.
ERROR(703): '+' requires operands of type int but lhs is of type bool.
ERROR(703): '+' requires operands of type int but rhs is of type char.
ERROR(703): The operation '+' does not work with arrays.
ERROR(704): '-' requires operands of type int but lhs is of type bool.
ERROR(704): '-' requires operands of type int but rhs is of type char.
ERROR(704): The operation '-' does not work with arrays.
ERROR(705): '*' requires operands of type int but lhs is of type bool.
ERROR(705): '*' requires operands of type int but rhs is of type char.
ERROR(705): The operation '*' does not work with arrays.
ERROR(706): '/' requires operands of type int but lhs is of type bool.
ERROR(706): '/' requires operands of type int but rhs is of type char.
ERROR(706): The operation '/' does not work with arrays.
ERROR(707): '%' requires operands of type int but lhs is of type bool.
ERROR(707): '%' requires operands of type int but rhs is of type char.
ERROR(707): The operation '%' does not work with arrays.
ERROR(708): 'and' requires operands of type bool but rhs is of type char.
ERROR(708): The operation 'and' does not work with arrays.
ERROR(709): 'or' requires operands of type bool but rhs is of type char.
ERROR(709): The operation 'or' does not work with arrays.
ERROR(710): '=' requires operands of the same type but lhs is type bool and rhs is type char.
ERROR(711): '!=' requires that either both or neither operands be arrays.
ERROR(712): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(712): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(712): The operation '<=' does not work with arrays.
ERROR(713): '==' requires that either both or neither operands be arrays.
ERROR(714): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(714): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(714): The operation '>=' does not work with arrays.
ERROR(715): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(715): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(715): The operation '<' does not work with arrays.
ERROR(716): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(716): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(716): The operation '>' does not work with arrays.
ERROR(717): '*=' requires operands of type int but lhs is of type bool.
ERROR(717): '*=' requires operands of type int but rhs is of type bool.
ERROR(717): The operation '*=' does not work with arrays.
ERROR(718): '+=' requires operands of type int but lhs is of type bool.
ERROR(718): '+=' requires operands of type int but rhs is of type bool.
ERROR(718): The operation '+=' does not work with arrays.
ERROR(719): '-=' requires operands of type int but lhs is of type bool.
ERROR(719): '-=' requires operands of type int but rhs is of type bool.
ERROR(719): The operation '-=' does not work with arrays.
ERROR(720): '/=' requires operands of type int but lhs is of type bool.
ERROR(720): '/=' requires operands of type int but rhs is of type bool.
ERROR(720): The operation '/=' does not work with arrays.
ERROR(721): '+' requires operands of type int but lhs is of type bool.
ERROR(721): '+' requires operands of type int but rhs is of type bool.
ERROR(721): The operation '+' does not work with arrays.
ERROR(722): '-' requires operands of type int but lhs is of type bool.
ERROR(722): '-' requires operands of type int but rhs is of type bool.
ERROR(722): The operation '-' does not work with arrays.
ERROR(723): '*' requires operands of type int but lhs is of type bool.
ERROR(723): '*' requires operands of type int but rhs is of type bool.
ERROR(723): The operation '*' does not work with arrays.
ERROR(724): '/' requires operands of type int but lhs is of type bool.
ERROR(724): '/' requires operands of type int but rhs is of type bool.
ERROR(724): The operation '/' does not work with arrays.
ERROR(725): '%' requires operands of type int but lhs is of type bool.
ERROR(725): '%' requires operands of type int but rhs is of type bool.
ERROR(725): The operation '%' does not work with arrays.
ERROR(726): The operation 'and' does not work with arrays.
ERROR(727): The operation 'or' does not work with arrays.
ERROR(728): '=' requires that either both or neither operands be arrays.
ERROR(730): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(730): '<=' requires operands of type char or type int but rhs is of type bool.
ERROR(730): The operation '<=' does not work with arrays.
ERROR(732): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(732): '>=' requires operands of type char or type int but rhs is of type bool.
ERROR(732): The operation '>=' does not work with arrays.
ERROR(733): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(733): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(733): The operation '<' does not work with arrays.
ERROR(734): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(734): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(734): The operation '>' does not work with arrays.
ERROR(735): '*=' requires operands of type int but lhs is of type bool.
ERROR(735): '*=' requires operands of type int but rhs is of type bool.
ERROR(735): The operation '*=' does not work with arrays.
ERROR(736): '+=' requires operands of type int but lhs is of type bool.
ERROR(736): '+=' requires operands of type int but rhs is of type bool.
ERROR(736): The operation '+=' does not work with arrays.
ERROR(737): '-=' requires operands of type int but lhs is of type bool.
ERROR(737): '-=' requires operands of type int but rhs is of type bool.
ERROR(737): The operation '-=' does not work with arrays.
ERROR(738): '/=' requires operands of type int but lhs is of type bool.
ERROR(738): '/=' requires operands of type int but rhs is of type bool.
ERROR(738): The operation '/=' does not work with arrays.
ERROR(739): '+' requires operands of type int but lhs is of type bool.
ERROR(739): '+' requires operands of type int but rhs is of type bool.
ERROR(739): The operation '+' does not work with arrays.
ERROR(740): '-' requires operands of type int but lhs is of type bool.
ERROR(740): '-' requires operands of type int but rhs is of type bool.
ERROR(740): The operation '-' does not work with arrays.
ERROR(741): '*' requires operands of type int but lhs is of type bool.
ERROR(741): '*' requires operands of type int but rhs is of type bool.
ERROR(741): The operation '*' does not work with arrays.
ERROR(742): '/' requires operands of type int but lhs is of type bool.
ERROR(742): '/' requires operands of type int but rhs is of type bool.
ERROR(742): The operation '/' does not work with arrays.
ERROR(743): '%' requires operands of type int but lhs is of type bool.
ERROR(743): '%' requires operands of type int but rhs is of type bool.
ERROR(743): The operation '%' does not work with arrays.
ERROR(744): The operation 'and' does not work with arrays.
ERROR(745): The operation 'or' does not work with arrays.
ERROR(747): '!=' requires operands of NONVOID but rhs is of type void.
ERROR(747): '!=' requires that either both or neither operands be arrays.
ERROR(748): '<=' requires operands of type char or type int but lhs is of type bool.
ERROR(748): '<=' requires operands of type char or type int but rhs is of type void.
ERROR(748): The operation '<=' does not work with arrays.
ERROR(749): '==' requires operands of NONVOID but rhs is of type void.
ERROR(749): '==' requires that either both or neither operands be arrays.
ERROR(750): '>=' requires operands of type char or type int but lhs is of type bool.
ERROR(750): '>=' requires operands of type char or type int but rhs is of type void.
ERROR(750): The operation '>=' does not work with arrays.
ERROR(751): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(751): '<' requires operands of type char or type int but rhs is of type void.
ERROR(751): The operation '<' does not work with arrays.
ERROR(752): '>' requires operands of type char or type int but lhs is of type bool.
ERROR(752): '>' requires operands of type char or type int but rhs is of type void.
ERROR(752): The operation '>' does not work with arrays.
ERROR(753): '*=' requires operands of type int but lhs is of type bool.
ERROR(753): '*=' requires operands of type int but rhs is of type void.
ERROR(753): The operation '*=' does not work with arrays.
ERROR(754): '+=' requires operands of type int but lhs is of type bool.
ERROR(754): '+=' requires operands of type int but rhs is of type void.
ERROR(754): The operation '+=' does not work with arrays.
ERROR(755): '-=' requires operands of type int but lhs is of type bool.
ERROR(755): '-=' requires operands of type int but rhs is of type void.
ERROR(755): The operation '-=' does not work with arrays.
ERROR(756): '/=' requires operands of type int but lhs is of type bool.
ERROR(756): '/=' requires operands of type int but rhs is of type void.
ERROR(756): The operation '/=' does not work with arrays.
ERROR(757): '+' requires operands of type int but lhs is of type bool.
ERROR(757): '+' requires operands of type int but rhs is of type void.
ERROR(757): The operation '+' does not work with arrays.
ERROR(758): '-' requires operands of type int but lhs is of type bool.
ERROR(758): '-' requires operands of type int but rhs is of type void.
ERROR(758): The operation '-' does not work with arrays.
ERROR(759): '*' requires operands of type int but lhs is of type bool.
ERROR(759): '*' requires operands of type int but rhs is of type void.
ERROR(759): The operation '*' does not work with arrays.
ERROR(760): '/' requires operands of type int but lhs is of type bool.
ERROR(760): '/' requires operands of type int but rhs is of type void.
ERROR(760): The operation '/' does not work with arrays.
ERROR(761): '%' requires operands of type int but lhs is of type bool.
ERROR(761): '%' requires operands of type int but rhs is of type void.
ERROR(761): The operation '%' does not work with arrays.
ERROR(762): 'and' requires operands of type bool but rhs is of type void.
ERROR(762): The operation 'and' does not work with arrays.
ERROR(763): 'or' requires operands of type bool but rhs is of type void.
ERROR(763): The operation 'or' does not work with arrays.
ERROR(764): '=' requires operands of NONVOID but rhs is of type void.
ERROR(764): '=' requires that either both or neither operands be arrays.
ERROR(765): '<' requires operands of type char or type int but lhs is of type void.
ERROR(766): '>' requires operands of type char or type int but lhs is of type void.
ERROR(767): '+' requires operands of type int but lhs is of type void.
ERROR(768): '-' requires operands of type int but lhs is of type void.
ERROR(769): '*' requires operands of type int but lhs is of type void.
ERROR(770): '/' requires operands of type int but lhs is of type void.
ERROR(771): '%' requires operands of type int but lhs is of type void.
ERROR(772): 'and' requires operands of type bool but lhs is of type void.
ERROR(772): 'and' requires operands of type bool but rhs is of type int.
ERROR(773): 'or' requires operands of type bool but lhs is of type void.
ERROR(773): 'or' requires operands of type bool but rhs is of type int.
ERROR(774): '<' requires operands of type char or type int but lhs is of type void.
ERROR(774): The operation '<' does not work with arrays.
ERROR(775): '>' requires operands of type char or type int but lhs is of type void.
ERROR(775): The operation '>' does not work with arrays.
ERROR(776): '+' requires operands of type int but lhs is of type void.
ERROR(776): The operation '+' does not work with arrays.
ERROR(777): '-' requires operands of type int but lhs is of type void.
ERROR(777): The operation '-' does not work with arrays.
ERROR(778): '*' requires operands of type int but lhs is of type void.
ERROR(778): The operation '*' does not work with arrays.
ERROR(779): '/' requires operands of type int but lhs is of type void.
ERROR(779): The operation '/' does not work with arrays.
ERROR(780): '%' requires operands of type int but lhs is of type void.
ERROR(780): The operation '%' does not work with arrays.
ERROR(781): 'and' requires operands of type bool but lhs is of type void.
ERROR(781): 'and' requires operands of type bool but rhs is of type int.
ERROR(781): The operation 'and' does not work with arrays.
ERROR(782): 'or' requires operands of type bool but lhs is of type void.
ERROR(782): 'or' requires operands of type bool but rhs is of type int.
ERROR(782): The operation 'or' does not work with arrays.
ERROR(783): '<' requires operands of type char or type int but lhs is of type void.
ERROR(784): '>' requires operands of type char or type int but lhs is of type void.
ERROR(785): '+' requires operands of type int but lhs is of type void.
ERROR(785): '+' requires operands of type int but rhs is of type char.
ERROR(786): '-' requires operands of type int but lhs is of type void.
ERROR(786): '-' requires operands of type int but rhs is of type char.
ERROR(787): '*' requires operands of type int but lhs is of type void.
ERROR(787): '*' requires operands of type int but rhs is of type char.
ERROR(788): '/' requires operands of type int but lhs is of type void.
ERROR(788): '/' requires operands of type int but rhs is of type char.
ERROR(789): '%' requires operands of type int but lhs is of type void.
ERROR(789): '%' requires operands of type int but rhs is of type char.
ERROR(790): 'and' requires operands of type bool but lhs is of type void.
ERROR(790): 'and' requires operands of type bool but rhs is of type char.
ERROR(791): 'or' requires operands of type bool but lhs is of type void.
ERROR(791): 'or' requires operands of type bool but rhs is of type char.
ERROR(792): '<' requires operands of type char or type int but lhs is of type void.
ERROR(792): The operation '<' does not work with arrays.
ERROR(793): '>' requires operands of type char or type int but lhs is of type void.
ERROR(793): The operation '>' does not work with arrays.
ERROR(794): '+' requires operands of type int but lhs is of type void.
ERROR(794): '+' requires operands of type int but rhs is of type char.
ERROR(794): The operation '+' does not work with arrays.
ERROR(795): '-' requires operands of type int but lhs is of type void.
ERROR(795): '-' requires operands of type int but rhs is of type char.
ERROR(795): The operation '-' does not work with arrays.
ERROR(796): '*' requires operands of type int but lhs is of type void.
ERROR(796): '*' requires operands of type int but rhs is of type char.
ERROR(796): The operation '*' does not work with arrays.
ERROR(797): '/' requires operands of type int but lhs is of type void.
ERROR(797): '/' requires operands of type int but rhs is of type char.
ERROR(797): The operation '/' does not work with arrays.
ERROR(798): '%' requires operands of type int but lhs is of type void.
ERROR(798): '%' requires operands of type int but rhs is of type char.
ERROR(798): The operation '%' does not work with arrays.
ERROR(799): 'and' requires operands of type bool but lhs is of type void.
ERROR(799): 'and' requires operands of type bool but rhs is of type char.
ERROR(799): The operation 'and' does not work with arrays.
ERROR(800): 'or' requires operands of type bool but lhs is of type void.
ERROR(800): 'or' requires operands of type bool but rhs is of type char.
ERROR(800): The operation 'or' does not work with arrays.
ERROR(801): '<' requires operands of type char or type int but lhs is of type void.
ERROR(801): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(802): '>' requires operands of type char or type int but lhs is of type void.
ERROR(802): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(803): '+' requires operands of type int but lhs is of type void.
ERROR(803): '+' requires operands of type int but rhs is of type bool.
ERROR(804): '-' requires operands of type int but lhs is of type void.
ERROR(804): '-' requires operands of type int but rhs is of type bool.
ERROR(805): '*' requires operands of type int but lhs is of type void.
ERROR(805): '*' requires operands of type int but rhs is of type bool.
ERROR(806): '/' requires operands of type int but lhs is of type void.
ERROR(806): '/' requires operands of type int but rhs is of type bool.
ERROR(807): '%' requires operands of type int but lhs is of type void.
ERROR(807): '%' requires operands of type int but rhs is of type bool.
ERROR(808): 'and' requires operands of type bool but lhs is of type void.
ERROR(809): 'or' requires operands of type bool but lhs is of type void.
ERROR(810): '<' requires operands of type char or type int but lhs is of type void.
ERROR(810): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(810): The operation '<' does not work with arrays.
ERROR(811): '>' requires operands of type char or type int but lhs is of type void.
ERROR(811): '>' requires operands of type char or type int but rhs is of type bool.
ERROR(811): The operation '>' does not work with arrays.
ERROR(812): '+' requires operands of type int but lhs is of type void.
ERROR(812): '+' requires operands of type int but rhs is of type bool.
ERROR(812): The operation '+' does not work with arrays.
ERROR(813): '-' requires operands of type int but lhs is of type void.
ERROR(813): '-' requires operands of type int but rhs is of type bool.
ERROR(813): The operation '-' does not work with arrays.
ERROR(814): '*' requires operands of type int but lhs is of type void.
ERROR(814): '*' requires operands of type int but rhs is of type bool.
ERROR(814): The operation '*' does not work with arrays.
ERROR(815): '/' requires operands of type int but lhs is of type void.
ERROR(815): '/' requires operands of type int but rhs is of type bool.
ERROR(815): The operation '/' does not work with arrays.
ERROR(816): '%' requires operands of type int but lhs is of type void.
ERROR(816): '%' requires operands of type int but rhs is of type bool.
ERROR(816): The operation '%' does not work with arrays.
ERROR(817): 'and' requires operands of type bool but lhs is of type void.
ERROR(817): The operation 'and' does not work with arrays.
ERROR(818): 'or' requires operands of type bool but lhs is of type void.
ERROR(818): The operation 'or' does not work with arrays.
ERROR(819): '<' requires operands of type char or type int but lhs is of type void.
ERROR(819): '<' requires operands of type char or type int but rhs is of type void.
ERROR(820): '>' requires operands of type char or type int but lhs is of type void.
ERROR(820): '>' requires operands of type char or type int but rhs is of type void.
ERROR(821): '+' requires operands of type int but lhs is of type void.
ERROR(821): '+' requires operands of type int but rhs is of type void.
ERROR(822): '-' requires operands of type int but lhs is of type void.
ERROR(822): '-' requires operands of type int but rhs is of type void.
ERROR(823): '*' requires operands of type int but lhs is of type void.
ERROR(823): '*' requires operands of type int but rhs is of type void.
ERROR(824): '/' requires operands of type int but lhs is of type void.
ERROR(824): '/' requires operands of type int but rhs is of type void.
ERROR(825): '%' requires operands of type int but lhs is of type void.
ERROR(825): '%' requires operands of type int but rhs is of type void.
ERROR(826): 'and' requires operands of type bool but lhs is of type void.
ERROR(826): 'and' requires operands of type bool but rhs is of type void.
ERROR(827): 'or' requires operands of type bool but lhs is of type void.
ERROR(827): 'or' requires operands of type bool but rhs is of type void.
ERROR(828): Unary 'not' requires an operand of type bool but was given type int.
ERROR(829): The operation '*' only works with arrays.
ERROR(831): Unary 'not' requires an operand of type bool but was given type int.
ERROR(831): The operation 'not' does not work with arrays.
ERROR(833): The operation '?' does not work with arrays.
ERROR(834): Unary 'not' requires an operand of type bool but was given type char.
ERROR(835): The operation '*' only works with arrays.
ERROR(836): Unary '?' requires an operand of type int but was given type char.
ERROR(837): Unary 'not' requires an operand of type bool but was given type char.
ERROR(837): The operation 'not' does not work with arrays.
ERROR(839): Unary '?' requires an operand of type int but was given type char.
ERROR(839): The operation '?' does not work with arrays.
ERROR(841): The operation '*' only works with arrays.
ERROR(842): Unary '?' requires an operand of type int but was given type bool.
ERROR(843): The operation 'not' does not work with arrays.
ERROR(845): Unary '?' requires an operand of type int but was given type bool.
ERROR(845): The operation '?' does not work with arrays.
ERROR(846): Unary 'not' requires an operand of type bool but was given type void.
ERROR(847): The operation '*' only works with arrays.
ERROR(848): Unary '?' requires an operand of type int but was given type void.
ERROR(851): The operation '++' does not work with arrays.
ERROR(852): The operation '--' does not work with arrays.
ERROR(853): Unary '++' requires an operand of type int but was given type char.
ERROR(854): Unary '--' requires an operand of type int but was given type char.
ERROR(855): Unary '++' requires an operand of type int but was given type char.
ERROR(855): The operation '++' does not work with arrays.
ERROR(856): Unary '--' requires an operand of type int but was given type char.
ERROR(856): The operation '--' does not work with arrays.
ERROR(857): Unary '++' requires an operand of type int but was given type bool.
ERROR(858): Unary '--' requires an operand of type int but was given type bool.
ERROR(859): Unary '++' requires an operand of type int but was given type bool.
ERROR(859): The operation '++' does not work with arrays.
ERROR(860): Unary '--' requires an operand of type int but was given type bool.
ERROR(860): The operation '--' does not work with arrays.
Func input returns type int [type int] [line: -1]
Sibling: 0  Func output returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type int [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type bool [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [type char] [line: -1]
Sibling: 4  Func outputc returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type void [type void] [line: -1]
Sibling: 5  Func outnl returns type void [type void] [line: -1]
Sibling: 6  Var i of type int [type int] [line: 1]
Sibling: 7  Var ia is array of type int [type int] [line: 2]
Sibling: 8  Var c of type char [type char] [line: 3]
Sibling: 9  Var ca is array of type char [type char] [line: 4]
Sibling: 10  Var b of type bool [type bool] [line: 5]
Sibling: 11  Var ba is array of type bool [type bool] [line: 6]
Sibling: 12  Func v returns type void [type void] [line: 7]
!   Child: 1  Compound [type void] [line: 7]
Sibling: 13  Func main returns type void [type void] [line: 8]
!   Child: 1  Compound [type void] [line: 8]
!   !   Child: 1  Op: != [type bool] [line: 9]
!   !   !   Child: 0  Id: i [type int] [line: 9]
!   !   !   Child: 1  Id: i [type int] [line: 9]
!   !   Sibling: 0  Op: <= [type bool] [line: 10]
!   !   !   Child: 0  Id: i [type int] [line: 10]
!   !   !   Child: 1  Id: i [type int] [line: 10]
!   !   Sibling: 1  Op: == [type bool] [line: 11]
!   !   !   Child: 0  Id: i [type int] [line: 11]
!   !   !   Child: 1  Id: i [type int] [line: 11]
!   !   Sibling: 2  Op: >= [type bool] [line: 12]
!   !   !   Child: 0  Id: i [type int] [line: 12]
!   !   !   Child: 1  Id: i [type int] [line: 12]
!   !   Sibling: 3  Op: < [type bool] [line: 13]
!   !   !   Child: 0  Id: i [type int] [line: 13]
!   !   !   Child: 1  Id: i [type int] [line: 13]
!   !   Sibling: 4  Op: > [type bool] [line: 14]
!   !   !   Child: 0  Id: i [type int] [line: 14]
!   !   !   Child: 1  Id: i [type int] [line: 14]
!   !   Sibling: 5  Assign: *= [type int] [line: 15]
!   !   !   Child: 0  Id: i [type int] [line: 15]
!   !   !   Child: 1  Id: i [type int] [line: 15]
!   !   Sibling: 6  Assign: += [type int] [line: 16]
!   !   !   Child: 0  Id: i [type int] [line: 16]
!   !   !   Child: 1  Id: i [type int] [line: 16]
!   !   Sibling: 7  Assign: -= [type int] [line: 17]
!   !   !   Child: 0  Id: i [type int] [line: 17]
!   !   !   Child: 1  Id: i [type int] [line: 17]
!   !   Sibling: 8  Assign: /= [type int] [line: 18]
!   !   !   Child: 0  Id: i [type int] [line: 18]
!   !   !   Child: 1  Id: i [type int] [line: 18]
!   !   Sibling: 9  Op: + [type int] [line: 19]
!   !   !   Child: 0  Id: i [type int] [line: 19]
!   !   !   Child: 1  Id: i [type int] [line: 19]
!   !   Sibling: 10  Op: - [type int] [line: 20]
!   !   !   Child: 0  Id: i [type int] [line: 20]
!   !   !   Child: 1  Id: i [type int] [line: 20]
!   !   Sibling: 11  Op: * [type int] [line: 21]
!   !   !   Child: 0  Id: i [type int] [line: 21]
!   !   !   Child: 1  Id: i [type int] [line: 21]
!   !   Sibling: 12  Op: / [type int] [line: 22]
!   !   !   Child: 0  Id: i [type int] [line: 22]
!   !   !   Child: 1  Id: i [type int] [line: 22]
!   !   Sibling: 13  Op: % [type int] [line: 23]
!   !   !   Child: 0  Id: i [type int] [line: 23]
!   !   !   Child: 1  Id: i [type int] [line: 23]
!   !   Sibling: 14  Op: and [type bool] [line: 24]
!   !   !   Child: 0  Id: i [type int] [line: 24]
!   !   !   Child: 1  Id: i [type int] [line: 24]
!   !   Sibling: 15  Op: or [type bool] [line: 25]
!   !   !   Child: 0  Id: i [type int] [line: 25]
!   !   !   Child: 1  Id: i [type int] [line: 25]
!   !   Sibling: 16  Assign: = [type int] [line: 26]
!   !   !   Child: 0  Id: i [type int] [line: 26]
!   !   !   Child: 1  Id: i [type int] [line: 26]
!   !   Sibling: 17  Op: != [type bool] [line: 27]
!   !   !   Child: 0  Id: i [type int] [line: 27]
!   !   !   Child: 1  Id: ia [type int] [line: 27]
!   !   Sibling: 18  Op: <= [type bool] [line: 28]
!   !   !   Child: 0  Id: i [type int] [line: 28]
!   !   !   Child: 1  Id: ia [type int] [line: 28]
!   !   Sibling: 19  Op: == [type bool] [line: 29]
!   !   !   Child: 0  Id: i [type int] [line: 29]
!   !   !   Child: 1  Id: ia [type int] [line: 29]
!   !   Sibling: 20  Op: >= [type bool] [line: 30]
!   !   !   Child: 0  Id: i [type int] [line: 30]
!   !   !   Child: 1  Id: ia [type int] [line: 30]
!   !   Sibling: 21  Op: < [type bool] [line: 31]
!   !   !   Child: 0  Id: i [type int] [line: 31]
!   !   !   Child: 1  Id: ia [type int] [line: 31]
!   !   Sibling: 22  Op: > [type bool] [line: 32]
!   !   !   Child: 0  Id: i [type int] [line: 32]
!   !   !   Child: 1  Id: ia [type int] [line: 32]
!   !   Sibling: 23  Assign: *= [type int] [line: 33]
!   !   !   Child: 0  Id: i [type int] [line: 33]
!   !   !   Child: 1  Id: ia [type int] [line: 33]
!   !   Sibling: 24  Assign: += [type int] [line: 34]
!   !   !   Child: 0  Id: i [type int] [line: 34]
!   !   !   Child: 1  Id: ia [type int] [line: 34]
!   !   Sibling: 25  Assign: -= [type int] [line: 35]
!   !   !   Child: 0  Id: i [type int] [line: 35]
!   !   !   Child: 1  Id: ia [type int] [line: 35]
!   !   Sibling: 26  Assign: /= [type int] [line: 36]
!   !   !   Child: 0  Id: i [type int] [line: 36]
!   !   !   Child: 1  Id: ia [type int] [line: 36]
!   !   Sibling: 27  Op: + [type int] [line: 37]
!   !   !   Child: 0  Id: i [type int] [line: 37]
!   !   !   Child: 1  Id: ia [type int] [line: 37]
!   !   Sibling: 28  Op: - [type int] [line: 38]
!   !   !   Child: 0  Id: i [type int] [line: 38]
!   !   !   Child: 1  Id: ia [type int] [line: 38]
!   !   Sibling: 29  Op: * [type int] [line: 39]
!   !   !   Child: 0  Id: i [type int] [line: 39]
!   !   !   Child: 1  Id: ia [type int] [line: 39]
!   !   Sibling: 30  Op: / [type int] [line: 40]
!   !   !   Child: 0  Id: i [type int] [line: 40]
!   !   !   Child: 1  Id: ia [type int] [line: 40]
!   !   Sibling: 31  Op: % [type int] [line: 41]
!   !   !   Child: 0  Id: i [type int] [line: 41]
!   !   !   Child: 1  Id: ia [type int] [line: 41]
!   !   Sibling: 32  Op: and [type bool] [line: 42]
!   !   !   Child: 0  Id: i [type int] [line: 42]
!   !   !   Child: 1  Id: ia [type int] [line: 42]
!   !   Sibling: 33  Op: or [type bool] [line: 43]
!   !   !   Child: 0  Id: i [type int] [line: 43]
!   !   !   Child: 1  Id: ia [type int] [line: 43]
!   !   Sibling: 34  Assign: = [type int] [line: 44]
!   !   !   Child: 0  Id: i [type int] [line: 44]
!   !   !   Child: 1  Id: ia [type int] [line: 44]
!   !   Sibling: 35  Op: != [type bool] [line: 45]
!   !   !   Child: 0  Id: i [type int] [line: 45]
!   !   !   Child: 1  Id: c [type char] [line: 45]
!   !   Sibling: 36  Op: <= [type bool] [line: 46]
!   !   !   Child: 0  Id: i [type int] [line: 46]
!   !   !   Child: 1  Id: c [type char] [line: 46]
!   !   Sibling: 37  Op: == [type bool] [line: 47]
!   !   !   Child: 0  Id: i [type int] [line: 47]
!   !   !   Child: 1  Id: c [type char] [line: 47]
!   !   Sibling: 38  Op: >= [type bool] [line: 48]
!   !   !   Child: 0  Id: i [type int] [line: 48]
!   !   !   Child: 1  Id: c [type char] [line: 48]
!   !   Sibling: 39  Op: < [type bool] [line: 49]
!   !   !   Child: 0  Id: i [type int] [line: 49]
!   !   !   Child: 1  Id: c [type char] [line: 49]
!   !   Sibling: 40  Op: > [type bool] [line: 50]
!   !   !   Child: 0  Id: i [type int] [line: 50]
!   !   !   Child: 1  Id: c [type char] [line: 50]
!   !   Sibling: 41  Assign: *= [type int] [line: 51]
!   !   !   Child: 0  Id: i [type int] [line: 51]
!   !   !   Child: 1  Id: c [type char] [line: 51]
!   !   Sibling: 42  Assign: += [type int] [line: 52]
!   !   !   Child: 0  Id: i [type int] [line: 52]
!   !   !   Child: 1  Id: c [type char] [line: 52]
!   !   Sibling: 43  Assign: -= [type int] [line: 53]
!   !   !   Child: 0  Id: i [type int] [line: 53]
!   !   !   Child: 1  Id: c [type char] [line: 53]
!   !   Sibling: 44  Assign: /= [type int] [line: 54]
!   !   !   Child: 0  Id: i [type int] [line: 54]
!   !   !   Child: 1  Id: c [type char] [line: 54]
!   !   Sibling: 45  Op: + [type int] [line: 55]
!   !   !   Child: 0  Id: i [type int] [line: 55]
!   !   !   Child: 1  Id: c [type char] [line: 55]
!   !   Sibling: 46  Op: - [type int] [line: 56]
!   !   !   Child: 0  Id: i [type int] [line: 56]
!   !   !   Child: 1  Id: c [type char] [line: 56]
!   !   Sibling: 47  Op: * [type int] [line: 57]
!   !   !   Child: 0  Id: i [type int] [line: 57]
!   !   !   Child: 1  Id: c [type char] [line: 57]
!   !   Sibling: 48  Op: / [type int] [line: 58]
!   !   !   Child: 0  Id: i [type int] [line: 58]
!   !   !   Child: 1  Id: c [type char] [line: 58]
!   !   Sibling: 49  Op: % [type int] [line: 59]
!   !   !   Child: 0  Id: i [type int] [line: 59]
!   !   !   Child: 1  Id: c [type char] [line: 59]
!   !   Sibling: 50  Op: and [type bool] [line: 60]
!   !   !   Child: 0  Id: i [type int] [line: 60]
!   !   !   Child: 1  Id: c [type char] [line: 60]
!   !   Sibling: 51  Op: or [type bool] [line: 61]
!   !   !   Child: 0  Id: i [type int] [line: 61]
!   !   !   Child: 1  Id: c [type char] [line: 61]
!   !   Sibling: 52  Assign: = [type int] [line: 62]
!   !   !   Child: 0  Id: i [type int] [line: 62]
!   !   !   Child: 1  Id: c [type char] [line: 62]
!   !   Sibling: 53  Op: != [type bool] [line: 63]
!   !   !   Child: 0  Id: i [type int] [line: 63]
!   !   !   Child: 1  Id: ca [type char] [line: 63]
!   !   Sibling: 54  Op: <= [type bool] [line: 64]
!   !   !   Child: 0  Id: i [type int] [line: 64]
!   !   !   Child: 1  Id: ca [type char] [line: 64]
!   !   Sibling: 55  Op: == [type bool] [line: 65]
!   !   !   Child: 0  Id: i [type int] [line: 65]
!   !   !   Child: 1  Id: ca [type char] [line: 65]
!   !   Sibling: 56  Op: >= [type bool] [line: 66]
!   !   !   Child: 0  Id: i [type int] [line: 66]
!   !   !   Child: 1  Id: ca [type char] [line: 66]
!   !   Sibling: 57  Op: < [type bool] [line: 67]
!   !   !   Child: 0  Id: i [type int] [line: 67]
!   !   !   Child: 1  Id: ca [type char] [line: 67]
!   !   Sibling: 58  Op: > [type bool] [line: 68]
!   !   !   Child: 0  Id: i [type int] [line: 68]
!   !   !   Child: 1  Id: ca [type char] [line: 68]
!   !   Sibling: 59  Assign: *= [type int] [line: 69]
!   !   !   Child: 0  Id: i [type int] [line: 69]
!   !   !   Child: 1  Id: ca [type char] [line: 69]
!   !   Sibling: 60  Assign: += [type int] [line: 70]
!   !   !   Child: 0  Id: i [type int] [line: 70]
!   !   !   Child: 1  Id: ca [type char] [line: 70]
!   !   Sibling: 61  Assign: -= [type int] [line: 71]
!   !   !   Child: 0  Id: i [type int] [line: 71]
!   !   !   Child: 1  Id: ca [type char] [line: 71]
!   !   Sibling: 62  Assign: /= [type int] [line: 72]
!   !   !   Child: 0  Id: i [type int] [line: 72]
!   !   !   Child: 1  Id: ca [type char] [line: 72]
!   !   Sibling: 63  Op: + [type int] [line: 73]
!   !   !   Child: 0  Id: i [type int] [line: 73]
!   !   !   Child: 1  Id: ca [type char] [line: 73]
!   !   Sibling: 64  Op: - [type int] [line: 74]
!   !   !   Child: 0  Id: i [type int] [line: 74]
!   !   !   Child: 1  Id: ca [type char] [line: 74]
!   !   Sibling: 65  Op: * [type int] [line: 75]
!   !   !   Child: 0  Id: i [type int] [line: 75]
!   !   !   Child: 1  Id: ca [type char] [line: 75]
!   !   Sibling: 66  Op: / [type int] [line: 76]
!   !   !   Child: 0  Id: i [type int] [line: 76]
!   !   !   Child: 1  Id: ca [type char] [line: 76]
!   !   Sibling: 67  Op: % [type int] [line: 77]
!   !   !   Child: 0  Id: i [type int] [line: 77]
!   !   !   Child: 1  Id: ca [type char] [line: 77]
!   !   Sibling: 68  Op: and [type bool] [line: 78]
!   !   !   Child: 0  Id: i [type int] [line: 78]
!   !   !   Child: 1  Id: ca [type char] [line: 78]
!   !   Sibling: 69  Op: or [type bool] [line: 79]
!   !   !   Child: 0  Id: i [type int] [line: 79]
!   !   !   Child: 1  Id: ca [type char] [line: 79]
!   !   Sibling: 70  Assign: = [type int] [line: 80]
!   !   !   Child: 0  Id: i [type int] [line: 80]
!   !   !   Child: 1  Id: ca [type char] [line: 80]
!   !   Sibling: 71  Op: != [type bool] [line: 81]
!   !   !   Child: 0  Id: i [type int] [line: 81]
!   !   !   Child: 1  Id: b [type bool] [line: 81]
!   !   Sibling: 72  Op: <= [type bool] [line: 82]
!   !   !   Child: 0  Id: i [type int] [line: 82]
!   !   !   Child: 1  Id: b [type bool] [line: 82]
!   !   Sibling: 73  Op: == [type bool] [line: 83]
!   !   !   Child: 0  Id: i [type int] [line: 83]
!   !   !   Child: 1  Id: b [type bool] [line: 83]
!   !   Sibling: 74  Op: >= [type bool] [line: 84]
!   !   !   Child: 0  Id: i [type int] [line: 84]
!   !   !   Child: 1  Id: b [type bool] [line: 84]
!   !   Sibling: 75  Op: < [type bool] [line: 85]
!   !   !   Child: 0  Id: i [type int] [line: 85]
!   !   !   Child: 1  Id: b [type bool] [line: 85]
!   !   Sibling: 76  Op: > [type bool] [line: 86]
!   !   !   Child: 0  Id: i [type int] [line: 86]
!   !   !   Child: 1  Id: b [type bool] [line: 86]
!   !   Sibling: 77  Assign: *= [type int] [line: 87]
!   !   !   Child: 0  Id: i [type int] [line: 87]
!   !   !   Child: 1  Id: b [type bool] [line: 87]
!   !   Sibling: 78  Assign: += [type int] [line: 88]
!   !   !   Child: 0  Id: i [type int] [line: 88]
!   !   !   Child: 1  Id: b [type bool] [line: 88]
!   !   Sibling: 79  Assign: -= [type int] [line: 89]
!   !   !   Child: 0  Id: i [type int] [line: 89]
!   !   !   Child: 1  Id: b [type bool] [line: 89]
!   !   Sibling: 80  Assign: /= [type int] [line: 90]
!   !   !   Child: 0  Id: i [type int] [line: 90]
!   !   !   Child: 1  Id: b [type bool] [line: 90]
!   !   Sibling: 81  Op: + [type int] [line: 91]
!   !   !   Child: 0  Id: i [type int] [line: 91]
!   !   !   Child: 1  Id: b [type bool] [line: 91]
!   !   Sibling: 82  Op: - [type int] [line: 92]
!   !   !   Child: 0  Id: i [type int] [line: 92]
!   !   !   Child: 1  Id: b [type bool] [line: 92]
!   !   Sibling: 83  Op: * [type int] [line: 93]
!   !   !   Child: 0  Id: i [type int] [line: 93]
!   !   !   Child: 1  Id: b [type bool] [line: 93]
!   !   Sibling: 84  Op: / [type int] [line: 94]
!   !   !   Child: 0  Id: i [type int] [line: 94]
!   !   !   Child: 1  Id: b [type bool] [line: 94]
!   !   Sibling: 85  Op: % [type int] [line: 95]
!   !   !   Child: 0  Id: i [type int] [line: 95]
!   !   !   Child: 1  Id: b [type bool] [line: 95]
!   !   Sibling: 86  Op: and [type bool] [line: 96]
!   !   !   Child: 0  Id: i [type int] [line: 96]
!   !   !   Child: 1  Id: b [type bool] [line: 96]
!   !   Sibling: 87  Op: or [type bool] [line: 97]
!   !   !   Child: 0  Id: i [type int] [line: 97]
!   !   !   Child: 1  Id: b [type bool] [line: 97]
!   !   Sibling: 88  Assign: = [type int] [line: 98]
!   !   !   Child: 0  Id: i [type int] [line: 98]
!   !   !   Child: 1  Id: b [type bool] [line: 98]
!   !   Sibling: 89  Op: != [type bool] [line: 99]
!   !   !   Child: 0  Id: i [type int] [line: 99]
!   !   !   Child: 1  Id: ba [type bool] [line: 99]
!   !   Sibling: 90  Op: <= [type bool] [line: 100]
!   !   !   Child: 0  Id: i [type int] [line: 100]
!   !   !   Child: 1  Id: ba [type bool] [line: 100]
!   !   Sibling: 91  Op: == [type bool] [line: 101]
!   !   !   Child: 0  Id: i [type int] [line: 101]
!   !   !   Child: 1  Id: ba [type bool] [line: 101]
!   !   Sibling: 92  Op: >= [type bool] [line: 102]
!   !   !   Child: 0  Id: i [type int] [line: 102]
!   !   !   Child: 1  Id: ba [type bool] [line: 102]
!   !   Sibling: 93  Op: < [type bool] [line: 103]
!   !   !   Child: 0  Id: i [type int] [line: 103]
!   !   !   Child: 1  Id: ba [type bool] [line: 103]
!   !   Sibling: 94  Op: > [type bool] [line: 104]
!   !   !   Child: 0  Id: i [type int] [line: 104]
!   !   !   Child: 1  Id: ba [type bool] [line: 104]
!   !   Sibling: 95  Assign: *= [type int] [line: 105]
!   !   !   Child: 0  Id: i [type int] [line: 105]
!   !   !   Child: 1  Id: ba [type bool] [line: 105]
!   !   Sibling: 96  Assign: += [type int] [line: 106]
!   !   !   Child: 0  Id: i [type int] [line: 106]
!   !   !   Child: 1  Id: ba [type bool] [line: 106]
!   !   Sibling: 97  Assign: -= [type int] [line: 107]
!   !   !   Child: 0  Id: i [type int] [line: 107]
!   !   !   Child: 1  Id: ba [type bool] [line: 107]
!   !   Sibling: 98  Assign: /= [type int] [line: 108]
!   !   !   Child: 0  Id: i [type int] [line: 108]
!   !   !   Child: 1  Id: ba [type bool] [line: 108]
!   !   Sibling: 99  Op: + [type int] [line: 109]
!   !   !   Child: 0  Id: i [type int] [line: 109]
!   !   !   Child: 1  Id: ba [type bool] [line: 109]
!   !   Sibling: 100  Op: - [type int] [line: 110]
!   !   !   Child: 0  Id: i [type int] [line: 110]
!   !   !   Child: 1  Id: ba [type bool] [line: 110]
!   !   Sibling: 101  Op: * [type int] [line: 111]
!   !   !   Child: 0  Id: i [type int] [line: 111]
!   !   !   Child: 1  Id: ba [type bool] [line: 111]
!   !   Sibling: 102  Op: / [type int] [line: 112]
!   !   !   Child: 0  Id: i [type int] [line: 112]
!   !   !   Child: 1  Id: ba [type bool] [line: 112]
!   !   Sibling: 103  Op: % [type int] [line: 113]
!   !   !   Child: 0  Id: i [type int] [line: 113]
!   !   !   Child: 1  Id: ba [type bool] [line: 113]
!   !   Sibling: 104  Op: and [type bool] [line: 114]
!   !   !   Child: 0  Id: i [type int] [line: 114]
!   !   !   Child: 1  Id: ba [type bool] [line: 114]
!   !   Sibling: 105  Op: or [type bool] [line: 115]
!   !   !   Child: 0  Id: i [type int] [line: 115]
!   !   !   Child: 1  Id: ba [type bool] [line: 115]
!   !   Sibling: 106  Assign: = [type int] [line: 116]
!   !   !   Child: 0  Id: i [type int] [line: 116]
!   !   !   Child: 1  Id: ba [type bool] [line: 116]
!   !   Sibling: 107  Op: != [type bool] [line: 117]
!   !   !   Child: 0  Id: i [type int] [line: 117]
!   !   !   Child: 1  Call: v [type void] [line: 117]
!   !   Sibling: 108  Op: <= [type bool] [line: 118]
!   !   !   Child: 0  Id: i [type int] [line: 118]
!   !   !   Child: 1  Call: v [type void] [line: 118]
!   !   Sibling: 109  Op: == [type bool] [line: 119]
!   !   !   Child: 0  Id: i [type int] [line: 119]
!   !   !   Child: 1  Call: v [type void] [line: 119]
!   !   Sibling: 110  Op: >= [type bool] [line: 120]
!   !   !   Child: 0  Id: i [type int] [line: 120]
!   !   !   Child: 1  Call: v [type void] [line: 120]
!   !   Sibling: 111  Op: < [type bool] [line: 121]
!   !   !   Child: 0  Id: i [type int] [line: 121]
!   !   !   Child: 1  Call: v [type void] [line: 121]
!   !   Sibling: 112  Op: > [type bool] [line: 122]
!   !   !   Child: 0  Id: i [type int] [line: 122]
!   !   !   Child: 1  Call: v [type void] [line: 122]
!   !   Sibling: 113  Assign: *= [type int] [line: 123]
!   !   !   Child: 0  Id: i [type int] [line: 123]
!   !   !   Child: 1  Call: v [type void] [line: 123]
!   !   Sibling: 114  Assign: += [type int] [line: 124]
!   !   !   Child: 0  Id: i [type int] [line: 124]
!   !   !   Child: 1  Call: v [type void] [line: 124]
!   !   Sibling: 115  Assign: -= [type int] [line: 125]
!   !   !   Child: 0  Id: i [type int] [line: 125]
!   !   !   Child: 1  Call: v [type void] [line: 125]
!   !   Sibling: 116  Assign: /= [type int] [line: 126]
!   !   !   Child: 0  Id: i [type int] [line: 126]
!   !   !   Child: 1  Call: v [type void] [line: 126]
!   !   Sibling: 117  Op: + [type int] [line: 127]
!   !   !   Child: 0  Id: i [type int] [line: 127]
!   !   !   Child: 1  Call: v [type void] [line: 127]
!   !   Sibling: 118  Op: - [type int] [line: 128]
!   !   !   Child: 0  Id: i [type int] [line: 128]
!   !   !   Child: 1  Call: v [type void] [line: 128]
!   !   Sibling: 119  Op: * [type int] [line: 129]
!   !   !   Child: 0  Id: i [type int] [line: 129]
!   !   !   Child: 1  Call: v [type void] [line: 129]
!   !   Sibling: 120  Op: / [type int] [line: 130]
!   !   !   Child: 0  Id: i [type int] [line: 130]
!   !   !   Child: 1  Call: v [type void] [line: 130]
!   !   Sibling: 121  Op: % [type int] [line: 131]
!   !   !   Child: 0  Id: i [type int] [line: 131]
!   !   !   Child: 1  Call: v [type void] [line: 131]
!   !   Sibling: 122  Op: and [type bool] [line: 132]
!   !   !   Child: 0  Id: i [type int] [line: 132]
!   !   !   Child: 1  Call: v [type void] [line: 132]
!   !   Sibling: 123  Op: or [type bool] [line: 133]
!   !   !   Child: 0  Id: i [type int] [line: 133]
!   !   !   Child: 1  Call: v [type void] [line: 133]
!   !   Sibling: 124  Assign: = [type int] [line: 134]
!   !   !   Child: 0  Id: i [type int] [line: 134]
!   !   !   Child: 1  Call: v [type void] [line: 134]
!   !   Sibling: 125  Op: != [type bool] [line: 135]
!   !   !   Child: 0  Id: ia [type int] [line: 135]
!   !   !   Child: 1  Id: i [type int] [line: 135]
!   !   Sibling: 126  Op: <= [type bool] [line: 136]
!   !   !   Child: 0  Id: ia [type int] [line: 136]
!   !   !   Child: 1  Id: i [type int] [line: 136]
!   !   Sibling: 127  Op: == [type bool] [line: 137]
!   !   !   Child: 0  Id: ia [type int] [line: 137]
!   !   !   Child: 1  Id: i [type int] [line: 137]
!   !   Sibling: 128  Op: >= [type bool] [line: 138]
!   !   !   Child: 0  Id: ia [type int] [line: 138]
!   !   !   Child: 1  Id: i [type int] [line: 138]
!   !   Sibling: 129  Op: < [type bool] [line: 139]
!   !   !   Child: 0  Id: ia [type int] [line: 139]
!   !   !   Child: 1  Id: i [type int] [line: 139]
!   !   Sibling: 130  Op: > [type bool] [line: 140]
!   !   !   Child: 0  Id: ia [type int] [line: 140]
!   !   !   Child: 1  Id: i [type int] [line: 140]
!   !   Sibling: 131  Assign: *= [type int] [line: 141]
!   !   !   Child: 0  Id: ia [type int] [line: 141]
!   !   !   Child: 1  Id: i [type int] [line: 141]
!   !   Sibling: 132  Assign: += [type int] [line: 142]
!   !   !   Child: 0  Id: ia [type int] [line: 142]
!   !   !   Child: 1  Id: i [type int] [line: 142]
!   !   Sibling: 133  Assign: -= [type int] [line: 143]
!   !   !   Child: 0  Id: ia [type int] [line: 143]
!   !   !   Child: 1  Id: i [type int] [line: 143]
!   !   Sibling: 134  Assign: /= [type int] [line: 144]
!   !   !   Child: 0  Id: ia [type int] [line: 144]
!   !   !   Child: 1  Id: i [type int] [line: 144]
!   !   Sibling: 135  Op: + [type int] [line: 145]
!   !   !   Child: 0  Id: ia [type int] [line: 145]
!   !   !   Child: 1  Id: i [type int] [line: 145]
!   !   Sibling: 136  Op: - [type int] [line: 146]
!   !   !   Child: 0  Id: ia [type int] [line: 146]
!   !   !   Child: 1  Id: i [type int] [line: 146]
!   !   Sibling: 137  Op: * [type int] [line: 147]
!   !   !   Child: 0  Id: ia [type int] [line: 147]
!   !   !   Child: 1  Id: i [type int] [line: 147]
!   !   Sibling: 138  Op: / [type int] [line: 148]
!   !   !   Child: 0  Id: ia [type int] [line: 148]
!   !   !   Child: 1  Id: i [type int] [line: 148]
!   !   Sibling: 139  Op: % [type int] [line: 149]
!   !   !   Child: 0  Id: ia [type int] [line: 149]
!   !   !   Child: 1  Id: i [type int] [line: 149]
!   !   Sibling: 140  Op: and [type bool] [line: 150]
!   !   !   Child: 0  Id: ia [type int] [line: 150]
!   !   !   Child: 1  Id: i [type int] [line: 150]
!   !   Sibling: 141  Op: or [type bool] [line: 151]
!   !   !   Child: 0  Id: ia [type int] [line: 151]
!   !   !   Child: 1  Id: i [type int] [line: 151]
!   !   Sibling: 142  Assign: = [type int] [line: 152]
!   !   !   Child: 0  Id: ia [type int] [line: 152]
!   !   !   Child: 1  Id: i [type int] [line: 152]
!   !   Sibling: 143  Op: != [type bool] [line: 153]
!   !   !   Child: 0  Id: ia [type int] [line: 153]
!   !   !   Child: 1  Id: ia [type int] [line: 153]
!   !   Sibling: 144  Op: <= [type bool] [line: 154]
!   !   !   Child: 0  Id: ia [type int] [line: 154]
!   !   !   Child: 1  Id: ia [type int] [line: 154]
!   !   Sibling: 145  Op: == [type bool] [line: 155]
!   !   !   Child: 0  Id: ia [type int] [line: 155]
!   !   !   Child: 1  Id: ia [type int] [line: 155]
!   !   Sibling: 146  Op: >= [type bool] [line: 156]
!   !   !   Child: 0  Id: ia [type int] [line: 156]
!   !   !   Child: 1  Id: ia [type int] [line: 156]
!   !   Sibling: 147  Op: < [type bool] [line: 157]
!   !   !   Child: 0  Id: ia [type int] [line: 157]
!   !   !   Child: 1  Id: ia [type int] [line: 157]
!   !   Sibling: 148  Op: > [type bool] [line: 158]
!   !   !   Child: 0  Id: ia [type int] [line: 158]
!   !   !   Child: 1  Id: ia [type int] [line: 158]
!   !   Sibling: 149  Assign: *= [type int] [line: 159]
!   !   !   Child: 0  Id: ia [type int] [line: 159]
!   !   !   Child: 1  Id: ia [type int] [line: 159]
!   !   Sibling: 150  Assign: += [type int] [line: 160]
!   !   !   Child: 0  Id: ia [type int] [line: 160]
!   !   !   Child: 1  Id: ia [type int] [line: 160]
!   !   Sibling: 151  Assign: -= [type int] [line: 161]
!   !   !   Child: 0  Id: ia [type int] [line: 161]
!   !   !   Child: 1  Id: ia [type int] [line: 161]
!   !   Sibling: 152  Assign: /= [type int] [line: 162]
!   !   !   Child: 0  Id: ia [type int] [line: 162]
!   !   !   Child: 1  Id: ia [type int] [line: 162]
!   !   Sibling: 153  Op: + [type int] [line: 163]
!   !   !   Child: 0  Id: ia [type int] [line: 163]
!   !   !   Child: 1  Id: ia [type int] [line: 163]
!   !   Sibling: 154  Op: - [type int] [line: 164]
!   !   !   Child: 0  Id: ia [type int] [line: 164]
!   !   !   Child: 1  Id: ia [type int] [line: 164]
!   !   Sibling: 155  Op: * [type int] [line: 165]
!   !   !   Child: 0  Id: ia [type int] [line: 165]
!   !   !   Child: 1  Id: ia [type int] [line: 165]
!   !   Sibling: 156  Op: / [type int] [line: 166]
!   !   !   Child: 0  Id: ia [type int] [line: 166]
!   !   !   Child: 1  Id: ia [type int] [line: 166]
!   !   Sibling: 157  Op: % [type int] [line: 167]
!   !   !   Child: 0  Id: ia [type int] [line: 167]
!   !   !   Child: 1  Id: ia [type int] [line: 167]
!   !   Sibling: 158  Op: and [type bool] [line: 168]
!   !   !   Child: 0  Id: ia [type int] [line: 168]
!   !   !   Child: 1  Id: ia [type int] [line: 168]
!   !   Sibling: 159  Op: or [type bool] [line: 169]
!   !   !   Child: 0  Id: ia [type int] [line: 169]
!   !   !   Child: 1  Id: ia [type int] [line: 169]
!   !   Sibling: 160  Assign: = [type int] [line: 170]
!   !   !   Child: 0  Id: ia [type int] [line: 170]
!   !   !   Child: 1  Id: ia [type int] [line: 170]
!   !   Sibling: 161  Op: != [type bool] [line: 171]
!   !   !   Child: 0  Id: ia [type int] [line: 171]
!   !   !   Child: 1  Id: c [type char] [line: 171]
!   !   Sibling: 162  Op: <= [type bool] [line: 172]
!   !   !   Child: 0  Id: ia [type int] [line: 172]
!   !   !   Child: 1  Id: c [type char] [line: 172]
!   !   Sibling: 163  Op: == [type bool] [line: 173]
!   !   !   Child: 0  Id: ia [type int] [line: 173]
!   !   !   Child: 1  Id: c [type char] [line: 173]
!   !   Sibling: 164  Op: >= [type bool] [line: 174]
!   !   !   Child: 0  Id: ia [type int] [line: 174]
!   !   !   Child: 1  Id: c [type char] [line: 174]
!   !   Sibling: 165  Op: < [type bool] [line: 175]
!   !   !   Child: 0  Id: ia [type int] [line: 175]
!   !   !   Child: 1  Id: c [type char] [line: 175]
!   !   Sibling: 166  Op: > [type bool] [line: 176]
!   !   !   Child: 0  Id: ia [type int] [line: 176]
!   !   !   Child: 1  Id: c [type char] [line: 176]
!   !   Sibling: 167  Assign: *= [type int] [line: 177]
!   !   !   Child: 0  Id: ia [type int] [line: 177]
!   !   !   Child: 1  Id: c [type char] [line: 177]
!   !   Sibling: 168  Assign: += [type int] [line: 178]
!   !   !   Child: 0  Id: ia [type int] [line: 178]
!   !   !   Child: 1  Id: c [type char] [line: 178]
!   !   Sibling: 169  Assign: -= [type int] [line: 179]
!   !   !   Child: 0  Id: ia [type int] [line: 179]
!   !   !   Child: 1  Id: c [type char] [line: 179]
!   !   Sibling: 170  Assign: /= [type int] [line: 180]
!   !   !   Child: 0  Id: ia [type int] [line: 180]
!   !   !   Child: 1  Id: c [type char] [line: 180]
!   !   Sibling: 171  Op: + [type int] [line: 181]
!   !   !   Child: 0  Id: ia [type int] [line: 181]
!   !   !   Child: 1  Id: c [type char] [line: 181]
!   !   Sibling: 172  Op: - [type int] [line: 182]
!   !   !   Child: 0  Id: ia [type int] [line: 182]
!   !   !   Child: 1  Id: c [type char] [line: 182]
!   !   Sibling: 173  Op: * [type int] [line: 183]
!   !   !   Child: 0  Id: ia [type int] [line: 183]
!   !   !   Child: 1  Id: c [type char] [line: 183]
!   !   Sibling: 174  Op: / [type int] [line: 184]
!   !   !   Child: 0  Id: ia [type int] [line: 184]
!   !   !   Child: 1  Id: c [type char] [line: 184]
!   !   Sibling: 175  Op: % [type int] [line: 185]
!   !   !   Child: 0  Id: ia [type int] [line: 185]
!   !   !   Child: 1  Id: c [type char] [line: 185]
!   !   Sibling: 176  Op: and [type bool] [line: 186]
!   !   !   Child: 0  Id: ia [type int] [line: 186]
!   !   !   Child: 1  Id: c [type char] [line: 186]
!   !   Sibling: 177  Op: or [type bool] [line: 187]
!   !   !   Child: 0  Id: ia [type int] [line: 187]
!   !   !   Child: 1  Id: c [type char] [line: 187]
!   !   Sibling: 178  Assign: = [type int] [line: 188]
!   !   !   Child: 0  Id: ia [type int] [line: 188]
!   !   !   Child: 1  Id: c [type char] [line: 188]
!   !   Sibling: 179  Op: != [type bool] [line: 189]
!   !   !   Child: 0  Id: ia [type int] [line: 189]
!   !   !   Child: 1  Id: ca [type char] [line: 189]
!   !   Sibling: 180  Op: <= [type bool] [line: 190]
!   !   !   Child: 0  Id: ia [type int] [line: 190]
!   !   !   Child: 1  Id: ca [type char] [line: 190]
!   !   Sibling: 181  Op: == [type bool] [line: 191]
!   !   !   Child: 0  Id: ia [type int] [line: 191]
!   !   !   Child: 1  Id: ca [type char] [line: 191]
!   !   Sibling: 182  Op: >= [type bool] [line: 192]
!   !   !   Child: 0  Id: ia [type int] [line: 192]
!   !   !   Child: 1  Id: ca [type char] [line: 192]
!   !   Sibling: 183  Op: < [type bool] [line: 193]
!   !   !   Child: 0  Id: ia [type int] [line: 193]
!   !   !   Child: 1  Id: ca [type char] [line: 193]
!   !   Sibling: 184  Op: > [type bool] [line: 194]
!   !   !   Child: 0  Id: ia [type int] [line: 194]
!   !   !   Child: 1  Id: ca [type char] [line: 194]
!   !   Sibling: 185  Assign: *= [type int] [line: 195]
!   !   !   Child: 0  Id: ia [type int] [line: 195]
!   !   !   Child: 1  Id: ca [type char] [line: 195]
!   !   Sibling: 186  Assign: += [type int] [line: 196]
!   !   !   Child: 0  Id: ia [type int] [line: 196]
!   !   !   Child: 1  Id: ca [type char] [line: 196]
!   !   Sibling: 187  Assign: -= [type int] [line: 197]
!   !   !   Child: 0  Id: ia [type int] [line: 197]
!   !   !   Child: 1  Id: ca [type char] [line: 197]
!   !   Sibling: 188  Assign: /= [type int] [line: 198]
!   !   !   Child: 0  Id: ia [type int] [line: 198]
!   !   !   Child: 1  Id: ca [type char] [line: 198]
!   !   Sibling: 189  Op: + [type int] [line: 199]
!   !   !   Child: 0  Id: ia [type int] [line: 199]
!   !   !   Child: 1  Id: ca [type char] [line: 199]
!   !   Sibling: 190  Op: - [type int] [line: 200]
!   !   !   Child: 0  Id: ia [type int] [line: 200]
!   !   !   Child: 1  Id: ca [type char] [line: 200]
!   !   Sibling: 191  Op: * [type int] [line: 201]
!   !   !   Child: 0  Id: ia [type int] [line: 201]
!   !   !   Child: 1  Id: ca [type char] [line: 201]
!   !   Sibling: 192  Op: / [type int] [line: 202]
!   !   !   Child: 0  Id: ia [type int] [line: 202]
!   !   !   Child: 1  Id: ca [type char] [line: 202]
!   !   Sibling: 193  Op: % [type int] [line: 203]
!   !   !   Child: 0  Id: ia [type int] [line: 203]
!   !   !   Child: 1  Id: ca [type char] [line: 203]
!   !   Sibling: 194  Op: and [type bool] [line: 204]
!   !   !   Child: 0  Id: ia [type int] [line: 204]
!   !   !   Child: 1  Id: ca [type char] [line: 204]
!   !   Sibling: 195  Op: or [type bool] [line: 205]
!   !   !   Child: 0  Id: ia [type int] [line: 205]
!   !   !   Child: 1  Id: ca [type char] [line: 205]
!   !   Sibling: 196  Assign: = [type int] [line: 206]
!   !   !   Child: 0  Id: ia [type int] [line: 206]
!   !   !   Child: 1  Id: ca [type char] [line: 206]
!   !   Sibling: 197  Op: != [type bool] [line: 207]
!   !   !   Child: 0  Id: ia [type int] [line: 207]
!   !   !   Child: 1  Id: b [type bool] [line: 207]
!   !   Sibling: 198  Op: <= [type bool] [line: 208]
!   !   !   Child: 0  Id: ia [type int] [line: 208]
!   !   !   Child: 1  Id: b [type bool] [line: 208]
!   !   Sibling: 199  Op: == [type bool] [line: 209]
!   !   !   Child: 0  Id: ia [type int] [line: 209]
!   !   !   Child: 1  Id: b [type bool] [line: 209]
!   !   Sibling: 200  Op: >= [type bool] [line: 210]
!   !   !   Child: 0  Id: ia [type int] [line: 210]
!   !   !   Child: 1  Id: b [type bool] [line: 210]
!   !   Sibling: 201  Op: < [type bool] [line: 211]
!   !   !   Child: 0  Id: ia [type int] [line: 211]
!   !   !   Child: 1  Id: b [type bool] [line: 211]
!   !   Sibling: 202  Op: > [type bool] [line: 212]
!   !   !   Child: 0  Id: ia [type int] [line: 212]
!   !   !   Child: 1  Id: b [type bool] [line: 212]
!   !   Sibling: 203  Assign: *= [type int] [line: 213]
!   !   !   Child: 0  Id: ia [type int] [line: 213]
!   !   !   Child: 1  Id: b [type bool] [line: 213]
!   !   Sibling: 204  Assign: += [type int] [line: 214]
!   !   !   Child: 0  Id: ia [type int] [line: 214]
!   !   !   Child: 1  Id: b [type bool] [line: 214]
!   !   Sibling: 205  Assign: -= [type int] [line: 215]
!   !   !   Child: 0  Id: ia [type int] [line: 215]
!   !   !   Child: 1  Id: b [type bool] [line: 215]
!   !   Sibling: 206  Assign: /= [type int] [line: 216]
!   !   !   Child: 0  Id: ia [type int] [line: 216]
!   !   !   Child: 1  Id: b [type bool] [line: 216]
!   !   Sibling: 207  Op: + [type int] [line: 217]
!   !   !   Child: 0  Id: ia [type int] [line: 217]
!   !   !   Child: 1  Id: b [type bool] [line: 217]
!   !   Sibling: 208  Op: - [type int] [line: 218]
!   !   !   Child: 0  Id: ia [type int] [line: 218]
!   !   !   Child: 1  Id: b [type bool] [line: 218]
!   !   Sibling: 209  Op: * [type int] [line: 219]
!   !   !   Child: 0  Id: ia [type int] [line: 219]
!   !   !   Child: 1  Id: b [type bool] [line: 219]
!   !   Sibling: 210  Op: / [type int] [line: 220]
!   !   !   Child: 0  Id: ia [type int] [line: 220]
!   !   !   Child: 1  Id: b [type bool] [line: 220]
!   !   Sibling: 211  Op: % [type int] [line: 221]
!   !   !   Child: 0  Id: ia [type int] [line: 221]
!   !   !   Child: 1  Id: b [type bool] [line: 221]
!   !   Sibling: 212  Op: and [type bool] [line: 222]
!   !   !   Child: 0  Id: ia [type int] [line: 222]
!   !   !   Child: 1  Id: b [type bool] [line: 222]
!   !   Sibling: 213  Op: or [type bool] [line: 223]
!   !   !   Child: 0  Id: ia [type int] [line: 223]
!   !   !   Child: 1  Id: b [type bool] [line: 223]
!   !   Sibling: 214  Assign: = [type int] [line: 224]
!   !   !   Child: 0  Id: ia [type int] [line: 224]
!   !   !   Child: 1  Id: b [type bool] [line: 224]
!   !   Sibling: 215  Op: != [type bool] [line: 225]
!   !   !   Child: 0  Id: ia [type int] [line: 225]
!   !   !   Child: 1  Id: ba [type bool] [line: 225]
!   !   Sibling: 216  Op: <= [type bool] [line: 226]
!   !   !   Child: 0  Id: ia [type int] [line: 226]
!   !   !   Child: 1  Id: ba [type bool] [line: 226]
!   !   Sibling: 217  Op: == [type bool] [line: 227]
!   !   !   Child: 0  Id: ia [type int] [line: 227]
!   !   !   Child: 1  Id: ba [type bool] [line: 227]
!   !   Sibling: 218  Op: >= [type bool] [line: 228]
!   !   !   Child: 0  Id: ia [type int] [line: 228]
!   !   !   Child: 1  Id: ba [type bool] [line: 228]
!   !   Sibling: 219  Op: < [type bool] [line: 229]
!   !   !   Child: 0  Id: ia [type int] [line: 229]
!   !   !   Child: 1  Id: ba [type bool] [line: 229]
!   !   Sibling: 220  Op: > [type bool] [line: 230]
!   !   !   Child: 0  Id: ia [type int] [line: 230]
!   !   !   Child: 1  Id: ba [type bool] [line: 230]
!   !   Sibling: 221  Assign: *= [type int] [line: 231]
!   !   !   Child: 0  Id: ia [type int] [line: 231]
!   !   !   Child: 1  Id: ba [type bool] [line: 231]
!   !   Sibling: 222  Assign: += [type int] [line: 232]
!   !   !   Child: 0  Id: ia [type int] [line: 232]
!   !   !   Child: 1  Id: ba [type bool] [line: 232]
!   !   Sibling: 223  Assign: -= [type int] [line: 233]
!   !   !   Child: 0  Id: ia [type int] [line: 233]
!   !   !   Child: 1  Id: ba [type bool] [line: 233]
!   !   Sibling: 224  Assign: /= [type int] [line: 234]
!   !   !   Child: 0  Id: ia [type int] [line: 234]
!   !   !   Child: 1  Id: ba [type bool] [line: 234]
!   !   Sibling: 225  Op: + [type int] [line: 235]
!   !   !   Child: 0  Id: ia [type int] [line: 235]
!   !   !   Child: 1  Id: ba [type bool] [line: 235]
!   !   Sibling: 226  Op: - [type int] [line: 236]
!   !   !   Child: 0  Id: ia [type int] [line: 236]
!   !   !   Child: 1  Id: ba [type bool] [line: 236]
!   !   Sibling: 227  Op: * [type int] [line: 237]
!   !   !   Child: 0  Id: ia [type int] [line: 237]
!   !   !   Child: 1  Id: ba [type bool] [line: 237]
!   !   Sibling: 228  Op: / [type int] [line: 238]
!   !   !   Child: 0  Id: ia [type int] [line: 238]
!   !   !   Child: 1  Id: ba [type bool] [line: 238]
!   !   Sibling: 229  Op: % [type int] [line: 239]
!   !   !   Child: 0  Id: ia [type int] [line: 239]
!   !   !   Child: 1  Id: ba [type bool] [line: 239]
!   !   Sibling: 230  Op: and [type bool] [line: 240]
!   !   !   Child: 0  Id: ia [type int] [line: 240]
!   !   !   Child: 1  Id: ba [type bool] [line: 240]
!   !   Sibling: 231  Op: or [type bool] [line: 241]
!   !   !   Child: 0  Id: ia [type int] [line: 241]
!   !   !   Child: 1  Id: ba [type bool] [line: 241]
!   !   Sibling: 232  Assign: = [type int] [line: 242]
!   !   !   Child: 0  Id: ia [type int] [line: 242]
!   !   !   Child: 1  Id: ba [type bool] [line: 242]
!   !   Sibling: 233  Op: != [type bool] [line: 243]
!   !   !   Child: 0  Id: ia [type int] [line: 243]
!   !   !   Child: 1  Call: v [type void] [line: 243]
!   !   Sibling: 234  Op: <= [type bool] [line: 244]
!   !   !   Child: 0  Id: ia [type int] [line: 244]
!   !   !   Child: 1  Call: v [type void] [line: 244]
!   !   Sibling: 235  Op: == [type bool] [line: 245]
!   !   !   Child: 0  Id: ia [type int] [line: 245]
!   !   !   Child: 1  Call: v [type void] [line: 245]
!   !   Sibling: 236  Op: >= [type bool] [line: 246]
!   !   !   Child: 0  Id: ia [type int] [line: 246]
!   !   !   Child: 1  Call: v [type void] [line: 246]
!   !   Sibling: 237  Op: < [type bool] [line: 247]
!   !   !   Child: 0  Id: ia [type int] [line: 247]
!   !   !   Child: 1  Call: v [type void] [line: 247]
!   !   Sibling: 238  Op: > [type bool] [line: 248]
!   !   !   Child: 0  Id: ia [type int] [line: 248]
!   !   !   Child: 1  Call: v [type void] [line: 248]
!   !   Sibling: 239  Assign: *= [type int] [line: 249]
!   !   !   Child: 0  Id: ia [type int] [line: 249]
!   !   !   Child: 1  Call: v [type void] [line: 249]
!   !   Sibling: 240  Assign: += [type int] [line: 250]
!   !   !   Child: 0  Id: ia [type int] [line: 250]
!   !   !   Child: 1  Call: v [type void] [line: 250]
!   !   Sibling: 241  Assign: -= [type int] [line: 251]
!   !   !   Child: 0  Id: ia [type int] [line: 251]
!   !   !   Child: 1  Call: v [type void] [line: 251]
!   !   Sibling: 242  Assign: /= [type int] [line: 252]
!   !   !   Child: 0  Id: ia [type int] [line: 252]
!   !   !   Child: 1  Call: v [type void] [line: 252]
!   !   Sibling: 243  Op: + [type int] [line: 253]
!   !   !   Child: 0  Id: ia [type int] [line: 253]
!   !   !   Child: 1  Call: v [type void] [line: 253]
!   !   Sibling: 244  Op: - [type int] [line: 254]
!   !   !   Child: 0  Id: ia [type int] [line: 254]
!   !   !   Child: 1  Call: v [type void] [line: 254]
!   !   Sibling: 245  Op: * [type int] [line: 255]
!   !   !   Child: 0  Id: ia [type int] [line: 255]
!   !   !   Child: 1  Call: v [type void] [line: 255]
!   !   Sibling: 246  Op: / [type int] [line: 256]
!   !   !   Child: 0  Id: ia [type int] [line: 256]
!   !   !   Child: 1  Call: v [type void] [line: 256]
!   !   Sibling: 247  Op: % [type int] [line: 257]
!   !   !   Child: 0  Id: ia [type int] [line: 257]
!   !   !   Child: 1  Call: v [type void] [line: 257]
!   !   Sibling: 248  Op: and [type bool] [line: 258]
!   !   !   Child: 0  Id: ia [type int] [line: 258]
!   !   !   Child: 1  Call: v [type void] [line: 258]
!   !   Sibling: 249  Op: or [type bool] [line: 259]
!   !   !   Child: 0  Id: ia [type int] [line: 259]
!   !   !   Child: 1  Call: v [type void] [line: 259]
!   !   Sibling: 250  Assign: = [type int] [line: 260]
!   !   !   Child: 0  Id: ia [type int] [line: 260]
!   !   !   Child: 1  Call: v [type void] [line: 260]
!   !   Sibling: 251  Op: != [type bool] [line: 261]
!   !   !   Child: 0  Id: c [type char] [line: 261]
!   !   !   Child: 1  Id: i [type int] [line: 261]
!   !   Sibling: 252  Op: <= [type bool] [line: 262]
!   !   !   Child: 0  Id: c [type char] [line: 262]
!   !   !   Child: 1  Id: i [type int] [line: 262]
!   !   Sibling: 253  Op: == [type bool] [line: 263]
!   !   !   Child: 0  Id: c [type char] [line: 263]
!   !   !   Child: 1  Id: i [type int] [line: 263]
!   !   Sibling: 254  Op: >= [type bool] [line: 264]
!   !   !   Child: 0  Id: c [type char] [line: 264]
!   !   !   Child: 1  Id: i [type int] [line: 264]
!   !   Sibling: 255  Op: < [type bool] [line: 265]
!   !   !   Child: 0  Id: c [type char] [line: 265]
!   !   !   Child: 1  Id: i [type int] [line: 265]
!   !   Sibling: 256  Op: > [type bool] [line: 266]
!   !   !   Child: 0  Id: c [type char] [line: 266]
!   !   !   Child: 1  Id: i [type int] [line: 266]
!   !   Sibling: 257  Assign: *= [type int] [line: 267]
!   !   !   Child: 0  Id: c [type char] [line: 267]
!   !   !   Child: 1  Id: i [type int] [line: 267]
!   !   Sibling: 258  Assign: += [type int] [line: 268]
!   !   !   Child: 0  Id: c [type char] [line: 268]
!   !   !   Child: 1  Id: i [type int] [line: 268]
!   !   Sibling: 259  Assign: -= [type int] [line: 269]
!   !   !   Child: 0  Id: c [type char] [line: 269]
!   !   !   Child: 1  Id: i [type int] [line: 269]
!   !   Sibling: 260  Assign: /= [type int] [line: 270]
!   !   !   Child: 0  Id: c [type char] [line: 270]
!   !   !   Child: 1  Id: i [type int] [line: 270]
!   !   Sibling: 261  Op: + [type int] [line: 271]
!   !   !   Child: 0  Id: c [type char] [line: 271]
!   !   !   Child: 1  Id: i [type int] [line: 271]
!   !   Sibling: 262  Op: - [type int] [line: 272]
!   !   !   Child: 0  Id: c [type char] [line: 272]
!   !   !   Child: 1  Id: i [type int] [line: 272]
!   !   Sibling: 263  Op: * [type int] [line: 273]
!   !   !   Child: 0  Id: c [type char] [line: 273]
!   !   !   Child: 1  Id: i [type int] [line: 273]
!   !   Sibling: 264  Op: / [type int] [line: 274]
!   !   !   Child: 0  Id: c [type char] [line: 274]
!   !   !   Child: 1  Id: i [type int] [line: 274]
!   !   Sibling: 265  Op: % [type int] [line: 275]
!   !   !   Child: 0  Id: c [type char] [line: 275]
!   !   !   Child: 1  Id: i [type int] [line: 275]
!   !   Sibling: 266  Op: and [type bool] [line: 276]
!   !   !   Child: 0  Id: c [type char] [line: 276]
!   !   !   Child: 1  Id: i [type int] [line: 276]
!   !   Sibling: 267  Op: or [type bool] [line: 277]
!   !   !   Child: 0  Id: c [type char] [line: 277]
!   !   !   Child: 1  Id: i [type int] [line: 277]
!   !   Sibling: 268  Assign: = [type char] [line: 278]
!   !   !   Child: 0  Id: c [type char] [line: 278]
!   !   !   Child: 1  Id: i [type int] [line: 278]
!   !   Sibling: 269  Op: != [type bool] [line: 279]
!   !   !   Child: 0  Id: c [type char] [line: 279]
!   !   !   Child: 1  Id: ia [type int] [line: 279]
!   !   Sibling: 270  Op: <= [type bool] [line: 280]
!   !   !   Child: 0  Id: c [type char] [line: 280]
!   !   !   Child: 1  Id: ia [type int] [line: 280]
!   !   Sibling: 271  Op: == [type bool] [line: 281]
!   !   !   Child: 0  Id: c [type char] [line: 281]
!   !   !   Child: 1  Id: ia [type int] [line: 281]
!   !   Sibling: 272  Op: >= [type bool] [line: 282]
!   !   !   Child: 0  Id: c [type char] [line: 282]
!   !   !   Child: 1  Id: ia [type int] [line: 282]
!   !   Sibling: 273  Op: < [type bool] [line: 283]
!   !   !   Child: 0  Id: c [type char] [line: 283]
!   !   !   Child: 1  Id: ia [type int] [line: 283]
!   !   Sibling: 274  Op: > [type bool] [line: 284]
!   !   !   Child: 0  Id: c [type char] [line: 284]
!   !   !   Child: 1  Id: ia [type int] [line: 284]
!   !   Sibling: 275  Assign: *= [type int] [line: 285]
!   !   !   Child: 0  Id: c [type char] [line: 285]
!   !   !   Child: 1  Id: ia [type int] [line: 285]
!   !   Sibling: 276  Assign: += [type int] [line: 286]
!   !   !   Child: 0  Id: c [type char] [line: 286]
!   !   !   Child: 1  Id: ia [type int] [line: 286]
!   !   Sibling: 277  Assign: -= [type int] [line: 287]
!   !   !   Child: 0  Id: c [type char] [line: 287]
!   !   !   Child: 1  Id: ia [type int] [line: 287]
!   !   Sibling: 278  Assign: /= [type int] [line: 288]
!   !   !   Child: 0  Id: c [type char] [line: 288]
!   !   !   Child: 1  Id: ia [type int] [line: 288]
!   !   Sibling: 279  Op: + [type int] [line: 289]
!   !   !   Child: 0  Id: c [type char] [line: 289]
!   !   !   Child: 1  Id: ia [type int] [line: 289]
!   !   Sibling: 280  Op: - [type int] [line: 290]
!   !   !   Child: 0  Id: c [type char] [line: 290]
!   !   !   Child: 1  Id: ia [type int] [line: 290]
!   !   Sibling: 281  Op: * [type int] [line: 291]
!   !   !   Child: 0  Id: c [type char] [line: 291]
!   !   !   Child: 1  Id: ia [type int] [line: 291]
!   !   Sibling: 282  Op: / [type int] [line: 292]
!   !   !   Child: 0  Id: c [type char] [line: 292]
!   !   !   Child: 1  Id: ia [type int] [line: 292]
!   !   Sibling: 283  Op: % [type int] [line: 293]
!   !   !   Child: 0  Id: c [type char] [line: 293]
!   !   !   Child: 1  Id: ia [type int] [line: 293]
!   !   Sibling: 284  Op: and [type bool] [line: 294]
!   !   !   Child: 0  Id: c [type char] [line: 294]
!   !   !   Child: 1  Id: ia [type int] [line: 294]
!   !   Sibling: 285  Op: or [type bool] [line: 295]
!   !   !   Child: 0  Id: c [type char] [line: 295]
!   !   !   Child: 1  Id: ia [type int] [line: 295]
!   !   Sibling: 286  Assign: = [type char] [line: 296]
!   !   !   Child: 0  Id: c [type char] [line: 296]
!   !   !   Child: 1  Id: ia [type int] [line: 296]
!   !   Sibling: 287  Op: != [type bool] [line: 297]
!   !   !   Child: 0  Id: c [type char] [line: 297]
!   !   !   Child: 1  Id: c [type char] [line: 297]
!   !   Sibling: 288  Op: <= [type bool] [line: 298]
!   !   !   Child: 0  Id: c [type char] [line: 298]
!   !   !   Child: 1  Id: c [type char] [line: 298]
!   !   Sibling: 289  Op: == [type bool] [line: 299]
!   !   !   Child: 0  Id: c [type char] [line: 299]
!   !   !   Child: 1  Id: c [type char] [line: 299]
!   !   Sibling: 290  Op: >= [type bool] [line: 300]
!   !   !   Child: 0  Id: c [type char] [line: 300]
!   !   !   Child: 1  Id: c [type char] [line: 300]
!   !   Sibling: 291  Op: < [type bool] [line: 301]
!   !   !   Child: 0  Id: c [type char] [line: 301]
!   !   !   Child: 1  Id: c [type char] [line: 301]
!   !   Sibling: 292  Op: > [type bool] [line: 302]
!   !   !   Child: 0  Id: c [type char] [line: 302]
!   !   !   Child: 1  Id: c [type char] [line: 302]
!   !   Sibling: 293  Assign: *= [type int] [line: 303]
!   !   !   Child: 0  Id: c [type char] [line: 303]
!   !   !   Child: 1  Id: c [type char] [line: 303]
!   !   Sibling: 294  Assign: += [type int] [line: 304]
!   !   !   Child: 0  Id: c [type char] [line: 304]
!   !   !   Child: 1  Id: c [type char] [line: 304]
!   !   Sibling: 295  Assign: -= [type int] [line: 305]
!   !   !   Child: 0  Id: c [type char] [line: 305]
!   !   !   Child: 1  Id: c [type char] [line: 305]
!   !   Sibling: 296  Assign: /= [type int] [line: 306]
!   !   !   Child: 0  Id: c [type char] [line: 306]
!   !   !   Child: 1  Id: c [type char] [line: 306]
!   !   Sibling: 297  Op: + [type int] [line: 307]
!   !   !   Child: 0  Id: c [type char] [line: 307]
!   !   !   Child: 1  Id: c [type char] [line: 307]
!   !   Sibling: 298  Op: - [type int] [line: 308]
!   !   !   Child: 0  Id: c [type char] [line: 308]
!   !   !   Child: 1  Id: c [type char] [line: 308]
!   !   Sibling: 299  Op: * [type int] [line: 309]
!   !   !   Child: 0  Id: c [type char] [line: 309]
!   !   !   Child: 1  Id: c [type char] [line: 309]
!   !   Sibling: 300  Op: / [type int] [line: 310]
!   !   !   Child: 0  Id: c [type char] [line: 310]
!   !   !   Child: 1  Id: c [type char] [line: 310]
!   !   Sibling: 301  Op: % [type int] [line: 311]
!   !   !   Child: 0  Id: c [type char] [line: 311]
!   !   !   Child: 1  Id: c [type char] [line: 311]
!   !   Sibling: 302  Op: and [type bool] [line: 312]
!   !   !   Child: 0  Id: c [type char] [line: 312]
!   !   !   Child: 1  Id: c [type char] [line: 312]
!   !   Sibling: 303  Op: or [type bool] [line: 313]
!   !   !   Child: 0  Id: c [type char] [line: 313]
!   !   !   Child: 1  Id: c [type char] [line: 313]
!   !   Sibling: 304  Assign: = [type char] [line: 314]
!   !   !   Child: 0  Id: c [type char] [line: 314]
!   !   !   Child: 1  Id: c [type char] [line: 314]
!   !   Sibling: 305  Op: != [type bool] [line: 315]
!   !   !   Child: 0  Id: c [type char] [line: 315]
!   !   !   Child: 1  Id: ca [type char] [line: 315]
!   !   Sibling: 306  Op: <= [type bool] [line: 316]
!   !   !   Child: 0  Id: c [type char] [line: 316]
!   !   !   Child: 1  Id: ca [type char] [line: 316]
!   !   Sibling: 307  Op: == [type bool] [line: 317]
!   !   !   Child: 0  Id: c [type char] [line: 317]
!   !   !   Child: 1  Id: ca [type char] [line: 317]
!   !   Sibling: 308  Op: >= [type bool] [line: 318]
!   !   !   Child: 0  Id: c [type char] [line: 318]
!   !   !   Child: 1  Id: ca [type char] [line: 318]
!   !   Sibling: 309  Op: < [type bool] [line: 319]
!   !   !   Child: 0  Id: c [type char] [line: 319]
!   !   !   Child: 1  Id: ca [type char] [line: 319]
!   !   Sibling: 310  Op: > [type bool] [line: 320]
!   !   !   Child: 0  Id: c [type char] [line: 320]
!   !   !   Child: 1  Id: ca [type char] [line: 320]
!   !   Sibling: 311  Assign: *= [type int] [line: 321]
!   !   !   Child: 0  Id: c [type char] [line: 321]
!   !   !   Child: 1  Id: ca [type char] [line: 321]
!   !   Sibling: 312  Assign: += [type int] [line: 322]
!   !   !   Child: 0  Id: c [type char] [line: 322]
!   !   !   Child: 1  Id: ca [type char] [line: 322]
!   !   Sibling: 313  Assign: -= [type int] [line: 323]
!   !   !   Child: 0  Id: c [type char] [line: 323]
!   !   !   Child: 1  Id: ca [type char] [line: 323]
!   !   Sibling: 314  Assign: /= [type int] [line: 324]
!   !   !   Child: 0  Id: c [type char] [line: 324]
!   !   !   Child: 1  Id: ca [type char] [line: 324]
!   !   Sibling: 315  Op: + [type int] [line: 325]
!   !   !   Child: 0  Id: c [type char] [line: 325]
!   !   !   Child: 1  Id: ca [type char] [line: 325]
!   !   Sibling: 316  Op: - [type int] [line: 326]
!   !   !   Child: 0  Id: c [type char] [line: 326]
!   !   !   Child: 1  Id: ca [type char] [line: 326]
!   !   Sibling: 317  Op: * [type int] [line: 327]
!   !   !   Child: 0  Id: c [type char] [line: 327]
!   !   !   Child: 1  Id: ca [type char] [line: 327]
!   !   Sibling: 318  Op: / [type int] [line: 328]
!   !   !   Child: 0  Id: c [type char] [line: 328]
!   !   !   Child: 1  Id: ca [type char] [line: 328]
!   !   Sibling: 319  Op: % [type int] [line: 329]
!   !   !   Child: 0  Id: c [type char] [line: 329]
!   !   !   Child: 1  Id: ca [type char] [line: 329]
!   !   Sibling: 320  Op: and [type bool] [line: 330]
!   !   !   Child: 0  Id: c [type char] [line: 330]
!   !   !   Child: 1  Id: ca [type char] [line: 330]
!   !   Sibling: 321  Op: or [type bool] [line: 331]
!   !   !   Child: 0  Id: c [type char] [line: 331]
!   !   !   Child: 1  Id: ca [type char] [line: 331]
!   !   Sibling: 322  Assign: = [type char] [line: 332]
!   !   !   Child: 0  Id: c [type char] [line: 332]
!   !   !   Child: 1  Id: ca [type char] [line: 332]
!   !   Sibling: 323  Op: != [type bool] [line: 333]
!   !   !   Child: 0  Id: c [type char] [line: 333]
!   !   !   Child: 1  Id: b [type bool] [line: 333]
!   !   Sibling: 324  Op: <= [type bool] [line: 334]
!   !   !   Child: 0  Id: c [type char] [line: 334]
!   !   !   Child: 1  Id: b [type bool] [line: 334]
!   !   Sibling: 325  Op: == [type bool] [line: 335]
!   !   !   Child: 0  Id: c [type char] [line: 335]
!   !   !   Child: 1  Id: b [type bool] [line: 335]
!   !   Sibling: 326  Op: >= [type bool] [line: 336]
!   !   !   Child: 0  Id: c [type char] [line: 336]
!   !   !   Child: 1  Id: b [type bool] [line: 336]
!   !   Sibling: 327  Op: < [type bool] [line: 337]
!   !   !   Child: 0  Id: c [type char] [line: 337]
!   !   !   Child: 1  Id: b [type bool] [line: 337]
!   !   Sibling: 328  Op: > [type bool] [line: 338]
!   !   !   Child: 0  Id: c [type char] [line: 338]
!   !   !   Child: 1  Id: b [type bool] [line: 338]
!   !   Sibling: 329  Assign: *= [type int] [line: 339]
!   !   !   Child: 0  Id: c [type char] [line: 339]
!   !   !   Child: 1  Id: b [type bool] [line: 339]
!   !   Sibling: 330  Assign: += [type int] [line: 340]
!   !   !   Child: 0  Id: c [type char] [line: 340]
!   !   !   Child: 1  Id: b [type bool] [line: 340]
!   !   Sibling: 331  Assign: -= [type int] [line: 341]
!   !   !   Child: 0  Id: c [type char] [line: 341]
!   !   !   Child: 1  Id: b [type bool] [line: 341]
!   !   Sibling: 332  Assign: /= [type int] [line: 342]
!   !   !   Child: 0  Id: c [type char] [line: 342]
!   !   !   Child: 1  Id: b [type bool] [line: 342]
!   !   Sibling: 333  Op: + [type int] [line: 343]
!   !   !   Child: 0  Id: c [type char] [line: 343]
!   !   !   Child: 1  Id: b [type bool] [line: 343]
!   !   Sibling: 334  Op: - [type int] [line: 344]
!   !   !   Child: 0  Id: c [type char] [line: 344]
!   !   !   Child: 1  Id: b [type bool] [line: 344]
!   !   Sibling: 335  Op: * [type int] [line: 345]
!   !   !   Child: 0  Id: c [type char] [line: 345]
!   !   !   Child: 1  Id: b [type bool] [line: 345]
!   !   Sibling: 336  Op: / [type int] [line: 346]
!   !   !   Child: 0  Id: c [type char] [line: 346]
!   !   !   Child: 1  Id: b [type bool] [line: 346]
!   !   Sibling: 337  Op: % [type int] [line: 347]
!   !   !   Child: 0  Id: c [type char] [line: 347]
!   !   !   Child: 1  Id: b [type bool] [line: 347]
!   !   Sibling: 338  Op: and [type bool] [line: 348]
!   !   !   Child: 0  Id: c [type char] [line: 348]
!   !   !   Child: 1  Id: b [type bool] [line: 348]
!   !   Sibling: 339  Op: or [type bool] [line: 349]
!   !   !   Child: 0  Id: c [type char] [line: 349]
!   !   !   Child: 1  Id: b [type bool] [line: 349]
!   !   Sibling: 340  Assign: = [type char] [line: 350]
!   !   !   Child: 0  Id: c [type char] [line: 350]
!   !   !   Child: 1  Id: b [type bool] [line: 350]
!   !   Sibling: 341  Op: != [type bool] [line: 351]
!   !   !   Child: 0  Id: c [type char] [line: 351]
!   !   !   Child: 1  Id: ba [type bool] [line: 351]
!   !   Sibling: 342  Op: <= [type bool] [line: 352]
!   !   !   Child: 0  Id: c [type char] [line: 352]
!   !   !   Child: 1  Id: ba [type bool] [line: 352]
!   !   Sibling: 343  Op: == [type bool] [line: 353]
!   !   !   Child: 0  Id: c [type char] [line: 353]
!   !   !   Child: 1  Id: ba [type bool] [line: 353]
!   !   Sibling: 344  Op: >= [type bool] [line: 354]
!   !   !   Child: 0  Id: c [type char] [line: 354]
!   !   !   Child: 1  Id: ba [type bool] [line: 354]
!   !   Sibling: 345  Op: < [type bool] [line: 355]
!   !   !   Child: 0  Id: c [type char] [line: 355]
!   !   !   Child: 1  Id: ba [type bool] [line: 355]
!   !   Sibling: 346  Op: > [type bool] [line: 356]
!   !   !   Child: 0  Id: c [type char] [line: 356]
!   !   !   Child: 1  Id: ba [type bool] [line: 356]
!   !   Sibling: 347  Assign: *= [type int] [line: 357]
!   !   !   Child: 0  Id: c [type char] [line: 357]
!   !   !   Child: 1  Id: ba [type bool] [line: 357]
!   !   Sibling: 348  Assign: += [type int] [line: 358]
!   !   !   Child: 0  Id: c [type char] [line: 358]
!   !   !   Child: 1  Id: ba [type bool] [line: 358]
!   !   Sibling: 349  Assign: -= [type int] [line: 359]
!   !   !   Child: 0  Id: c [type char] [line: 359]
!   !   !   Child: 1  Id: ba [type bool] [line: 359]
!   !   Sibling: 350  Assign: /= [type int] [line: 360]
!   !   !   Child: 0  Id: c [type char] [line: 360]
!   !   !   Child: 1  Id: ba [type bool] [line: 360]
!   !   Sibling: 351  Op: + [type int] [line: 361]
!   !   !   Child: 0  Id: c [type char] [line: 361]
!   !   !   Child: 1  Id: ba [type bool] [line: 361]
!   !   Sibling: 352  Op: - [type int] [line: 362]
!   !   !   Child: 0  Id: c [type char] [line: 362]
!   !   !   Child: 1  Id: ba [type bool] [line: 362]
!   !   Sibling: 353  Op: * [type int] [line: 363]
!   !   !   Child: 0  Id: c [type char] [line: 363]
!   !   !   Child: 1  Id: ba [type bool] [line: 363]
!   !   Sibling: 354  Op: / [type int] [line: 364]
!   !   !   Child: 0  Id: c [type char] [line: 364]
!   !   !   Child: 1  Id: ba [type bool] [line: 364]
!   !   Sibling: 355  Op: % [type int] [line: 365]
!   !   !   Child: 0  Id: c [type char] [line: 365]
!   !   !   Child: 1  Id: ba [type bool] [line: 365]
!   !   Sibling: 356  Op: and [type bool] [line: 366]
!   !   !   Child: 0  Id: c [type char] [line: 366]
!   !   !   Child: 1  Id: ba [type bool] [line: 366]
!   !   Sibling: 357  Op: or [type bool] [line: 367]
!   !   !   Child: 0  Id: c [type char] [line: 367]
!   !   !   Child: 1  Id: ba [type bool] [line: 367]
!   !   Sibling: 358  Assign: = [type char] [line: 368]
!   !   !   Child: 0  Id: c [type char] [line: 368]
!   !   !   Child: 1  Id: ba [type bool] [line: 368]
!   !   Sibling: 359  Op: != [type bool] [line: 369]
!   !   !   Child: 0  Id: c [type char] [line: 369]
!   !   !   Child: 1  Call: v [type void] [line: 369]
!   !   Sibling: 360  Op: <= [type bool] [line: 370]
!   !   !   Child: 0  Id: c [type char] [line: 370]
!   !   !   Child: 1  Call: v [type void] [line: 370]
!   !   Sibling: 361  Op: == [type bool] [line: 371]
!   !   !   Child: 0  Id: c [type char] [line: 371]
!   !   !   Child: 1  Call: v [type void] [line: 371]
!   !   Sibling: 362  Op: >= [type bool] [line: 372]
!   !   !   Child: 0  Id: c [type char] [line: 372]
!   !   !   Child: 1  Call: v [type void] [line: 372]
!   !   Sibling: 363  Op: < [type bool] [line: 373]
!   !   !   Child: 0  Id: c [type char] [line: 373]
!   !   !   Child: 1  Call: v [type void] [line: 373]
!   !   Sibling: 364  Op: > [type bool] [line: 374]
!   !   !   Child: 0  Id: c [type char] [line: 374]
!   !   !   Child: 1  Call: v [type void] [line: 374]
!   !   Sibling: 365  Assign: *= [type int] [line: 375]
!   !   !   Child: 0  Id: c [type char] [line: 375]
!   !   !   Child: 1  Call: v [type void] [line: 375]
!   !   Sibling: 366  Assign: += [type int] [line: 376]
!   !   !   Child: 0  Id: c [type char] [line: 376]
!   !   !   Child: 1  Call: v [type void] [line: 376]
!   !   Sibling: 367  Assign: -= [type int] [line: 377]
!   !   !   Child: 0  Id: c [type char] [line: 377]
!   !   !   Child: 1  Call: v [type void] [line: 377]
!   !   Sibling: 368  Assign: /= [type int] [line: 378]
!   !   !   Child: 0  Id: c [type char] [line: 378]
!   !   !   Child: 1  Call: v [type void] [line: 378]
!   !   Sibling: 369  Op: + [type int] [line: 379]
!   !   !   Child: 0  Id: c [type char] [line: 379]
!   !   !   Child: 1  Call: v [type void] [line: 379]
!   !   Sibling: 370  Op: - [type int] [line: 380]
!   !   !   Child: 0  Id: c [type char] [line: 380]
!   !   !   Child: 1  Call: v [type void] [line: 380]
!   !   Sibling: 371  Op: * [type int] [line: 381]
!   !   !   Child: 0  Id: c [type char] [line: 381]
!   !   !   Child: 1  Call: v [type void] [line: 381]
!   !   Sibling: 372  Op: / [type int] [line: 382]
!   !   !   Child: 0  Id: c [type char] [line: 382]
!   !   !   Child: 1  Call: v [type void] [line: 382]
!   !   Sibling: 373  Op: % [type int] [line: 383]
!   !   !   Child: 0  Id: c [type char] [line: 383]
!   !   !   Child: 1  Call: v [type void] [line: 383]
!   !   Sibling: 374  Op: and [type bool] [line: 384]
!   !   !   Child: 0  Id: c [type char] [line: 384]
!   !   !   Child: 1  Call: v [type void] [line: 384]
!   !   Sibling: 375  Op: or [type bool] [line: 385]
!   !   !   Child: 0  Id: c [type char] [line: 385]
!   !   !   Child: 1  Call: v [type void] [line: 385]
!   !   Sibling: 376  Assign: = [type char] [line: 386]
!   !   !   Child: 0  Id: c [type char] [line: 386]
!   !   !   Child: 1  Call: v [type void] [line: 386]
!   !   Sibling: 377  Op: != [type bool] [line: 387]
!   !   !   Child: 0  Id: ca [type char] [line: 387]
!   !   !   Child: 1  Id: i [type int] [line: 387]
!   !   Sibling: 378  Op: <= [type bool] [line: 388]
!   !   !   Child: 0  Id: ca [type char] [line: 388]
!   !   !   Child: 1  Id: i [type int] [line: 388]
!   !   Sibling: 379  Op: == [type bool] [line: 389]
!   !   !   Child: 0  Id: ca [type char] [line: 389]
!   !   !   Child: 1  Id: i [type int] [line: 389]
!   !   Sibling: 380  Op: >= [type bool] [line: 390]
!   !   !   Child: 0  Id: ca [type char] [line: 390]
!   !   !   Child: 1  Id: i [type int] [line: 390]
!   !   Sibling: 381  Op: < [type bool] [line: 391]
!   !   !   Child: 0  Id: ca [type char] [line: 391]
!   !   !   Child: 1  Id: i [type int] [line: 391]
!   !   Sibling: 382  Op: > [type bool] [line: 392]
!   !   !   Child: 0  Id: ca [type char] [line: 392]
!   !   !   Child: 1  Id: i [type int] [line: 392]
!   !   Sibling: 383  Assign: *= [type int] [line: 393]
!   !   !   Child: 0  Id: ca [type char] [line: 393]
!   !   !   Child: 1  Id: i [type int] [line: 393]
!   !   Sibling: 384  Assign: += [type int] [line: 394]
!   !   !   Child: 0  Id: ca [type char] [line: 394]
!   !   !   Child: 1  Id: i [type int] [line: 394]
!   !   Sibling: 385  Assign: -= [type int] [line: 395]
!   !   !   Child: 0  Id: ca [type char] [line: 395]
!   !   !   Child: 1  Id: i [type int] [line: 395]
!   !   Sibling: 386  Assign: /= [type int] [line: 396]
!   !   !   Child: 0  Id: ca [type char] [line: 396]
!   !   !   Child: 1  Id: i [type int] [line: 396]
!   !   Sibling: 387  Op: + [type int] [line: 397]
!   !   !   Child: 0  Id: ca [type char] [line: 397]
!   !   !   Child: 1  Id: i [type int] [line: 397]
!   !   Sibling: 388  Op: - [type int] [line: 398]
!   !   !   Child: 0  Id: ca [type char] [line: 398]
!   !   !   Child: 1  Id: i [type int] [line: 398]
!   !   Sibling: 389  Op: * [type int] [line: 399]
!   !   !   Child: 0  Id: ca [type char] [line: 399]
!   !   !   Child: 1  Id: i [type int] [line: 399]
!   !   Sibling: 390  Op: / [type int] [line: 400]
!   !   !   Child: 0  Id: ca [type char] [line: 400]
!   !   !   Child: 1  Id: i [type int] [line: 400]
!   !   Sibling: 391  Op: % [type int] [line: 401]
!   !   !   Child: 0  Id: ca [type char] [line: 401]
!   !   !   Child: 1  Id: i [type int] [line: 401]
!   !   Sibling: 392  Op: and [type bool] [line: 402]
!   !   !   Child: 0  Id: ca [type char] [line: 402]
!   !   !   Child: 1  Id: i [type int] [line: 402]
!   !   Sibling: 393  Op: or [type bool] [line: 403]
!   !   !   Child: 0  Id: ca [type char] [line: 403]
!   !   !   Child: 1  Id: i [type int] [line: 403]
!   !   Sibling: 394  Assign: = [type char] [line: 404]
!   !   !   Child: 0  Id: ca [type char] [line: 404]
!   !   !   Child: 1  Id: i [type int] [line: 404]
!   !   Sibling: 395  Op: != [type bool] [line: 405]
!   !   !   Child: 0  Id: ca [type char] [line: 405]
!   !   !   Child: 1  Id: ia [type int] [line: 405]
!   !   Sibling: 396  Op: <= [type bool] [line: 406]
!   !   !   Child: 0  Id: ca [type char] [line: 406]
!   !   !   Child: 1  Id: ia [type int] [line: 406]
!   !   Sibling: 397  Op: == [type bool] [line: 407]
!   !   !   Child: 0  Id: ca [type char] [line: 407]
!   !   !   Child: 1  Id: ia [type int] [line: 407]
!   !   Sibling: 398  Op: >= [type bool] [line: 408]
!   !   !   Child: 0  Id: ca [type char] [line: 408]
!   !   !   Child: 1  Id: ia [type int] [line: 408]
!   !   Sibling: 399  Op: < [type bool] [line: 409]
!   !   !   Child: 0  Id: ca [type char] [line: 409]
!   !   !   Child: 1  Id: ia [type int] [line: 409]
!   !   Sibling: 400  Op: > [type bool] [line: 410]
!   !   !   Child: 0  Id: ca [type char] [line: 410]
!   !   !   Child: 1  Id: ia [type int] [line: 410]
!   !   Sibling: 401  Assign: *= [type int] [line: 411]
!   !   !   Child: 0  Id: ca [type char] [line: 411]
!   !   !   Child: 1  Id: ia [type int] [line: 411]
!   !   Sibling: 402  Assign: += [type int] [line: 412]
!   !   !   Child: 0  Id: ca [type char] [line: 412]
!   !   !   Child: 1  Id: ia [type int] [line: 412]
!   !   Sibling: 403  Assign: -= [type int] [line: 413]
!   !   !   Child: 0  Id: ca [type char] [line: 413]
!   !   !   Child: 1  Id: ia [type int] [line: 413]
!   !   Sibling: 404  Assign: /= [type int] [line: 414]
!   !   !   Child: 0  Id: ca [type char] [line: 414]
!   !   !   Child: 1  Id: ia [type int] [line: 414]
!   !   Sibling: 405  Op: + [type int] [line: 415]
!   !   !   Child: 0  Id: ca [type char] [line: 415]
!   !   !   Child: 1  Id: ia [type int] [line: 415]
!   !   Sibling: 406  Op: - [type int] [line: 416]
!   !   !   Child: 0  Id: ca [type char] [line: 416]
!   !   !   Child: 1  Id: ia [type int] [line: 416]
!   !   Sibling: 407  Op: * [type int] [line: 417]
!   !   !   Child: 0  Id: ca [type char] [line: 417]
!   !   !   Child: 1  Id: ia [type int] [line: 417]
!   !   Sibling: 408  Op: / [type int] [line: 418]
!   !   !   Child: 0  Id: ca [type char] [line: 418]
!   !   !   Child: 1  Id: ia [type int] [line: 418]
!   !   Sibling: 409  Op: % [type int] [line: 419]
!   !   !   Child: 0  Id: ca [type char] [line: 419]
!   !   !   Child: 1  Id: ia [type int] [line: 419]
!   !   Sibling: 410  Op: and [type bool] [line: 420]
!   !   !   Child: 0  Id: ca [type char] [line: 420]
!   !   !   Child: 1  Id: ia [type int] [line: 420]
!   !   Sibling: 411  Op: or [type bool] [line: 421]
!   !   !   Child: 0  Id: ca [type char] [line: 421]
!   !   !   Child: 1  Id: ia [type int] [line: 421]
!   !   Sibling: 412  Assign: = [type char] [line: 422]
!   !   !   Child: 0  Id: ca [type char] [line: 422]
!   !   !   Child: 1  Id: ia [type int] [line: 422]
!   !   Sibling: 413  Op: != [type bool] [line: 423]
!   !   !   Child: 0  Id: ca [type char] [line: 423]
!   !   !   Child: 1  Id: c [type char] [line: 423]
!   !   Sibling: 414  Op: <= [type bool] [line: 424]
!   !   !   Child: 0  Id: ca [type char] [line: 424]
!   !   !   Child: 1  Id: c [type char] [line: 424]
!   !   Sibling: 415  Op: == [type bool] [line: 425]
!   !   !   Child: 0  Id: ca [type char] [line: 425]
!   !   !   Child: 1  Id: c [type char] [line: 425]
!   !   Sibling: 416  Op: >= [type bool] [line: 426]
!   !   !   Child: 0  Id: ca [type char] [line: 426]
!   !   !   Child: 1  Id: c [type char] [line: 426]
!   !   Sibling: 417  Op: < [type bool] [line: 427]
!   !   !   Child: 0  Id: ca [type char] [line: 427]
!   !   !   Child: 1  Id: c [type char] [line: 427]
!   !   Sibling: 418  Op: > [type bool] [line: 428]
!   !   !   Child: 0  Id: ca [type char] [line: 428]
!   !   !   Child: 1  Id: c [type char] [line: 428]
!   !   Sibling: 419  Assign: *= [type int] [line: 429]
!   !   !   Child: 0  Id: ca [type char] [line: 429]
!   !   !   Child: 1  Id: c [type char] [line: 429]
!   !   Sibling: 420  Assign: += [type int] [line: 430]
!   !   !   Child: 0  Id: ca [type char] [line: 430]
!   !   !   Child: 1  Id: c [type char] [line: 430]
!   !   Sibling: 421  Assign: -= [type int] [line: 431]
!   !   !   Child: 0  Id: ca [type char] [line: 431]
!   !   !   Child: 1  Id: c [type char] [line: 431]
!   !   Sibling: 422  Assign: /= [type int] [line: 432]
!   !   !   Child: 0  Id: ca [type char] [line: 432]
!   !   !   Child: 1  Id: c [type char] [line: 432]
!   !   Sibling: 423  Op: + [type int] [line: 433]
!   !   !   Child: 0  Id: ca [type char] [line: 433]
!   !   !   Child: 1  Id: c [type char] [line: 433]
!   !   Sibling: 424  Op: - [type int] [line: 434]
!   !   !   Child: 0  Id: ca [type char] [line: 434]
!   !   !   Child: 1  Id: c [type char] [line: 434]
!   !   Sibling: 425  Op: * [type int] [line: 435]
!   !   !   Child: 0  Id: ca [type char] [line: 435]
!   !   !   Child: 1  Id: c [type char] [line: 435]
!   !   Sibling: 426  Op: / [type int] [line: 436]
!   !   !   Child: 0  Id: ca [type char] [line: 436]
!   !   !   Child: 1  Id: c [type char] [line: 436]
!   !   Sibling: 427  Op: % [type int] [line: 437]
!   !   !   Child: 0  Id: ca [type char] [line: 437]
!   !   !   Child: 1  Id: c [type char] [line: 437]
!   !   Sibling: 428  Op: and [type bool] [line: 438]
!   !   !   Child: 0  Id: ca [type char] [line: 438]
!   !   !   Child: 1  Id: c [type char] [line: 438]
!   !   Sibling: 429  Op: or [type bool] [line: 439]
!   !   !   Child: 0  Id: ca [type char] [line: 439]
!   !   !   Child: 1  Id: c [type char] [line: 439]
!   !   Sibling: 430  Assign: = [type char] [line: 440]
!   !   !   Child: 0  Id: ca [type char] [line: 440]
!   !   !   Child: 1  Id: c [type char] [line: 440]
!   !   Sibling: 431  Op: != [type bool] [line: 441]
!   !   !   Child: 0  Id: ca [type char] [line: 441]
!   !   !   Child: 1  Id: ca [type char] [line: 441]
!   !   Sibling: 432  Op: <= [type bool] [line: 442]
!   !   !   Child: 0  Id: ca [type char] [line: 442]
!   !   !   Child: 1  Id: ca [type char] [line: 442]
!   !   Sibling: 433  Op: == [type bool] [line: 443]
!   !   !   Child: 0  Id: ca [type char] [line: 443]
!   !   !   Child: 1  Id: ca [type char] [line: 443]
!   !   Sibling: 434  Op: >= [type bool] [line: 444]
!   !   !   Child: 0  Id: ca [type char] [line: 444]
!   !   !   Child: 1  Id: ca [type char] [line: 444]
!   !   Sibling: 435  Op: < [type bool] [line: 445]
!   !   !   Child: 0  Id: ca [type char] [line: 445]
!   !   !   Child: 1  Id: ca [type char] [line: 445]
!   !   Sibling: 436  Op: > [type bool] [line: 446]
!   !   !   Child: 0  Id: ca [type char] [line: 446]
!   !   !   Child: 1  Id: ca [type char] [line: 446]
!   !   Sibling: 437  Assign: *= [type int] [line: 447]
!   !   !   Child: 0  Id: ca [type char] [line: 447]
!   !   !   Child: 1  Id: ca [type char] [line: 447]
!   !   Sibling: 438  Assign: += [type int] [line: 448]
!   !   !   Child: 0  Id: ca [type char] [line: 448]
!   !   !   Child: 1  Id: ca [type char] [line: 448]
!   !   Sibling: 439  Assign: -= [type int] [line: 449]
!   !   !   Child: 0  Id: ca [type char] [line: 449]
!   !   !   Child: 1  Id: ca [type char] [line: 449]
!   !   Sibling: 440  Assign: /= [type int] [line: 450]
!   !   !   Child: 0  Id: ca [type char] [line: 450]
!   !   !   Child: 1  Id: ca [type char] [line: 450]
!   !   Sibling: 441  Op: + [type int] [line: 451]
!   !   !   Child: 0  Id: ca [type char] [line: 451]
!   !   !   Child: 1  Id: ca [type char] [line: 451]
!   !   Sibling: 442  Op: - [type int] [line: 452]
!   !   !   Child: 0  Id: ca [type char] [line: 452]
!   !   !   Child: 1  Id: ca [type char] [line: 452]
!   !   Sibling: 443  Op: * [type int] [line: 453]
!   !   !   Child: 0  Id: ca [type char] [line: 453]
!   !   !   Child: 1  Id: ca [type char] [line: 453]
!   !   Sibling: 444  Op: / [type int] [line: 454]
!   !   !   Child: 0  Id: ca [type char] [line: 454]
!   !   !   Child: 1  Id: ca [type char] [line: 454]
!   !   Sibling: 445  Op: % [type int] [line: 455]
!   !   !   Child: 0  Id: ca [type char] [line: 455]
!   !   !   Child: 1  Id: ca [type char] [line: 455]
!   !   Sibling: 446  Op: and [type bool] [line: 456]
!   !   !   Child: 0  Id: ca [type char] [line: 456]
!   !   !   Child: 1  Id: ca [type char] [line: 456]
!   !   Sibling: 447  Op: or [type bool] [line: 457]
!   !   !   Child: 0  Id: ca [type char] [line: 457]
!   !   !   Child: 1  Id: ca [type char] [line: 457]
!   !   Sibling: 448  Assign: = [type char] [line: 458]
!   !   !   Child: 0  Id: ca [type char] [line: 458]
!   !   !   Child: 1  Id: ca [type char] [line: 458]
!   !   Sibling: 449  Op: != [type bool] [line: 459]
!   !   !   Child: 0  Id: ca [type char] [line: 459]
!   !   !   Child: 1  Id: b [type bool] [line: 459]
!   !   Sibling: 450  Op: <= [type bool] [line: 460]
!   !   !   Child: 0  Id: ca [type char] [line: 460]
!   !   !   Child: 1  Id: b [type bool] [line: 460]
!   !   Sibling: 451  Op: == [type bool] [line: 461]
!   !   !   Child: 0  Id: ca [type char] [line: 461]
!   !   !   Child: 1  Id: b [type bool] [line: 461]
!   !   Sibling: 452  Op: >= [type bool] [line: 462]
!   !   !   Child: 0  Id: ca [type char] [line: 462]
!   !   !   Child: 1  Id: b [type bool] [line: 462]
!   !   Sibling: 453  Op: < [type bool] [line: 463]
!   !   !   Child: 0  Id: ca [type char] [line: 463]
!   !   !   Child: 1  Id: b [type bool] [line: 463]
!   !   Sibling: 454  Op: > [type bool] [line: 464]
!   !   !   Child: 0  Id: ca [type char] [line: 464]
!   !   !   Child: 1  Id: b [type bool] [line: 464]
!   !   Sibling: 455  Assign: *= [type int] [line: 465]
!   !   !   Child: 0  Id: ca [type char] [line: 465]
!   !   !   Child: 1  Id: b [type bool] [line: 465]
!   !   Sibling: 456  Assign: += [type int] [line: 466]
!   !   !   Child: 0  Id: ca [type char] [line: 466]
!   !   !   Child: 1  Id: b [type bool] [line: 466]
!   !   Sibling: 457  Assign: -= [type int] [line: 467]
!   !   !   Child: 0  Id: ca [type char] [line: 467]
!   !   !   Child: 1  Id: b [type bool] [line: 467]
!   !   Sibling: 458  Assign: /= [type int] [line: 468]
!   !   !   Child: 0  Id: ca [type char] [line: 468]
!   !   !   Child: 1  Id: b [type bool] [line: 468]
!   !   Sibling: 459  Op: + [type int] [line: 469]
!   !   !   Child: 0  Id: ca [type char] [line: 469]
!   !   !   Child: 1  Id: b [type bool] [line: 469]
!   !   Sibling: 460  Op: - [type int] [line: 470]
!   !   !   Child: 0  Id: ca [type char] [line: 470]
!   !   !   Child: 1  Id: b [type bool] [line: 470]
!   !   Sibling: 461  Op: * [type int] [line: 471]
!   !   !   Child: 0  Id: ca [type char] [line: 471]
!   !   !   Child: 1  Id: b [type bool] [line: 471]
!   !   Sibling: 462  Op: / [type int] [line: 472]
!   !   !   Child: 0  Id: ca [type char] [line: 472]
!   !   !   Child: 1  Id: b [type bool] [line: 472]
!   !   Sibling: 463  Op: % [type int] [line: 473]
!   !   !   Child: 0  Id: ca [type char] [line: 473]
!   !   !   Child: 1  Id: b [type bool] [line: 473]
!   !   Sibling: 464  Op: and [type bool] [line: 474]
!   !   !   Child: 0  Id: ca [type char] [line: 474]
!   !   !   Child: 1  Id: b [type bool] [line: 474]
!   !   Sibling: 465  Op: or [type bool] [line: 475]
!   !   !   Child: 0  Id: ca [type char] [line: 475]
!   !   !   Child: 1  Id: b [type bool] [line: 475]
!   !   Sibling: 466  Assign: = [type char] [line: 476]
!   !   !   Child: 0  Id: ca [type char] [line: 476]
!   !   !   Child: 1  Id: b [type bool] [line: 476]
!   !   Sibling: 467  Op: != [type bool] [line: 477]
!   !   !   Child: 0  Id: ca [type char] [line: 477]
!   !   !   Child: 1  Id: ba [type bool] [line: 477]
!   !   Sibling: 468  Op: <= [type bool] [line: 478]
!   !   !   Child: 0  Id: ca [type char] [line: 478]
!   !   !   Child: 1  Id: ba [type bool] [line: 478]
!   !   Sibling: 469  Op: == [type bool] [line: 479]
!   !   !   Child: 0  Id: ca [type char] [line: 479]
!   !   !   Child: 1  Id: ba [type bool] [line: 479]
!   !   Sibling: 470  Op: >= [type bool] [line: 480]
!   !   !   Child: 0  Id: ca [type char] [line: 480]
!   !   !   Child: 1  Id: ba [type bool] [line: 480]
!   !   Sibling: 471  Op: < [type bool] [line: 481]
!   !   !   Child: 0  Id: ca [type char] [line: 481]
!   !   !   Child: 1  Id: ba [type bool] [line: 481]
!   !   Sibling: 472  Op: > [type bool] [line: 482]
!   !   !   Child: 0  Id: ca [type char] [line: 482]
!   !   !   Child: 1  Id: ba [type bool] [line: 482]
!   !   Sibling: 473  Assign: *= [type int] [line: 483]
!   !   !   Child: 0  Id: ca [type char] [line: 483]
!   !   !   Child: 1  Id: ba [type bool] [line: 483]
!   !   Sibling: 474  Assign: += [type int] [line: 484]
!   !   !   Child: 0  Id: ca [type char] [line: 484]
!   !   !   Child: 1  Id: ba [type bool] [line: 484]
!   !   Sibling: 475  Assign: -= [type int] [line: 485]
!   !   !   Child: 0  Id: ca [type char] [line: 485]
!   !   !   Child: 1  Id: ba [type bool] [line: 485]
!   !   Sibling: 476  Assign: /= [type int] [line: 486]
!   !   !   Child: 0  Id: ca [type char] [line: 486]
!   !   !   Child: 1  Id: ba [type bool] [line: 486]
!   !   Sibling: 477  Op: + [type int] [line: 487]
!   !   !   Child: 0  Id: ca [type char] [line: 487]
!   !   !   Child: 1  Id: ba [type bool] [line: 487]
!   !   Sibling: 478  Op: - [type int] [line: 488]
!   !   !   Child: 0  Id: ca [type char] [line: 488]
!   !   !   Child: 1  Id: ba [type bool] [line: 488]
!   !   Sibling: 479  Op: * [type int] [line: 489]
!   !   !   Child: 0  Id: ca [type char] [line: 489]
!   !   !   Child: 1  Id: ba [type bool] [line: 489]
!   !   Sibling: 480  Op: / [type int] [line: 490]
!   !   !   Child: 0  Id: ca [type char] [line: 490]
!   !   !   Child: 1  Id: ba [type bool] [line: 490]
!   !   Sibling: 481  Op: % [type int] [line: 491]
!   !   !   Child: 0  Id: ca [type char] [line: 491]
!   !   !   Child: 1  Id: ba [type bool] [line: 491]
!   !   Sibling: 482  Op: and [type bool] [line: 492]
!   !   !   Child: 0  Id: ca [type char] [line: 492]
!   !   !   Child: 1  Id: ba [type bool] [line: 492]
!   !   Sibling: 483  Op: or [type bool] [line: 493]
!   !   !   Child: 0  Id: ca [type char] [line: 493]
!   !   !   Child: 1  Id: ba [type bool] [line: 493]
!   !   Sibling: 484  Assign: = [type char] [line: 494]
!   !   !   Child: 0  Id: ca [type char] [line: 494]
!   !   !   Child: 1  Id: ba [type bool] [line: 494]
!   !   Sibling: 485  Op: != [type bool] [line: 495]
!   !   !   Child: 0  Id: ca [type char] [line: 495]
!   !   !   Child: 1  Call: v [type void] [line: 495]
!   !   Sibling: 486  Op: <= [type bool] [line: 496]
!   !   !   Child: 0  Id: ca [type char] [line: 496]
!   !   !   Child: 1  Call: v [type void] [line: 496]
!   !   Sibling: 487  Op: == [type bool] [line: 497]
!   !   !   Child: 0  Id: ca [type char] [line: 497]
!   !   !   Child: 1  Call: v [type void] [line: 497]
!   !   Sibling: 488  Op: >= [type bool] [line: 498]
!   !   !   Child: 0  Id: ca [type char] [line: 498]
!   !   !   Child: 1  Call: v [type void] [line: 498]
!   !   Sibling: 489  Op: < [type bool] [line: 499]
!   !   !   Child: 0  Id: ca [type char] [line: 499]
!   !   !   Child: 1  Call: v [type void] [line: 499]
!   !   Sibling: 490  Op: > [type bool] [line: 500]
!   !   !   Child: 0  Id: ca [type char] [line: 500]
!   !   !   Child: 1  Call: v [type void] [line: 500]
!   !   Sibling: 491  Assign: *= [type int] [line: 501]
!   !   !   Child: 0  Id: ca [type char] [line: 501]
!   !   !   Child: 1  Call: v [type void] [line: 501]
!   !   Sibling: 492  Assign: += [type int] [line: 502]
!   !   !   Child: 0  Id: ca [type char] [line: 502]
!   !   !   Child: 1  Call: v [type void] [line: 502]
!   !   Sibling: 493  Assign: -= [type int] [line: 503]
!   !   !   Child: 0  Id: ca [type char] [line: 503]
!   !   !   Child: 1  Call: v [type void] [line: 503]
!   !   Sibling: 494  Assign: /= [type int] [line: 504]
!   !   !   Child: 0  Id: ca [type char] [line: 504]
!   !   !   Child: 1  Call: v [type void] [line: 504]
!   !   Sibling: 495  Op: + [type int] [line: 505]
!   !   !   Child: 0  Id: ca [type char] [line: 505]
!   !   !   Child: 1  Call: v [type void] [line: 505]
!   !   Sibling: 496  Op: - [type int] [line: 506]
!   !   !   Child: 0  Id: ca [type char] [line: 506]
!   !   !   Child: 1  Call: v [type void] [line: 506]
!   !   Sibling: 497  Op: * [type int] [line: 507]
!   !   !   Child: 0  Id: ca [type char] [line: 507]
!   !   !   Child: 1  Call: v [type void] [line: 507]
!   !   Sibling: 498  Op: / [type int] [line: 508]
!   !   !   Child: 0  Id: ca [type char] [line: 508]
!   !   !   Child: 1  Call: v [type void] [line: 508]
!   !   Sibling: 499  Op: % [type int] [line: 509]
!   !   !   Child: 0  Id: ca [type char] [line: 509]
!   !   !   Child: 1  Call: v [type void] [line: 509]
!   !   Sibling: 500  Op: and [type bool] [line: 510]
!   !   !   Child: 0  Id: ca [type char] [line: 510]
!   !   !   Child: 1  Call: v [type void] [line: 510]
!   !   Sibling: 501  Op: or [type bool] [line: 511]
!   !   !   Child: 0  Id: ca [type char] [line: 511]
!   !   !   Child: 1  Call: v [type void] [line: 511]
!   !   Sibling: 502  Assign: = [type char] [line: 512]
!   !   !   Child: 0  Id: ca [type char] [line: 512]
!   !   !   Child: 1  Call: v [type void] [line: 512]
!   !   Sibling: 503  Op: != [type bool] [line: 513]
!   !   !   Child: 0  Id: b [type bool] [line: 513]
!   !   !   Child: 1  Id: i [type int] [line: 513]
!   !   Sibling: 504  Op: <= [type bool] [line: 514]
!   !   !   Child: 0  Id: b [type bool] [line: 514]
!   !   !   Child: 1  Id: i [type int] [line: 514]
!   !   Sibling: 505  Op: == [type bool] [line: 515]
!   !   !   Child: 0  Id: b [type bool] [line: 515]
!   !   !   Child: 1  Id: i [type int] [line: 515]
!   !   Sibling: 506  Op: >= [type bool] [line: 516]
!   !   !   Child: 0  Id: b [type bool] [line: 516]
!   !   !   Child: 1  Id: i [type int] [line: 516]
!   !   Sibling: 507  Op: < [type bool] [line: 517]
!   !   !   Child: 0  Id: b [type bool] [line: 517]
!   !   !   Child: 1  Id: i [type int] [line: 517]
!   !   Sibling: 508  Op: > [type bool] [line: 518]
!   !   !   Child: 0  Id: b [type bool] [line: 518]
!   !   !   Child: 1  Id: i [type int] [line: 518]
!   !   Sibling: 509  Assign: *= [type int] [line: 519]
!   !   !   Child: 0  Id: b [type bool] [line: 519]
!   !   !   Child: 1  Id: i [type int] [line: 519]
!   !   Sibling: 510  Assign: += [type int] [line: 520]
!   !   !   Child: 0  Id: b [type bool] [line: 520]
!   !   !   Child: 1  Id: i [type int] [line: 520]
!   !   Sibling: 511  Assign: -= [type int] [line: 521]
!   !   !   Child: 0  Id: b [type bool] [line: 521]
!   !   !   Child: 1  Id: i [type int] [line: 521]
!   !   Sibling: 512  Assign: /= [type int] [line: 522]
!   !   !   Child: 0  Id: b [type bool] [line: 522]
!   !   !   Child: 1  Id: i [type int] [line: 522]
!   !   Sibling: 513  Op: + [type int] [line: 523]
!   !   !   Child: 0  Id: b [type bool] [line: 523]
!   !   !   Child: 1  Id: i [type int] [line: 523]
!   !   Sibling: 514  Op: - [type int] [line: 524]
!   !   !   Child: 0  Id: b [type bool] [line: 524]
!   !   !   Child: 1  Id: i [type int] [line: 524]
!   !   Sibling: 515  Op: * [type int] [line: 525]
!   !   !   Child: 0  Id: b [type bool] [line: 525]
!   !   !   Child: 1  Id: i [type int] [line: 525]
!   !   Sibling: 516  Op: / [type int] [line: 526]
!   !   !   Child: 0  Id: b [type bool] [line: 526]
!   !   !   Child: 1  Id: i [type int] [line: 526]
!   !   Sibling: 517  Op: % [type int] [line: 527]
!   !   !   Child: 0  Id: b [type bool] [line: 527]
!   !   !   Child: 1  Id: i [type int] [line: 527]
!   !   Sibling: 518  Op: and [type bool] [line: 528]
!   !   !   Child: 0  Id: b [type bool] [line: 528]
!   !   !   Child: 1  Id: i [type int] [line: 528]
!   !   Sibling: 519  Op: or [type bool] [line: 529]
!   !   !   Child: 0  Id: b [type bool] [line: 529]
!   !   !   Child: 1  Id: i [type int] [line: 529]
!   !   Sibling: 520  Assign: = [type bool] [line: 530]
!   !   !   Child: 0  Id: b [type bool] [line: 530]
!   !   !   Child: 1  Id: i [type int] [line: 530]
!   !   Sibling: 521  Op: != [type bool] [line: 531]
!   !   !   Child: 0  Id: b [type bool] [line: 531]
!   !   !   Child: 1  Id: ia [type int] [line: 531]
!   !   Sibling: 522  Op: <= [type bool] [line: 532]
!   !   !   Child: 0  Id: b [type bool] [line: 532]
!   !   !   Child: 1  Id: ia [type int] [line: 532]
!   !   Sibling: 523  Op: == [type bool] [line: 533]
!   !   !   Child: 0  Id: b [type bool] [line: 533]
!   !   !   Child: 1  Id: ia [type int] [line: 533]
!   !   Sibling: 524  Op: >= [type bool] [line: 534]
!   !   !   Child: 0  Id: b [type bool] [line: 534]
!   !   !   Child: 1  Id: ia [type int] [line: 534]
!   !   Sibling: 525  Op: < [type bool] [line: 535]
!   !   !   Child: 0  Id: b [type bool] [line: 535]
!   !   !   Child: 1  Id: ia [type int] [line: 535]
!   !   Sibling: 526  Op: > [type bool] [line: 536]
!   !   !   Child: 0  Id: b [type bool] [line: 536]
!   !   !   Child: 1  Id: ia [type int] [line: 536]
!   !   Sibling: 527  Assign: *= [type int] [line: 537]
!   !   !   Child: 0  Id: b [type bool] [line: 537]
!   !   !   Child: 1  Id: ia [type int] [line: 537]
!   !   Sibling: 528  Assign: += [type int] [line: 538]
!   !   !   Child: 0  Id: b [type bool] [line: 538]
!   !   !   Child: 1  Id: ia [type int] [line: 538]
!   !   Sibling: 529  Assign: -= [type int] [line: 539]
!   !   !   Child: 0  Id: b [type bool] [line: 539]
!   !   !   Child: 1  Id: ia [type int] [line: 539]
!   !   Sibling: 530  Assign: /= [type int] [line: 540]
!   !   !   Child: 0  Id: b [type bool] [line: 540]
!   !   !   Child: 1  Id: ia [type int] [line: 540]
!   !   Sibling: 531  Op: + [type int] [line: 541]
!   !   !   Child: 0  Id: b [type bool] [line: 541]
!   !   !   Child: 1  Id: ia [type int] [line: 541]
!   !   Sibling: 532  Op: - [type int] [line: 542]
!   !   !   Child: 0  Id: b [type bool] [line: 542]
!   !   !   Child: 1  Id: ia [type int] [line: 542]
!   !   Sibling: 533  Op: * [type int] [line: 543]
!   !   !   Child: 0  Id: b [type bool] [line: 543]
!   !   !   Child: 1  Id: ia [type int] [line: 543]
!   !   Sibling: 534  Op: / [type int] [line: 544]
!   !   !   Child: 0  Id: b [type bool] [line: 544]
!   !   !   Child: 1  Id: ia [type int] [line: 544]
!   !   Sibling: 535  Op: % [type int] [line: 545]
!   !   !   Child: 0  Id: b [type bool] [line: 545]
!   !   !   Child: 1  Id: ia [type int] [line: 545]
!   !   Sibling: 536  Op: and [type bool] [line: 546]
!   !   !   Child: 0  Id: b [type bool] [line: 546]
!   !   !   Child: 1  Id: ia [type int] [line: 546]
!   !   Sibling: 537  Op: or [type bool] [line: 547]
!   !   !   Child: 0  Id: b [type bool] [line: 547]
!   !   !   Child: 1  Id: ia [type int] [line: 547]
!   !   Sibling: 538  Assign: = [type bool] [line: 548]
!   !   !   Child: 0  Id: b [type bool] [line: 548]
!   !   !   Child: 1  Id: ia [type int] [line: 548]
!   !   Sibling: 539  Op: != [type bool] [line: 549]
!   !   !   Child: 0  Id: b [type bool] [line: 549]
!   !   !   Child: 1  Id: c [type char] [line: 549]
!   !   Sibling: 540  Op: <= [type bool] [line: 550]
!   !   !   Child: 0  Id: b [type bool] [line: 550]
!   !   !   Child: 1  Id: c [type char] [line: 550]
!   !   Sibling: 541  Op: == [type bool] [line: 551]
!   !   !   Child: 0  Id: b [type bool] [line: 551]
!   !   !   Child: 1  Id: c [type char] [line: 551]
!   !   Sibling: 542  Op: >= [type bool] [line: 552]
!   !   !   Child: 0  Id: b [type bool] [line: 552]
!   !   !   Child: 1  Id: c [type char] [line: 552]
!   !   Sibling: 543  Op: < [type bool] [line: 553]
!   !   !   Child: 0  Id: b [type bool] [line: 553]
!   !   !   Child: 1  Id: c [type char] [line: 553]
!   !   Sibling: 544  Op: > [type bool] [line: 554]
!   !   !   Child: 0  Id: b [type bool] [line: 554]
!   !   !   Child: 1  Id: c [type char] [line: 554]
!   !   Sibling: 545  Assign: *= [type int] [line: 555]
!   !   !   Child: 0  Id: b [type bool] [line: 555]
!   !   !   Child: 1  Id: c [type char] [line: 555]
!   !   Sibling: 546  Assign: += [type int] [line: 556]
!   !   !   Child: 0  Id: b [type bool] [line: 556]
!   !   !   Child: 1  Id: c [type char] [line: 556]
!   !   Sibling: 547  Assign: -= [type int] [line: 557]
!   !   !   Child: 0  Id: b [type bool] [line: 557]
!   !   !   Child: 1  Id: c [type char] [line: 557]
!   !   Sibling: 548  Assign: /= [type int] [line: 558]
!   !   !   Child: 0  Id: b [type bool] [line: 558]
!   !   !   Child: 1  Id: c [type char] [line: 558]
!   !   Sibling: 549  Op: + [type int] [line: 559]
!   !   !   Child: 0  Id: b [type bool] [line: 559]
!   !   !   Child: 1  Id: c [type char] [line: 559]
!   !   Sibling: 550  Op: - [type int] [line: 560]
!   !   !   Child: 0  Id: b [type bool] [line: 560]
!   !   !   Child: 1  Id: c [type char] [line: 560]
!   !   Sibling: 551  Op: * [type int] [line: 561]
!   !   !   Child: 0  Id: b [type bool] [line: 561]
!   !   !   Child: 1  Id: c [type char] [line: 561]
!   !   Sibling: 552  Op: / [type int] [line: 562]
!   !   !   Child: 0  Id: b [type bool] [line: 562]
!   !   !   Child: 1  Id: c [type char] [line: 562]
!   !   Sibling: 553  Op: % [type int] [line: 563]
!   !   !   Child: 0  Id: b [type bool] [line: 563]
!   !   !   Child: 1  Id: c [type char] [line: 563]
!   !   Sibling: 554  Op: and [type bool] [line: 564]
!   !   !   Child: 0  Id: b [type bool] [line: 564]
!   !   !   Child: 1  Id: c [type char] [line: 564]
!   !   Sibling: 555  Op: or [type bool] [line: 565]
!   !   !   Child: 0  Id: b [type bool] [line: 565]
!   !   !   Child: 1  Id: c [type char] [line: 565]
!   !   Sibling: 556  Assign: = [type bool] [line: 566]
!   !   !   Child: 0  Id: b [type bool] [line: 566]
!   !   !   Child: 1  Id: c [type char] [line: 566]
!   !   Sibling: 557  Op: != [type bool] [line: 567]
!   !   !   Child: 0  Id: b [type bool] [line: 567]
!   !   !   Child: 1  Id: ca [type char] [line: 567]
!   !   Sibling: 558  Op: <= [type bool] [line: 568]
!   !   !   Child: 0  Id: b [type bool] [line: 568]
!   !   !   Child: 1  Id: ca [type char] [line: 568]
!   !   Sibling: 559  Op: == [type bool] [line: 569]
!   !   !   Child: 0  Id: b [type bool] [line: 569]
!   !   !   Child: 1  Id: ca [type char] [line: 569]
!   !   Sibling: 560  Op: >= [type bool] [line: 570]
!   !   !   Child: 0  Id: b [type bool] [line: 570]
!   !   !   Child: 1  Id: ca [type char] [line: 570]
!   !   Sibling: 561  Op: < [type bool] [line: 571]
!   !   !   Child: 0  Id: b [type bool] [line: 571]
!   !   !   Child: 1  Id: ca [type char] [line: 571]
!   !   Sibling: 562  Op: > [type bool] [line: 572]
!   !   !   Child: 0  Id: b [type bool] [line: 572]
!   !   !   Child: 1  Id: ca [type char] [line: 572]
!   !   Sibling: 563  Assign: *= [type int] [line: 573]
!   !   !   Child: 0  Id: b [type bool] [line: 573]
!   !   !   Child: 1  Id: ca [type char] [line: 573]
!   !   Sibling: 564  Assign: += [type int] [line: 574]
!   !   !   Child: 0  Id: b [type bool] [line: 574]
!   !   !   Child: 1  Id: ca [type char] [line: 574]
!   !   Sibling: 565  Assign: -= [type int] [line: 575]
!   !   !   Child: 0  Id: b [type bool] [line: 575]
!   !   !   Child: 1  Id: ca [type char] [line: 575]
!   !   Sibling: 566  Assign: /= [type int] [line: 576]
!   !   !   Child: 0  Id: b [type bool] [line: 576]
!   !   !   Child: 1  Id: ca [type char] [line: 576]
!   !   Sibling: 567  Op: + [type int] [line: 577]
!   !   !   Child: 0  Id: b [type bool] [line: 577]
!   !   !   Child: 1  Id: ca [type char] [line: 577]
!   !   Sibling: 568  Op: - [type int] [line: 578]
!   !   !   Child: 0  Id: b [type bool] [line: 578]
!   !   !   Child: 1  Id: ca [type char] [line: 578]
!   !   Sibling: 569  Op: * [type int] [line: 579]
!   !   !   Child: 0  Id: b [type bool] [line: 579]
!   !   !   Child: 1  Id: ca [type char] [line: 579]
!   !   Sibling: 570  Op: / [type int] [line: 580]
!   !   !   Child: 0  Id: b [type bool] [line: 580]
!   !   !   Child: 1  Id: ca [type char] [line: 580]
!   !   Sibling: 571  Op: % [type int] [line: 581]
!   !   !   Child: 0  Id: b [type bool] [line: 581]
!   !   !   Child: 1  Id: ca [type char] [line: 581]
!   !   Sibling: 572  Op: and [type bool] [line: 582]
!   !   !   Child: 0  Id: b [type bool] [line: 582]
!   !   !   Child: 1  Id: ca [type char] [line: 582]
!   !   Sibling: 573  Op: or [type bool] [line: 583]
!   !   !   Child: 0  Id: b [type bool] [line: 583]
!   !   !   Child: 1  Id: ca [type char] [line: 583]
!   !   Sibling: 574  Assign: = [type bool] [line: 584]
!   !   !   Child: 0  Id: b [type bool] [line: 584]
!   !   !   Child: 1  Id: ca [type char] [line: 584]
!   !   Sibling: 575  Op: != [type bool] [line: 585]
!   !   !   Child: 0  Id: b [type bool] [line: 585]
!   !   !   Child: 1  Id: b [type bool] [line: 585]
!   !   Sibling: 576  Op: <= [type bool] [line: 586]
!   !   !   Child: 0  Id: b [type bool] [line: 586]
!   !   !   Child: 1  Id: b [type bool] [line: 586]
!   !   Sibling: 577  Op: == [type bool] [line: 587]
!   !   !   Child: 0  Id: b [type bool] [line: 587]
!   !   !   Child: 1  Id: b [type bool] [line: 587]
!   !   Sibling: 578  Op: >= [type bool] [line: 588]
!   !   !   Child: 0  Id: b [type bool] [line: 588]
!   !   !   Child: 1  Id: b [type bool] [line: 588]
!   !   Sibling: 579  Op: < [type bool] [line: 589]
!   !   !   Child: 0  Id: b [type bool] [line: 589]
!   !   !   Child: 1  Id: b [type bool] [line: 589]
!   !   Sibling: 580  Op: > [type bool] [line: 590]
!   !   !   Child: 0  Id: b [type bool] [line: 590]
!   !   !   Child: 1  Id: b [type bool] [line: 590]
!   !   Sibling: 581  Assign: *= [type int] [line: 591]
!   !   !   Child: 0  Id: b [type bool] [line: 591]
!   !   !   Child: 1  Id: b [type bool] [line: 591]
!   !   Sibling: 582  Assign: += [type int] [line: 592]
!   !   !   Child: 0  Id: b [type bool] [line: 592]
!   !   !   Child: 1  Id: b [type bool] [line: 592]
!   !   Sibling: 583  Assign: -= [type int] [line: 593]
!   !   !   Child: 0  Id: b [type bool] [line: 593]
!   !   !   Child: 1  Id: b [type bool] [line: 593]
!   !   Sibling: 584  Assign: /= [type int] [line: 594]
!   !   !   Child: 0  Id: b [type bool] [line: 594]
!   !   !   Child: 1  Id: b [type bool] [line: 594]
!   !   Sibling: 585  Op: + [type int] [line: 595]
!   !   !   Child: 0  Id: b [type bool] [line: 595]
!   !   !   Child: 1  Id: b [type bool] [line: 595]
!   !   Sibling: 586  Op: - [type int] [line: 596]
!   !   !   Child: 0  Id: b [type bool] [line: 596]
!   !   !   Child: 1  Id: b [type bool] [line: 596]
!   !   Sibling: 587  Op: * [type int] [line: 597]
!   !   !   Child: 0  Id: b [type bool] [line: 597]
!   !   !   Child: 1  Id: b [type bool] [line: 597]
!   !   Sibling: 588  Op: / [type int] [line: 598]
!   !   !   Child: 0  Id: b [type bool] [line: 598]
!   !   !   Child: 1  Id: b [type bool] [line: 598]
!   !   Sibling: 589  Op: % [type int] [line: 599]
!   !   !   Child: 0  Id: b [type bool] [line: 599]
!   !   !   Child: 1  Id: b [type bool] [line: 599]
!   !   Sibling: 590  Op: and [type bool] [line: 600]
!   !   !   Child: 0  Id: b [type bool] [line: 600]
!   !   !   Child: 1  Id: b [type bool] [line: 600]
!   !   Sibling: 591  Op: or [type bool] [line: 601]
!   !   !   Child: 0  Id: b [type bool] [line: 601]
!   !   !   Child: 1  Id: b [type bool] [line: 601]
!   !   Sibling: 592  Assign: = [type bool] [line: 602]
!   !   !   Child: 0  Id: b [type bool] [line: 602]
!   !   !   Child: 1  Id: b [type bool] [line: 602]
!   !   Sibling: 593  Op: != [type bool] [line: 603]
!   !   !   Child: 0  Id: b [type bool] [line: 603]
!   !   !   Child: 1  Id: ba [type bool] [line: 603]
!   !   Sibling: 594  Op: <= [type bool] [line: 604]
!   !   !   Child: 0  Id: b [type bool] [line: 604]
!   !   !   Child: 1  Id: ba [type bool] [line: 604]
!   !   Sibling: 595  Op: == [type bool] [line: 605]
!   !   !   Child: 0  Id: b [type bool] [line: 605]
!   !   !   Child: 1  Id: ba [type bool] [line: 605]
!   !   Sibling: 596  Op: >= [type bool] [line: 606]
!   !   !   Child: 0  Id: b [type bool] [line: 606]
!   !   !   Child: 1  Id: ba [type bool] [line: 606]
!   !   Sibling: 597  Op: < [type bool] [line: 607]
!   !   !   Child: 0  Id: b [type bool] [line: 607]
!   !   !   Child: 1  Id: ba [type bool] [line: 607]
!   !   Sibling: 598  Op: > [type bool] [line: 608]
!   !   !   Child: 0  Id: b [type bool] [line: 608]
!   !   !   Child: 1  Id: ba [type bool] [line: 608]
!   !   Sibling: 599  Assign: *= [type int] [line: 609]
!   !   !   Child: 0  Id: b [type bool] [line: 609]
!   !   !   Child: 1  Id: ba [type bool] [line: 609]
!   !   Sibling: 600  Assign: += [type int] [line: 610]
!   !   !   Child: 0  Id: b [type bool] [line: 610]
!   !   !   Child: 1  Id: ba [type bool] [line: 610]
!   !   Sibling: 601  Assign: -= [type int] [line: 611]
!   !   !   Child: 0  Id: b [type bool] [line: 611]
!   !   !   Child: 1  Id: ba [type bool] [line: 611]
!   !   Sibling: 602  Assign: /= [type int] [line: 612]
!   !   !   Child: 0  Id: b [type bool] [line: 612]
!   !   !   Child: 1  Id: ba [type bool] [line: 612]
!   !   Sibling: 603  Op: + [type int] [line: 613]
!   !   !   Child: 0  Id: b [type bool] [line: 613]
!   !   !   Child: 1  Id: ba [type bool] [line: 613]
!   !   Sibling: 604  Op: - [type int] [line: 614]
!   !   !   Child: 0  Id: b [type bool] [line: 614]
!   !   !   Child: 1  Id: ba [type bool] [line: 614]
!   !   Sibling: 605  Op: * [type int] [line: 615]
!   !   !   Child: 0  Id: b [type bool] [line: 615]
!   !   !   Child: 1  Id: ba [type bool] [line: 615]
!   !   Sibling: 606  Op: / [type int] [line: 616]
!   !   !   Child: 0  Id: b [type bool] [line: 616]
!   !   !   Child: 1  Id: ba [type bool] [line: 616]
!   !   Sibling: 607  Op: % [type int] [line: 617]
!   !   !   Child: 0  Id: b [type bool] [line: 617]
!   !   !   Child: 1  Id: ba [type bool] [line: 617]
!   !   Sibling: 608  Op: and [type bool] [line: 618]
!   !   !   Child: 0  Id: b [type bool] [line: 618]
!   !   !   Child: 1  Id: ba [type bool] [line: 618]
!   !   Sibling: 609  Op: or [type bool] [line: 619]
!   !   !   Child: 0  Id: b [type bool] [line: 619]
!   !   !   Child: 1  Id: ba [type bool] [line: 619]
!   !   Sibling: 610  Assign: = [type bool] [line: 620]
!   !   !   Child: 0  Id: b [type bool] [line: 620]
!   !   !   Child: 1  Id: ba [type bool] [line: 620]
!   !   Sibling: 611  Op: != [type bool] [line: 621]
!   !   !   Child: 0  Id: b [type bool] [line: 621]
!   !   !   Child: 1  Call: v [type void] [line: 621]
!   !   Sibling: 612  Op: <= [type bool] [line: 622]
!   !   !   Child: 0  Id: b [type bool] [line: 622]
!   !   !   Child: 1  Call: v [type void] [line: 622]
!   !   Sibling: 613  Op: == [type bool] [line: 623]
!   !   !   Child: 0  Id: b [type bool] [line: 623]
!   !   !   Child: 1  Call: v [type void] [line: 623]
!   !   Sibling: 614  Op: >= [type bool] [line: 624]
!   !   !   Child: 0  Id: b [type bool] [line: 624]
!   !   !   Child: 1  Call: v [type void] [line: 624]
!   !   Sibling: 615  Op: < [type bool] [line: 625]
!   !   !   Child: 0  Id: b [type bool] [line: 625]
!   !   !   Child: 1  Call: v [type void] [line: 625]
!   !   Sibling: 616  Op: > [type bool] [line: 626]
!   !   !   Child: 0  Id: b [type bool] [line: 626]
!   !   !   Child: 1  Call: v [type void] [line: 626]
!   !   Sibling: 617  Assign: *= [type int] [line: 627]
!   !   !   Child: 0  Id: b [type bool] [line: 627]
!   !   !   Child: 1  Call: v [type void] [line: 627]
!   !   Sibling: 618  Assign: += [type int] [line: 628]
!   !   !   Child: 0  Id: b [type bool] [line: 628]
!   !   !   Child: 1  Call: v [type void] [line: 628]
!   !   Sibling: 619  Assign: -= [type int] [line: 629]
!   !   !   Child: 0  Id: b [type bool] [line: 629]
!   !   !   Child: 1  Call: v [type void] [line: 629]
!   !   Sibling: 620  Assign: /= [type int] [line: 630]
!   !   !   Child: 0  Id: b [type bool] [line: 630]
!   !   !   Child: 1  Call: v [type void] [line: 630]
!   !   Sibling: 621  Op: + [type int] [line: 631]
!   !   !   Child: 0  Id: b [type bool] [line: 631]
!   !   !   Child: 1  Call: v [type void] [line: 631]
!   !   Sibling: 622  Op: - [type int] [line: 632]
!   !   !   Child: 0  Id: b [type bool] [line: 632]
!   !   !   Child: 1  Call: v [type void] [line: 632]
!   !   Sibling: 623  Op: * [type int] [line: 633]
!   !   !   Child: 0  Id: b [type bool] [line: 633]
!   !   !   Child: 1  Call: v [type void] [line: 633]
!   !   Sibling: 624  Op: / [type int] [line: 634]
!   !   !   Child: 0  Id: b [type bool] [line: 634]
!   !   !   Child: 1  Call: v [type void] [line: 634]
!   !   Sibling: 625  Op: % [type int] [line: 635]
!   !   !   Child: 0  Id: b [type bool] [line: 635]
!   !   !   Child: 1  Call: v [type void] [line: 635]
!   !   Sibling: 626  Op: and [type bool] [line: 636]
!   !   !   Child: 0  Id: b [type bool] [line: 636]
!   !   !   Child: 1  Call: v [type void] [line: 636]
!   !   Sibling: 627  Op: or [type bool] [line: 637]
!   !   !   Child: 0  Id: b [type bool] [line: 637]
!   !   !   Child: 1  Call: v [type void] [line: 637]
!   !   Sibling: 628  Assign: = [type bool] [line: 638]
!   !   !   Child: 0  Id: b [type bool] [line: 638]
!   !   !   Child: 1  Call: v [type void] [line: 638]
!   !   Sibling: 629  Op: != [type bool] [line: 639]
!   !   !   Child: 0  Id: ba [type bool] [line: 639]
!   !   !   Child: 1  Id: i [type int] [line: 639]
!   !   Sibling: 630  Op: <= [type bool] [line: 640]
!   !   !   Child: 0  Id: ba [type bool] [line: 640]
!   !   !   Child: 1  Id: i [type int] [line: 640]
!   !   Sibling: 631  Op: == [type bool] [line: 641]
!   !   !   Child: 0  Id: ba [type bool] [line: 641]
!   !   !   Child: 1  Id: i [type int] [line: 641]
!   !   Sibling: 632  Op: >= [type bool] [line: 642]
!   !   !   Child: 0  Id: ba [type bool] [line: 642]
!   !   !   Child: 1  Id: i [type int] [line: 642]
!   !   Sibling: 633  Op: < [type bool] [line: 643]
!   !   !   Child: 0  Id: ba [type bool] [line: 643]
!   !   !   Child: 1  Id: i [type int] [line: 643]
!   !   Sibling: 634  Op: > [type bool] [line: 644]
!   !   !   Child: 0  Id: ba [type bool] [line: 644]
!   !   !   Child: 1  Id: i [type int] [line: 644]
!   !   Sibling: 635  Assign: *= [type int] [line: 645]
!   !   !   Child: 0  Id: ba [type bool] [line: 645]
!   !   !   Child: 1  Id: i [type int] [line: 645]
!   !   Sibling: 636  Assign: += [type int] [line: 646]
!   !   !   Child: 0  Id: ba [type bool] [line: 646]
!   !   !   Child: 1  Id: i [type int] [line: 646]
!   !   Sibling: 637  Assign: -= [type int] [line: 647]
!   !   !   Child: 0  Id: ba [type bool] [line: 647]
!   !   !   Child: 1  Id: i [type int] [line: 647]
!   !   Sibling: 638  Assign: /= [type int] [line: 648]
!   !   !   Child: 0  Id: ba [type bool] [line: 648]
!   !   !   Child: 1  Id: i [type int] [line: 648]
!   !   Sibling: 639  Op: + [type int] [line: 649]
!   !   !   Child: 0  Id: ba [type bool] [line: 649]
!   !   !   Child: 1  Id: i [type int] [line: 649]
!   !   Sibling: 640  Op: - [type int] [line: 650]
!   !   !   Child: 0  Id: ba [type bool] [line: 650]
!   !   !   Child: 1  Id: i [type int] [line: 650]
!   !   Sibling: 641  Op: * [type int] [line: 651]
!   !   !   Child: 0  Id: ba [type bool] [line: 651]
!   !   !   Child: 1  Id: i [type int] [line: 651]
!   !   Sibling: 642  Op: / [type int] [line: 652]
!   !   !   Child: 0  Id: ba [type bool] [line: 652]
!   !   !   Child: 1  Id: i [type int] [line: 652]
!   !   Sibling: 643  Op: % [type int] [line: 653]
!   !   !   Child: 0  Id: ba [type bool] [line: 653]
!   !   !   Child: 1  Id: i [type int] [line: 653]
!   !   Sibling: 644  Op: and [type bool] [line: 654]
!   !   !   Child: 0  Id: ba [type bool] [line: 654]
!   !   !   Child: 1  Id: i [type int] [line: 654]
!   !   Sibling: 645  Op: or [type bool] [line: 655]
!   !   !   Child: 0  Id: ba [type bool] [line: 655]
!   !   !   Child: 1  Id: i [type int] [line: 655]
!   !   Sibling: 646  Assign: = [type bool] [line: 656]
!   !   !   Child: 0  Id: ba [type bool] [line: 656]
!   !   !   Child: 1  Id: i [type int] [line: 656]
!   !   Sibling: 647  Op: != [type bool] [line: 657]
!   !   !   Child: 0  Id: ba [type bool] [line: 657]
!   !   !   Child: 1  Id: ia [type int] [line: 657]
!   !   Sibling: 648  Op: <= [type bool] [line: 658]
!   !   !   Child: 0  Id: ba [type bool] [line: 658]
!   !   !   Child: 1  Id: ia [type int] [line: 658]
!   !   Sibling: 649  Op: == [type bool] [line: 659]
!   !   !   Child: 0  Id: ba [type bool] [line: 659]
!   !   !   Child: 1  Id: ia [type int] [line: 659]
!   !   Sibling: 650  Op: >= [type bool] [line: 660]
!   !   !   Child: 0  Id: ba [type bool] [line: 660]
!   !   !   Child: 1  Id: ia [type int] [line: 660]
!   !   Sibling: 651  Op: < [type bool] [line: 661]
!   !   !   Child: 0  Id: ba [type bool] [line: 661]
!   !   !   Child: 1  Id: ia [type int] [line: 661]
!   !   Sibling: 652  Op: > [type bool] [line: 662]
!   !   !   Child: 0  Id: ba [type bool] [line: 662]
!   !   !   Child: 1  Id: ia [type int] [line: 662]
!   !   Sibling: 653  Assign: *= [type int] [line: 663]
!   !   !   Child: 0  Id: ba [type bool] [line: 663]
!   !   !   Child: 1  Id: ia [type int] [line: 663]
!   !   Sibling: 654  Assign: += [type int] [line: 664]
!   !   !   Child: 0  Id: ba [type bool] [line: 664]
!   !   !   Child: 1  Id: ia [type int] [line: 664]
!   !   Sibling: 655  Assign: -= [type int] [line: 665]
!   !   !   Child: 0  Id: ba [type bool] [line: 665]
!   !   !   Child: 1  Id: ia [type int] [line: 665]
!   !   Sibling: 656  Assign: /= [type int] [line: 666]
!   !   !   Child: 0  Id: ba [type bool] [line: 666]
!   !   !   Child: 1  Id: ia [type int] [line: 666]
!   !   Sibling: 657  Op: + [type int] [line: 667]
!   !   !   Child: 0  Id: ba [type bool] [line: 667]
!   !   !   Child: 1  Id: ia [type int] [line: 667]
!   !   Sibling: 658  Op: - [type int] [line: 668]
!   !   !   Child: 0  Id: ba [type bool] [line: 668]
!   !   !   Child: 1  Id: ia [type int] [line: 668]
!   !   Sibling: 659  Op: * [type int] [line: 669]
!   !   !   Child: 0  Id: ba [type bool] [line: 669]
!   !   !   Child: 1  Id: ia [type int] [line: 669]
!   !   Sibling: 660  Op: / [type int] [line: 670]
!   !   !   Child: 0  Id: ba [type bool] [line: 670]
!   !   !   Child: 1  Id: ia [type int] [line: 670]
!   !   Sibling: 661  Op: % [type int] [line: 671]
!   !   !   Child: 0  Id: ba [type bool] [line: 671]
!   !   !   Child: 1  Id: ia [type int] [line: 671]
!   !   Sibling: 662  Op: and [type bool] [line: 672]
!   !   !   Child: 0  Id: ba [type bool] [line: 672]
!   !   !   Child: 1  Id: ia [type int] [line: 672]
!   !   Sibling: 663  Op: or [type bool] [line: 673]
!   !   !   Child: 0  Id: ba [type bool] [line: 673]
!   !   !   Child: 1  Id: ia [type int] [line: 673]
!   !   Sibling: 664  Assign: = [type bool] [line: 674]
!   !   !   Child: 0  Id: ba [type bool] [line: 674]
!   !   !   Child: 1  Id: ia [type int] [line: 674]
!   !   Sibling: 665  Op: != [type bool] [line: 675]
!   !   !   Child: 0  Id: ba [type bool] [line: 675]
!   !   !   Child: 1  Id: c [type char] [line: 675]
!   !   Sibling: 666  Op: <= [type bool] [line: 676]
!   !   !   Child: 0  Id: ba [type bool] [line: 676]
!   !   !   Child: 1  Id: c [type char] [line: 676]
!   !   Sibling: 667  Op: == [type bool] [line: 677]
!   !   !   Child: 0  Id: ba [type bool] [line: 677]
!   !   !   Child: 1  Id: c [type char] [line: 677]
!   !   Sibling: 668  Op: >= [type bool] [line: 678]
!   !   !   Child: 0  Id: ba [type bool] [line: 678]
!   !   !   Child: 1  Id: c [type char] [line: 678]
!   !   Sibling: 669  Op: < [type bool] [line: 679]
!   !   !   Child: 0  Id: ba [type bool] [line: 679]
!   !   !   Child: 1  Id: c [type char] [line: 679]
!   !   Sibling: 670  Op: > [type bool] [line: 680]
!   !   !   Child: 0  Id: ba [type bool] [line: 680]
!   !   !   Child: 1  Id: c [type char] [line: 680]
!   !   Sibling: 671  Assign: *= [type int] [line: 681]
!   !   !   Child: 0  Id: ba [type bool] [line: 681]
!   !   !   Child: 1  Id: c [type char] [line: 681]
!   !   Sibling: 672  Assign: += [type int] [line: 682]
!   !   !   Child: 0  Id: ba [type bool] [line: 682]
!   !   !   Child: 1  Id: c [type char] [line: 682]
!   !   Sibling: 673  Assign: -= [type int] [line: 683]
!   !   !   Child: 0  Id: ba [type bool] [line: 683]
!   !   !   Child: 1  Id: c [type char] [line: 683]
!   !   Sibling: 674  Assign: /= [type int] [line: 684]
!   !   !   Child: 0  Id: ba [type bool] [line: 684]
!   !   !   Child: 1  Id: c [type char] [line: 684]
!   !   Sibling: 675  Op: + [type int] [line: 685]
!   !   !   Child: 0  Id: ba [type bool] [line: 685]
!   !   !   Child: 1  Id: c [type char] [line: 685]
!   !   Sibling: 676  Op: - [type int] [line: 686]
!   !   !   Child: 0  Id: ba [type bool] [line: 686]
!   !   !   Child: 1  Id: c [type char] [line: 686]
!   !   Sibling: 677  Op: * [type int] [line: 687]
!   !   !   Child: 0  Id: ba [type bool] [line: 687]
!   !   !   Child: 1  Id: c [type char] [line: 687]
!   !   Sibling: 678  Op: / [type int] [line: 688]
!   !   !   Child: 0  Id: ba [type bool] [line: 688]
!   !   !   Child: 1  Id: c [type char] [line: 688]
!   !   Sibling: 679  Op: % [type int] [line: 689]
!   !   !   Child: 0  Id: ba [type bool] [line: 689]
!   !   !   Child: 1  Id: c [type char] [line: 689]
!   !   Sibling: 680  Op: and [type bool] [line: 690]
!   !   !   Child: 0  Id: ba [type bool] [line: 690]
!   !   !   Child: 1  Id: c [type char] [line: 690]
!   !   Sibling: 681  Op: or [type bool] [line: 691]
!   !   !   Child: 0  Id: ba [type bool] [line: 691]
!   !   !   Child: 1  Id: c [type char] [line: 691]
!   !   Sibling: 682  Assign: = [type bool] [line: 692]
!   !   !   Child: 0  Id: ba [type bool] [line: 692]
!   !   !   Child: 1  Id: c [type char] [line: 692]
!   !   Sibling: 683  Op: != [type bool] [line: 693]
!   !   !   Child: 0  Id: ba [type bool] [line: 693]
!   !   !   Child: 1  Id: ca [type char] [line: 693]
!   !   Sibling: 684  Op: <= [type bool] [line: 694]
!   !   !   Child: 0  Id: ba [type bool] [line: 694]
!   !   !   Child: 1  Id: ca [type char] [line: 694]
!   !   Sibling: 685  Op: == [type bool] [line: 695]
!   !   !   Child: 0  Id: ba [type bool] [line: 695]
!   !   !   Child: 1  Id: ca [type char] [line: 695]
!   !   Sibling: 686  Op: >= [type bool] [line: 696]
!   !   !   Child: 0  Id: ba [type bool] [line: 696]
!   !   !   Child: 1  Id: ca [type char] [line: 696]
!   !   Sibling: 687  Op: < [type bool] [line: 697]
!   !   !   Child: 0  Id: ba [type bool] [line: 697]
!   !   !   Child: 1  Id: ca [type char] [line: 697]
!   !   Sibling: 688  Op: > [type bool] [line: 698]
!   !   !   Child: 0  Id: ba [type bool] [line: 698]
!   !   !   Child: 1  Id: ca [type char] [line: 698]
!   !   Sibling: 689  Assign: *= [type int] [line: 699]
!   !   !   Child: 0  Id: ba [type bool] [line: 699]
!   !   !   Child: 1  Id: ca [type char] [line: 699]
!   !   Sibling: 690  Assign: += [type int] [line: 700]
!   !   !   Child: 0  Id: ba [type bool] [line: 700]
!   !   !   Child: 1  Id: ca [type char] [line: 700]
!   !   Sibling: 691  Assign: -= [type int] [line: 701]
!   !   !   Child: 0  Id: ba [type bool] [line: 701]
!   !   !   Child: 1  Id: ca [type char] [line: 701]
!   !   Sibling: 692  Assign: /= [type int] [line: 702]
!   !   !   Child: 0  Id: ba [type bool] [line: 702]
!   !   !   Child: 1  Id: ca [type char] [line: 702]
!   !   Sibling: 693  Op: + [type int] [line: 703]
!   !   !   Child: 0  Id: ba [type bool] [line: 703]
!   !   !   Child: 1  Id: ca [type char] [line: 703]
!   !   Sibling: 694  Op: - [type int] [line: 704]
!   !   !   Child: 0  Id: ba [type bool] [line: 704]
!   !   !   Child: 1  Id: ca [type char] [line: 704]
!   !   Sibling: 695  Op: * [type int] [line: 705]
!   !   !   Child: 0  Id: ba [type bool] [line: 705]
!   !   !   Child: 1  Id: ca [type char] [line: 705]
!   !   Sibling: 696  Op: / [type int] [line: 706]
!   !   !   Child: 0  Id: ba [type bool] [line: 706]
!   !   !   Child: 1  Id: ca [type char] [line: 706]
!   !   Sibling: 697  Op: % [type int] [line: 707]
!   !   !   Child: 0  Id: ba [type bool] [line: 707]
!   !   !   Child: 1  Id: ca [type char] [line: 707]
!   !   Sibling: 698  Op: and [type bool] [line: 708]
!   !   !   Child: 0  Id: ba [type bool] [line: 708]
!   !   !   Child: 1  Id: ca [type char] [line: 708]
!   !   Sibling: 699  Op: or [type bool] [line: 709]
!   !   !   Child: 0  Id: ba [type bool] [line: 709]
!   !   !   Child: 1  Id: ca [type char] [line: 709]
!   !   Sibling: 700  Assign: = [type bool] [line: 710]
!   !   !   Child: 0  Id: ba [type bool] [line: 710]
!   !   !   Child: 1  Id: ca [type char] [line: 710]
!   !   Sibling: 701  Op: != [type bool] [line: 711]
!   !   !   Child: 0  Id: ba [type bool] [line: 711]
!   !   !   Child: 1  Id: b [type bool] [line: 711]
!   !   Sibling: 702  Op: <= [type bool] [line: 712]
!   !   !   Child: 0  Id: ba [type bool] [line: 712]
!   !   !   Child: 1  Id: b [type bool] [line: 712]
!   !   Sibling: 703  Op: == [type bool] [line: 713]
!   !   !   Child: 0  Id: ba [type bool] [line: 713]
!   !   !   Child: 1  Id: b [type bool] [line: 713]
!   !   Sibling: 704  Op: >= [type bool] [line: 714]
!   !   !   Child: 0  Id: ba [type bool] [line: 714]
!   !   !   Child: 1  Id: b [type bool] [line: 714]
!   !   Sibling: 705  Op: < [type bool] [line: 715]
!   !   !   Child: 0  Id: ba [type bool] [line: 715]
!   !   !   Child: 1  Id: b [type bool] [line: 715]
!   !   Sibling: 706  Op: > [type bool] [line: 716]
!   !   !   Child: 0  Id: ba [type bool] [line: 716]
!   !   !   Child: 1  Id: b [type bool] [line: 716]
!   !   Sibling: 707  Assign: *= [type int] [line: 717]
!   !   !   Child: 0  Id: ba [type bool] [line: 717]
!   !   !   Child: 1  Id: b [type bool] [line: 717]
!   !   Sibling: 708  Assign: += [type int] [line: 718]
!   !   !   Child: 0  Id: ba [type bool] [line: 718]
!   !   !   Child: 1  Id: b [type bool] [line: 718]
!   !   Sibling: 709  Assign: -= [type int] [line: 719]
!   !   !   Child: 0  Id: ba [type bool] [line: 719]
!   !   !   Child: 1  Id: b [type bool] [line: 719]
!   !   Sibling: 710  Assign: /= [type int] [line: 720]
!   !   !   Child: 0  Id: ba [type bool] [line: 720]
!   !   !   Child: 1  Id: b [type bool] [line: 720]
!   !   Sibling: 711  Op: + [type int] [line: 721]
!   !   !   Child: 0  Id: ba [type bool] [line: 721]
!   !   !   Child: 1  Id: b [type bool] [line: 721]
!   !   Sibling: 712  Op: - [type int] [line: 722]
!   !   !   Child: 0  Id: ba [type bool] [line: 722]
!   !   !   Child: 1  Id: b [type bool] [line: 722]
!   !   Sibling: 713  Op: * [type int] [line: 723]
!   !   !   Child: 0  Id: ba [type bool] [line: 723]
!   !   !   Child: 1  Id: b [type bool] [line: 723]
!   !   Sibling: 714  Op: / [type int] [line: 724]
!   !   !   Child: 0  Id: ba [type bool] [line: 724]
!   !   !   Child: 1  Id: b [type bool] [line: 724]
!   !   Sibling: 715  Op: % [type int] [line: 725]
!   !   !   Child: 0  Id: ba [type bool] [line: 725]
!   !   !   Child: 1  Id: b [type bool] [line: 725]
!   !   Sibling: 716  Op: and [type bool] [line: 726]
!   !   !   Child: 0  Id: ba [type bool] [line: 726]
!   !   !   Child: 1  Id: b [type bool] [line: 726]
!   !   Sibling: 717  Op: or [type bool] [line: 727]
!   !   !   Child: 0  Id: ba [type bool] [line: 727]
!   !   !   Child: 1  Id: b [type bool] [line: 727]
!   !   Sibling: 718  Assign: = [type bool] [line: 728]
!   !   !   Child: 0  Id: ba [type bool] [line: 728]
!   !   !   Child: 1  Id: b [type bool] [line: 728]
!   !   Sibling: 719  Op: != [type bool] [line: 729]
!   !   !   Child: 0  Id: ba [type bool] [line: 729]
!   !   !   Child: 1  Id: ba [type bool] [line: 729]
!   !   Sibling: 720  Op: <= [type bool] [line: 730]
!   !   !   Child: 0  Id: ba [type bool] [line: 730]
!   !   !   Child: 1  Id: ba [type bool] [line: 730]
!   !   Sibling: 721  Op: == [type bool] [line: 731]
!   !   !   Child: 0  Id: ba [type bool] [line: 731]
!   !   !   Child: 1  Id: ba [type bool] [line: 731]
!   !   Sibling: 722  Op: >= [type bool] [line: 732]
!   !   !   Child: 0  Id: ba [type bool] [line: 732]
!   !   !   Child: 1  Id: ba [type bool] [line: 732]
!   !   Sibling: 723  Op: < [type bool] [line: 733]
!   !   !   Child: 0  Id: ba [type bool] [line: 733]
!   !   !   Child: 1  Id: ba [type bool] [line: 733]
!   !   Sibling: 724  Op: > [type bool] [line: 734]
!   !   !   Child: 0  Id: ba [type bool] [line: 734]
!   !   !   Child: 1  Id: ba [type bool] [line: 734]
!   !   Sibling: 725  Assign: *= [type int] [line: 735]
!   !   !   Child: 0  Id: ba [type bool] [line: 735]
!   !   !   Child: 1  Id: ba [type bool] [line: 735]
!   !   Sibling: 726  Assign: += [type int] [line: 736]
!   !   !   Child: 0  Id: ba [type bool] [line: 736]
!   !   !   Child: 1  Id: ba [type bool] [line: 736]
!   !   Sibling: 727  Assign: -= [type int] [line: 737]
!   !   !   Child: 0  Id: ba [type bool] [line: 737]
!   !   !   Child: 1  Id: ba [type bool] [line: 737]
!   !   Sibling: 728  Assign: /= [type int] [line: 738]
!   !   !   Child: 0  Id: ba [type bool] [line: 738]
!   !   !   Child: 1  Id: ba [type bool] [line: 738]
!   !   Sibling: 729  Op: + [type int] [line: 739]
!   !   !   Child: 0  Id: ba [type bool] [line: 739]
!   !   !   Child: 1  Id: ba [type bool] [line: 739]
!   !   Sibling: 730  Op: - [type int] [line: 740]
!   !   !   Child: 0  Id: ba [type bool] [line: 740]
!   !   !   Child: 1  Id: ba [type bool] [line: 740]
!   !   Sibling: 731  Op: * [type int] [line: 741]
!   !   !   Child: 0  Id: ba [type bool] [line: 741]
!   !   !   Child: 1  Id: ba [type bool] [line: 741]
!   !   Sibling: 732  Op: / [type int] [line: 742]
!   !   !   Child: 0  Id: ba [type bool] [line: 742]
!   !   !   Child: 1  Id: ba [type bool] [line: 742]
!   !   Sibling: 733  Op: % [type int] [line: 743]
!   !   !   Child: 0  Id: ba [type bool] [line: 743]
!   !   !   Child: 1  Id: ba [type bool] [line: 743]
!   !   Sibling: 734  Op: and [type bool] [line: 744]
!   !   !   Child: 0  Id: ba [type bool] [line: 744]
!   !   !   Child: 1  Id: ba [type bool] [line: 744]
!   !   Sibling: 735  Op: or [type bool] [line: 745]
!   !   !   Child: 0  Id: ba [type bool] [line: 745]
!   !   !   Child: 1  Id: ba [type bool] [line: 745]
!   !   Sibling: 736  Assign: = [type bool] [line: 746]
!   !   !   Child: 0  Id: ba [type bool] [line: 746]
!   !   !   Child: 1  Id: ba [type bool] [line: 746]
!   !   Sibling: 737  Op: != [type bool] [line: 747]
!   !   !   Child: 0  Id: ba [type bool] [line: 747]
!   !   !   Child: 1  Call: v [type void] [line: 747]
!   !   Sibling: 738  Op: <= [type bool] [line: 748]
!   !   !   Child: 0  Id: ba [type bool] [line: 748]
!   !   !   Child: 1  Call: v [type void] [line: 748]
!   !   Sibling: 739  Op: == [type bool] [line: 749]
!   !   !   Child: 0  Id: ba [type bool] [line: 749]
!   !   !   Child: 1  Call: v [type void] [line: 749]
!   !   Sibling: 740  Op: >= [type bool] [line: 750]
!   !   !   Child: 0  Id: ba [type bool] [line: 750]
!   !   !   Child: 1  Call: v [type void] [line: 750]
!   !   Sibling: 741  Op: < [type bool] [line: 751]
!   !   !   Child: 0  Id: ba [type bool] [line: 751]
!   !   !   Child: 1  Call: v [type void] [line: 751]
!   !   Sibling: 742  Op: > [type bool] [line: 752]
!   !   !   Child: 0  Id: ba [type bool] [line: 752]
!   !   !   Child: 1  Call: v [type void] [line: 752]
!   !   Sibling: 743  Assign: *= [type int] [line: 753]
!   !   !   Child: 0  Id: ba [type bool] [line: 753]
!   !   !   Child: 1  Call: v [type void] [line: 753]
!   !   Sibling: 744  Assign: += [type int] [line: 754]
!   !   !   Child: 0  Id: ba [type bool] [line: 754]
!   !   !   Child: 1  Call: v [type void] [line: 754]
!   !   Sibling: 745  Assign: -= [type int] [line: 755]
!   !   !   Child: 0  Id: ba [type bool] [line: 755]
!   !   !   Child: 1  Call: v [type void] [line: 755]
!   !   Sibling: 746  Assign: /= [type int] [line: 756]
!   !   !   Child: 0  Id: ba [type bool] [line: 756]
!   !   !   Child: 1  Call: v [type void] [line: 756]
!   !   Sibling: 747  Op: + [type int] [line: 757]
!   !   !   Child: 0  Id: ba [type bool] [line: 757]
!   !   !   Child: 1  Call: v [type void] [line: 757]
!   !   Sibling: 748  Op: - [type int] [line: 758]
!   !   !   Child: 0  Id: ba [type bool] [line: 758]
!   !   !   Child: 1  Call: v [type void] [line: 758]
!   !   Sibling: 749  Op: * [type int] [line: 759]
!   !   !   Child: 0  Id: ba [type bool] [line: 759]
!   !   !   Child: 1  Call: v [type void] [line: 759]
!   !   Sibling: 750  Op: / [type int] [line: 760]
!   !   !   Child: 0  Id: ba [type bool] [line: 760]
!   !   !   Child: 1  Call: v [type void] [line: 760]
!   !   Sibling: 751  Op: % [type int] [line: 761]
!   !   !   Child: 0  Id: ba [type bool] [line: 761]
!   !   !   Child: 1  Call: v [type void] [line: 761]
!   !   Sibling: 752  Op: and [type bool] [line: 762]
!   !   !   Child: 0  Id: ba [type bool] [line: 762]
!   !   !   Child: 1  Call: v [type void] [line: 762]
!   !   Sibling: 753  Op: or [type bool] [line: 763]
!   !   !   Child: 0  Id: ba [type bool] [line: 763]
!   !   !   Child: 1  Call: v [type void] [line: 763]
!   !   Sibling: 754  Assign: = [type bool] [line: 764]
!   !   !   Child: 0  Id: ba [type bool] [line: 764]
!   !   !   Child: 1  Call: v [type void] [line: 764]
!   !   Sibling: 755  Op: < [type bool] [line: 765]
!   !   !   Child: 0  Call: v [type void] [line: 765]
!   !   !   Child: 1  Id: i [type int] [line: 765]
!   !   Sibling: 756  Op: > [type bool] [line: 766]
!   !   !   Child: 0  Call: v [type void] [line: 766]
!   !   !   Child: 1  Id: i [type int] [line: 766]
!   !   Sibling: 757  Op: + [type int] [line: 767]
!   !   !   Child: 0  Call: v [type void] [line: 767]
!   !   !   Child: 1  Id: i [type int] [line: 767]
!   !   Sibling: 758  Op: - [type int] [line: 768]
!   !   !   Child: 0  Call: v [type void] [line: 768]
!   !   !   Child: 1  Id: i [type int] [line: 768]
!   !   Sibling: 759  Op: * [type int] [line: 769]
!   !   !   Child: 0  Call: v [type void] [line: 769]
!   !   !   Child: 1  Id: i [type int] [line: 769]
!   !   Sibling: 760  Op: / [type int] [line: 770]
!   !   !   Child: 0  Call: v [type void] [line: 770]
!   !   !   Child: 1  Id: i [type int] [line: 770]
!   !   Sibling: 761  Op: % [type int] [line: 771]
!   !   !   Child: 0  Call: v [type void] [line: 771]
!   !   !   Child: 1  Id: i [type int] [line: 771]
!   !   Sibling: 762  Op: and [type bool] [line: 772]
!   !   !   Child: 0  Call: v [type void] [line: 772]
!   !   !   Child: 1  Id: i [type int] [line: 772]
!   !   Sibling: 763  Op: or [type bool] [line: 773]
!   !   !   Child: 0  Call: v [type void] [line: 773]
!   !   !   Child: 1  Id: i [type int] [line: 773]
!   !   Sibling: 764  Op: < [type bool] [line: 774]
!   !   !   Child: 0  Call: v [type void] [line: 774]
!   !   !   Child: 1  Id: ia [type int] [line: 774]
!   !   Sibling: 765  Op: > [type bool] [line: 775]
!   !   !   Child: 0  Call: v [type void] [line: 775]
!   !   !   Child: 1  Id: ia [type int] [line: 775]
!   !   Sibling: 766  Op: + [type int] [line: 776]
!   !   !   Child: 0  Call: v [type void] [line: 776]
!   !   !   Child: 1  Id: ia [type int] [line: 776]
!   !   Sibling: 767  Op: - [type int] [line: 777]
!   !   !   Child: 0  Call: v [type void] [line: 777]
!   !   !   Child: 1  Id: ia [type int] [line: 777]
!   !   Sibling: 768  Op: * [type int] [line: 778]
!   !   !   Child: 0  Call: v [type void] [line: 778]
!   !   !   Child: 1  Id: ia [type int] [line: 778]
!   !   Sibling: 769  Op: / [type int] [line: 779]
!   !   !   Child: 0  Call: v [type void] [line: 779]
!   !   !   Child: 1  Id: ia [type int] [line: 779]
!   !   Sibling: 770  Op: % [type int] [line: 780]
!   !   !   Child: 0  Call: v [type void] [line: 780]
!   !   !   Child: 1  Id: ia [type int] [line: 780]
!   !   Sibling: 771  Op: and [type bool] [line: 781]
!   !   !   Child: 0  Call: v [type void] [line: 781]
!   !   !   Child: 1  Id: ia [type int] [line: 781]
!   !   Sibling: 772  Op: or [type bool] [line: 782]
!   !   !   Child: 0  Call: v [type void] [line: 782]
!   !   !   Child: 1  Id: ia [type int] [line: 782]
!   !   Sibling: 773  Op: < [type bool] [line: 783]
!   !   !   Child: 0  Call: v [type void] [line: 783]
!   !   !   Child: 1  Id: c [type char] [line: 783]
!   !   Sibling: 774  Op: > [type bool] [line: 784]
!   !   !   Child: 0  Call: v [type void] [line: 784]
!   !   !   Child: 1  Id: c [type char] [line: 784]
!   !   Sibling: 775  Op: + [type int] [line: 785]
!   !   !   Child: 0  Call: v [type void] [line: 785]
!   !   !   Child: 1  Id: c [type char] [line: 785]
!   !   Sibling: 776  Op: - [type int] [line: 786]
!   !   !   Child: 0  Call: v [type void] [line: 786]
!   !   !   Child: 1  Id: c [type char] [line: 786]
!   !   Sibling: 777  Op: * [type int] [line: 787]
!   !   !   Child: 0  Call: v [type void] [line: 787]
!   !   !   Child: 1  Id: c [type char] [line: 787]
!   !   Sibling: 778  Op: / [type int] [line: 788]
!   !   !   Child: 0  Call: v [type void] [line: 788]
!   !   !   Child: 1  Id: c [type char] [line: 788]
!   !   Sibling: 779  Op: % [type int] [line: 789]
!   !   !   Child: 0  Call: v [type void] [line: 789]
!   !   !   Child: 1  Id: c [type char] [line: 789]
!   !   Sibling: 780  Op: and [type bool] [line: 790]
!   !   !   Child: 0  Call: v [type void] [line: 790]
!   !   !   Child: 1  Id: c [type char] [line: 790]
!   !   Sibling: 781  Op: or [type bool] [line: 791]
!   !   !   Child: 0  Call: v [type void] [line: 791]
!   !   !   Child: 1  Id: c [type char] [line: 791]
!   !   Sibling: 782  Op: < [type bool] [line: 792]
!   !   !   Child: 0  Call: v [type void] [line: 792]
!   !   !   Child: 1  Id: ca [type char] [line: 792]
!   !   Sibling: 783  Op: > [type bool] [line: 793]
!   !   !   Child: 0  Call: v [type void] [line: 793]
!   !   !   Child: 1  Id: ca [type char] [line: 793]
!   !   Sibling: 784  Op: + [type int] [line: 794]
!   !   !   Child: 0  Call: v [type void] [line: 794]
!   !   !   Child: 1  Id: ca [type char] [line: 794]
!   !   Sibling: 785  Op: - [type int] [line: 795]
!   !   !   Child: 0  Call: v [type void] [line: 795]
!   !   !   Child: 1  Id: ca [type char] [line: 795]
!   !   Sibling: 786  Op: * [type int] [line: 796]
!   !   !   Child: 0  Call: v [type void] [line: 796]
!   !   !   Child: 1  Id: ca [type char] [line: 796]
!   !   Sibling: 787  Op: / [type int] [line: 797]
!   !   !   Child: 0  Call: v [type void] [line: 797]
!   !   !   Child: 1  Id: ca [type char] [line: 797]
!   !   Sibling: 788  Op: % [type int] [line: 798]
!   !   !   Child: 0  Call: v [type void] [line: 798]
!   !   !   Child: 1  Id: ca [type char] [line: 798]
!   !   Sibling: 789  Op: and [type bool] [line: 799]
!   !   !   Child: 0  Call: v [type void] [line: 799]
!   !   !   Child: 1  Id: ca [type char] [line: 799]
!   !   Sibling: 790  Op: or [type bool] [line: 800]
!   !   !   Child: 0  Call: v [type void] [line: 800]
!   !   !   Child: 1  Id: ca [type char] [line: 800]
!   !   Sibling: 791  Op: < [type bool] [line: 801]
!   !   !   Child: 0  Call: v [type void] [line: 801]
!   !   !   Child: 1  Id: b [type bool] [line: 801]
!   !   Sibling: 792  Op: > [type bool] [line: 802]
!   !   !   Child: 0  Call: v [type void] [line: 802]
!   !   !   Child: 1  Id: b [type bool] [line: 802]
!   !   Sibling: 793  Op: + [type int] [line: 803]
!   !   !   Child: 0  Call: v [type void] [line: 803]
!   !   !   Child: 1  Id: b [type bool] [line: 803]
!   !   Sibling: 794  Op: - [type int] [line: 804]
!   !   !   Child: 0  Call: v [type void] [line: 804]
!   !   !   Child: 1  Id: b [type bool] [line: 804]
!   !   Sibling: 795  Op: * [type int] [line: 805]
!   !   !   Child: 0  Call: v [type void] [line: 805]
!   !   !   Child: 1  Id: b [type bool] [line: 805]
!   !   Sibling: 796  Op: / [type int] [line: 806]
!   !   !   Child: 0  Call: v [type void] [line: 806]
!   !   !   Child: 1  Id: b [type bool] [line: 806]
!   !   Sibling: 797  Op: % [type int] [line: 807]
!   !   !   Child: 0  Call: v [type void] [line: 807]
!   !   !   Child: 1  Id: b [type bool] [line: 807]
!   !   Sibling: 798  Op: and [type bool] [line: 808]
!   !   !   Child: 0  Call: v [type void] [line: 808]
!   !   !   Child: 1  Id: b [type bool] [line: 808]
!   !   Sibling: 799  Op: or [type bool] [line: 809]
!   !   !   Child: 0  Call: v [type void] [line: 809]
!   !   !   Child: 1  Id: b [type bool] [line: 809]
!   !   Sibling: 800  Op: < [type bool] [line: 810]
!   !   !   Child: 0  Call: v [type void] [line: 810]
!   !   !   Child: 1  Id: ba [type bool] [line: 810]
!   !   Sibling: 801  Op: > [type bool] [line: 811]
!   !   !   Child: 0  Call: v [type void] [line: 811]
!   !   !   Child: 1  Id: ba [type bool] [line: 811]
!   !   Sibling: 802  Op: + [type int] [line: 812]
!   !   !   Child: 0  Call: v [type void] [line: 812]
!   !   !   Child: 1  Id: ba [type bool] [line: 812]
!   !   Sibling: 803  Op: - [type int] [line: 813]
!   !   !   Child: 0  Call: v [type void] [line: 813]
!   !   !   Child: 1  Id: ba [type bool] [line: 813]
!   !   Sibling: 804  Op: * [type int] [line: 814]
!   !   !   Child: 0  Call: v [type void] [line: 814]
!   !   !   Child: 1  Id: ba [type bool] [line: 814]
!   !   Sibling: 805  Op: / [type int] [line: 815]
!   !   !   Child: 0  Call: v [type void] [line: 815]
!   !   !   Child: 1  Id: ba [type bool] [line: 815]
!   !   Sibling: 806  Op: % [type int] [line: 816]
!   !   !   Child: 0  Call: v [type void] [line: 816]
!   !   !   Child: 1  Id: ba [type bool] [line: 816]
!   !   Sibling: 807  Op: and [type bool] [line: 817]
!   !   !   Child: 0  Call: v [type void] [line: 817]
!   !   !   Child: 1  Id: ba [type bool] [line: 817]
!   !   Sibling: 808  Op: or [type bool] [line: 818]
!   !   !   Child: 0  Call: v [type void] [line: 818]
!   !   !   Child: 1  Id: ba [type bool] [line: 818]
!   !   Sibling: 809  Op: < [type bool] [line: 819]
!   !   !   Child: 0  Call: v [type void] [line: 819]
!   !   !   Child: 1  Call: v [type void] [line: 819]
!   !   Sibling: 810  Op: > [type bool] [line: 820]
!   !   !   Child: 0  Call: v [type void] [line: 820]
!   !   !   Child: 1  Call: v [type void] [line: 820]
!   !   Sibling: 811  Op: + [type int] [line: 821]
!   !   !   Child: 0  Call: v [type void] [line: 821]
!   !   !   Child: 1  Call: v [type void] [line: 821]
!   !   Sibling: 812  Op: - [type int] [line: 822]
!   !   !   Child: 0  Call: v [type void] [line: 822]
!   !   !   Child: 1  Call: v [type void] [line: 822]
!   !   Sibling: 813  Op: * [type int] [line: 823]
!   !   !   Child: 0  Call: v [type void] [line: 823]
!   !   !   Child: 1  Call: v [type void] [line: 823]
!   !   Sibling: 814  Op: / [type int] [line: 824]
!   !   !   Child: 0  Call: v [type void] [line: 824]
!   !   !   Child: 1  Call: v [type void] [line: 824]
!   !   Sibling: 815  Op: % [type int] [line: 825]
!   !   !   Child: 0  Call: v [type void] [line: 825]
!   !   !   Child: 1  Call: v [type void] [line: 825]
!   !   Sibling: 816  Op: and [type bool] [line: 826]
!   !   !   Child: 0  Call: v [type void] [line: 826]
!   !   !   Child: 1  Call: v [type void] [line: 826]
!   !   Sibling: 817  Op: or [type bool] [line: 827]
!   !   !   Child: 0  Call: v [type void] [line: 827]
!   !   !   Child: 1  Call: v [type void] [line: 827]
!   !   Sibling: 818  Op: not [type bool] [line: 828]
!   !   !   Child: 0  Id: i [type int] [line: 828]
!   !   Sibling: 819  Op: * [type int] [line: 829]
!   !   !   Child: 0  Id: i [type int] [line: 829]
!   !   Sibling: 820  Op: ? [type int] [line: 830]
!   !   !   Child: 0  Id: i [type int] [line: 830]
!   !   Sibling: 821  Op: not [type bool] [line: 831]
!   !   !   Child: 0  Id: ia [type int] [line: 831]
!   !   Sibling: 822  Op: * [type int] [line: 832]
!   !   !   Child: 0  Id: ia [type int] [line: 832]
!   !   Sibling: 823  Op: ? [type int] [line: 833]
!   !   !   Child: 0  Id: ia [type int] [line: 833]
!   !   Sibling: 824  Op: not [type bool] [line: 834]
!   !   !   Child: 0  Id: c [type char] [line: 834]
!   !   Sibling: 825  Op: * [type int] [line: 835]
!   !   !   Child: 0  Id: c [type char] [line: 835]
!   !   Sibling: 826  Op: ? [type int] [line: 836]
!   !   !   Child: 0  Id: c [type char] [line: 836]
!   !   Sibling: 827  Op: not [type bool] [line: 837]
!   !   !   Child: 0  Id: ca [type char] [line: 837]
!   !   Sibling: 828  Op: * [type int] [line: 838]
!   !   !   Child: 0  Id: ca [type char] [line: 838]
!   !   Sibling: 829  Op: ? [type int] [line: 839]
!   !   !   Child: 0  Id: ca [type char] [line: 839]
!   !   Sibling: 830  Op: not [type bool] [line: 840]
!   !   !   Child: 0  Id: b [type bool] [line: 840]
!   !   Sibling: 831  Op: * [type int] [line: 841]
!   !   !   Child: 0  Id: b [type bool] [line: 841]
!   !   Sibling: 832  Op: ? [type int] [line: 842]
!   !   !   Child: 0  Id: b [type bool] [line: 842]
!   !   Sibling: 833  Op: not [type bool] [line: 843]
!   !   !   Child: 0  Id: ba [type bool] [line: 843]
!   !   Sibling: 834  Op: * [type int] [line: 844]
!   !   !   Child: 0  Id: ba [type bool] [line: 844]
!   !   Sibling: 835  Op: ? [type int] [line: 845]
!   !   !   Child: 0  Id: ba [type bool] [line: 845]
!   !   Sibling: 836  Op: not [type bool] [line: 846]
!   !   !   Child: 0  Call: v [type void] [line: 846]
!   !   Sibling: 837  Op: * [type int] [line: 847]
!   !   !   Child: 0  Call: v [type void] [line: 847]
!   !   Sibling: 838  Op: ? [type int] [line: 848]
!   !   !   Child: 0  Call: v [type void] [line: 848]
!   !   Sibling: 839  Assign: ++ [type int] [line: 849]
!   !   !   Child: 0  Id: i [type int] [line: 849]
!   !   Sibling: 840  Assign: -- [type int] [line: 850]
!   !   !   Child: 0  Id: i [type int] [line: 850]
!   !   Sibling: 841  Assign: ++ [type int] [line: 851]
!   !   !   Child: 0  Id: ia [type int] [line: 851]
!   !   Sibling: 842  Assign: -- [type int] [line: 852]
!   !   !   Child: 0  Id: ia [type int] [line: 852]
!   !   Sibling: 843  Assign: ++ [type int] [line: 853]
!   !   !   Child: 0  Id: c [type char] [line: 853]
!   !   Sibling: 844  Assign: -- [type int] [line: 854]
!   !   !   Child: 0  Id: c [type char] [line: 854]
!   !   Sibling: 845  Assign: ++ [type int] [line: 855]
!   !   !   Child: 0  Id: ca [type char] [line: 855]
!   !   Sibling: 846  Assign: -- [type int] [line: 856]
!   !   !   Child: 0  Id: ca [type char] [line: 856]
!   !   Sibling: 847  Assign: ++ [type int] [line: 857]
!   !   !   Child: 0  Id: b [type bool] [line: 857]
!   !   Sibling: 848  Assign: -- [type int] [line: 858]
!   !   !   Child: 0  Id: b [type bool] [line: 858]
!   !   Sibling: 849  Assign: ++ [type int] [line: 859]
!   !   !   Child: 0  Id: ba [type bool] [line: 859]
!   !   Sibling: 850  Assign: -- [type int] [line: 860]
!   !   !   Child: 0  Id: ba [type bool] [line: 860]
Number of warnings: 0
Number of errors: 1566
