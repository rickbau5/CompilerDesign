Func input returns type int [type int] [line: -1]
Sibling: 0  Func output returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type int [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type bool [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [type char] [line: -1]
Sibling: 4  Func outputc returns type void [type void] [line: -1]
!   Child: 0  Param *dummy* of type void [type void] [line: -1]
Sibling: 5  Func outnl returns type void [type void] [line: -1]
Sibling: 6  Var numSuits of type int [type int] [line: 4]
Sibling: 7  Var numPips of type int [type int] [line: 4]
Sibling: 8  Var numCards of type int [type int] [line: 4]
Sibling: 9  Func suit returns type int [type int] [line: 6]
!   Child: 0  Param c of type int [type int] [line: 6]
!   Child: 1  Compound [type void] [line: 6]
!   !   Child: 1  Return [type void] [line: 6]
!   !   !   Child: 0  Op: % [type int] [line: 6]
!   !   !   !   Child: 0  Id: c [type int] [line: 6]
!   !   !   !   Child: 1  Id: numSuits [type int] [line: 6]
Sibling: 10  Func pips returns type int [type int] [line: 7]
!   Child: 0  Param c of type int [type int] [line: 7]
!   Child: 1  Compound [type void] [line: 7]
!   !   Child: 1  Return [type void] [line: 7]
!   !   !   Child: 0  Op: / [type int] [line: 7]
!   !   !   !   Child: 0  Id: c [type int] [line: 7]
!   !   !   !   Child: 1  Id: numSuits [type int] [line: 7]
Sibling: 11  Func p returns type bool [type bool] [line: 9]
!   Child: 0  Param a of type int [type int] [line: 9]
!   Sibling: 0  Param b of type int [type int] [line: 9]
!   Child: 1  Compound [type void] [line: 9]
!   !   Child: 1  Return [type void] [line: 9]
!   !   !   Child: 0  Op: == [type bool] [line: 9]
!   !   !   !   Child: 0  Call: pips [type int] [line: 9]
!   !   !   !   !   Child: 0  Id: a [type int] [line: 9]
!   !   !   !   Child: 1  Call: pips [type int] [line: 9]
!   !   !   !   !   Child: 0  Id: b [type int] [line: 9]
Sibling: 12  Func ppp returns type bool [type bool] [line: 10]
!   Child: 0  Param a of type int [type int] [line: 10]
!   Sibling: 0  Param b of type int [type int] [line: 10]
!   Sibling: 1  Param c of type int [type int] [line: 10]
!   Child: 1  Compound [type void] [line: 10]
!   !   Child: 1  Return [type void] [line: 10]
!   !   !   Child: 0  Op: and [type bool] [line: 10]
!   !   !   !   Child: 0  Call: p [type bool] [line: 10]
!   !   !   !   !   Child: 0  Id: a [type int] [line: 10]
!   !   !   !   !   Sibling: 0  Id: b [type int] [line: 10]
!   !   !   !   Child: 1  Call: p [type bool] [line: 10]
!   !   !   !   !   Child: 0  Id: b [type int] [line: 10]
!   !   !   !   !   Sibling: 0  Id: c [type int] [line: 10]
Sibling: 13  Func pppp returns type bool [type bool] [line: 11]
!   Child: 0  Param a of type int [type int] [line: 11]
!   Sibling: 0  Param b of type int [type int] [line: 11]
!   Sibling: 1  Param c of type int [type int] [line: 11]
!   Sibling: 2  Param d of type int [type int] [line: 11]
!   Child: 1  Compound [type void] [line: 11]
!   !   Child: 1  Return [type void] [line: 11]
!   !   !   Child: 0  Op: and [type bool] [line: 11]
!   !   !   !   Child: 0  Op: and [type bool] [line: 11]
!   !   !   !   !   Child: 0  Call: p [type bool] [line: 11]
!   !   !   !   !   !   Child: 0  Id: a [type int] [line: 11]
!   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 11]
!   !   !   !   !   Child: 1  Call: p [type bool] [line: 11]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 11]
!   !   !   !   !   !   Sibling: 0  Id: c [type int] [line: 11]
!   !   !   !   Child: 1  Call: p [type bool] [line: 11]
!   !   !   !   !   Child: 0  Id: c [type int] [line: 11]
!   !   !   !   !   Sibling: 0  Id: d [type int] [line: 11]
Sibling: 14  Func handtype returns type int [type int] [line: 13]
!   Child: 0  Param a of type int [type int] [line: 13]
!   Sibling: 0  Param b of type int [type int] [line: 13]
!   Sibling: 1  Param c of type int [type int] [line: 13]
!   Sibling: 2  Param d of type int [type int] [line: 13]
!   Sibling: 3  Param e of type int [type int] [line: 13]
!   Child: 1  Compound [type void] [line: 14]
!   !   Child: 0  Var isflush of type bool [type bool] [line: 15]
!   !   Child: 1  Assign: = [type bool] [line: 17]
!   !   !   Child: 0  Id: isflush [type bool] [line: 17]
!   !   !   Child: 1  Op: and [type bool] [line: 19]
!   !   !   !   Child: 0  Op: and [type bool] [line: 18]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 17]
!   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 17]
!   !   !   !   !   !   !   Child: 0  Call: suit [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Call: suit [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 18]
!   !   !   !   !   !   !   Child: 0  Call: suit [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Call: suit [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 18]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 19]
!   !   !   !   !   !   Child: 0  Call: suit [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 19]
!   !   !   !   !   !   Child: 1  Call: suit [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 19]
!   !   !   !   Child: 1  Op: == [type bool] [line: 20]
!   !   !   !   !   Child: 0  Call: suit [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: a [type int] [line: 20]
!   !   !   !   !   Child: 1  Call: suit [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: e [type int] [line: 20]
!   !   Sibling: 0  If [type void] [line: 23]
!   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   !   !   Child: 0  Id: isflush [type bool] [line: 23]
!   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 23]
!   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 23]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 23]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 23]
!   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 23]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 23]
!   !   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 23]
!   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 23]
!   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   Child: 0  Call: pips [type int] [line: 23]
!   !   !   !   !   !   Child: 0  Id: e [type int] [line: 23]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 23]
!   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 23]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 23]
!   !   !   Child: 1  Return [type void] [line: 24]
!   !   !   !   Child: 0  Const: 0 [type int] [line: 24]
!   !   !   Child: 2  If [type void] [line: 27]
!   !   !   !   Child: 0  Op: and [type bool] [line: 27]
!   !   !   !   !   Child: 0  Id: isflush [type bool] [line: 27]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 27]
!   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 27]
!   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 27]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 27]
!   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 27]
!   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 27]
!   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 27]
!   !   !   !   Child: 1  Return [type void] [line: 28]
!   !   !   !   !   Child: 0  Const: 1 [type int] [line: 28]
!   !   !   !   Child: 2  If [type void] [line: 31]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 31]
!   !   !   !   !   !   Child: 0  Call: pppp [type bool] [line: 31]
!   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 1  Id: c [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 2  Id: d [type int] [line: 31]
!   !   !   !   !   !   Child: 1  Call: pppp [type bool] [line: 31]
!   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 0  Id: c [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 1  Id: d [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 2  Id: e [type int] [line: 31]
!   !   !   !   !   Child: 1  Return [type void] [line: 32]
!   !   !   !   !   !   Child: 0  Const: 2 [type int] [line: 32]
!   !   !   !   !   Child: 2  If [type void] [line: 35]
!   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 35]
!   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 35]
!   !   !   !   !   !   !   !   Child: 0  Call: ppp [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 1  Id: c [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: e [type int] [line: 35]
!   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 35]
!   !   !   !   !   !   !   !   Child: 0  Call: p [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 1  Call: ppp [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: d [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 1  Id: e [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Return [type void] [line: 36]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 36]
!   !   !   !   !   !   Child: 2  If [type void] [line: 39]
!   !   !   !   !   !   !   Child: 0  Id: isflush [type bool] [line: 39]
!   !   !   !   !   !   !   Child: 1  Return [type void] [line: 40]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 40]
!   !   !   !   !   !   !   Child: 2  If [type void] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 45]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 5 [type int] [line: 45]
!   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 48]
!   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: ppp [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: c [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: ppp [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: d [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   Child: 1  Call: ppp [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: e [type int] [line: 48]
!   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 49]
!   !   !   !   !   !   !   !   !   !   Child: 0  Const: 6 [type int] [line: 49]
!   !   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 52]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 53]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 7 [type int] [line: 53]
!   !   !   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 57]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 8 [type int] [line: 57]
!   !   !   !   !   !   !   !   !   !   !   Child: 2  Return [type void] [line: 59]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 9 [type int] [line: 59]
Sibling: 15  Func main returns type int [type int] [line: 62]
!   Child: 1  Compound [type void] [line: 63]
!   !   Child: 0  Var hands is array of type int [type int] [line: 64]
!   !   Sibling: 0  Var a of type int [type int] [line: 65]
!   !   Sibling: 1  Var b of type int [type int] [line: 65]
!   !   Sibling: 2  Var c of type int [type int] [line: 65]
!   !   Sibling: 3  Var d of type int [type int] [line: 65]
!   !   Sibling: 4  Var e of type int [type int] [line: 65]
!   !   Sibling: 5  Var h of type int [type int] [line: 65]
!   !   Sibling: 6  Var possible of type int [type int] [line: 65]
!   !   Sibling: 7  Var i of type int [type int] [line: 65]
!   !   Child: 1  Assign: = [type int] [line: 67]
!   !   !   Child: 0  Id: i [type int] [line: 67]
!   !   !   Child: 1  Const: 0 [type int] [line: 67]
!   !   Sibling: 0  While [type void] [line: 68]
!   !   !   Child: 0  Op: < [type bool] [line: 68]
!   !   !   !   Child: 0  Id: i [type int] [line: 68]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 68]
!   !   !   Child: 1  Compound [type void] [line: 68]
!   !   !   !   Child: 1  Assign: = [type int] [line: 69]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 69]
!   !   !   !   !   !   Child: 0  Id: hands [type int] [line: 69]
!   !   !   !   !   !   Child: 1  Id: i [type int] [line: 69]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 69]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 70]
!   !   !   !   !   Child: 0  Id: i [type int] [line: 70]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 70]
!   !   !   !   !   !   Child: 0  Id: i [type int] [line: 70]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 70]
!   !   Sibling: 1  Assign: = [type int] [line: 73]
!   !   !   Child: 0  Id: numSuits [type int] [line: 73]
!   !   !   Child: 1  Const: 4 [type int] [line: 73]
!   !   Sibling: 2  Assign: = [type int] [line: 74]
!   !   !   Child: 0  Id: numPips [type int] [line: 74]
!   !   !   Child: 1  Const: 5 [type int] [line: 74]
!   !   Sibling: 3  Assign: = [type int] [line: 75]
!   !   !   Child: 0  Id: numCards [type int] [line: 75]
!   !   !   Child: 1  Op: - [type int] [line: 75]
!   !   !   !   Child: 0  Op: * [type int] [line: 75]
!   !   !   !   !   Child: 0  Id: numPips [type int] [line: 75]
!   !   !   !   !   Child: 1  Id: numSuits [type int] [line: 75]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 75]
!   !   Sibling: 4  Assign: = [type int] [line: 77]
!   !   !   Child: 0  Id: possible [type int] [line: 77]
!   !   !   Child: 1  Const: 0 [type int] [line: 77]
!   !   Sibling: 5  Assign: = [type int] [line: 78]
!   !   !   Child: 0  Id: a [type int] [line: 78]
!   !   !   Child: 1  Const: 0 [type int] [line: 78]
!   !   Sibling: 6  While [type void] [line: 79]
!   !   !   Child: 0  Op: <= [type bool] [line: 79]
!   !   !   !   Child: 0  Id: a [type int] [line: 79]
!   !   !   !   Child: 1  Id: numCards [type int] [line: 79]
!   !   !   Child: 1  Compound [type void] [line: 79]
!   !   !   !   Child: 1  Call: output [type void] [line: 80]
!   !   !   !   !   Child: 0  Id: a [type int] [line: 80]
!   !   !   !   Sibling: 0  Call: outnl [type void] [line: 80]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 81]
!   !   !   !   !   Child: 0  Id: b [type int] [line: 81]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 81]
!   !   !   !   !   !   Child: 0  Id: a [type int] [line: 81]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 81]
!   !   !   !   Sibling: 2  While [type void] [line: 82]
!   !   !   !   !   Child: 0  Op: <= [type bool] [line: 82]
!   !   !   !   !   !   Child: 0  Id: b [type int] [line: 82]
!   !   !   !   !   !   Child: 1  Id: numCards [type int] [line: 82]
!   !   !   !   !   Child: 1  Compound [type void] [line: 82]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 83]
!   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 83]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 83]
!   !   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 83]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 83]
!   !   !   !   !   !   Sibling: 0  While [type void] [line: 84]
!   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 84]
!   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 84]
!   !   !   !   !   !   !   !   Child: 1  Id: numCards [type int] [line: 84]
!   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 84]
!   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 85]
!   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 85]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 85]
!   !   !   !   !   !   !   !   Sibling: 0  While [type void] [line: 86]
!   !   !   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: numCards [type int] [line: 86]
!   !   !   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   Sibling: 0  While [type void] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: numCards [type int] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: possible [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: possible [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: h [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: handtype [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: c [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 2  Id: d [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 3  Id: e [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Assign: = [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: hands [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: h [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: hands [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: h [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 2  Assign: ++ [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d [type int] [line: 94]
!   !   !   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 96]
!   !   !   !   !   !   !   !   !   Child: 0  Id: c [type int] [line: 96]
!   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 98]
!   !   !   !   !   !   !   Child: 0  Id: b [type int] [line: 98]
!   !   !   !   Sibling: 3  Assign: ++ [type int] [line: 100]
!   !   !   !   !   Child: 0  Id: a [type int] [line: 100]
!   !   Sibling: 7  Assign: = [type int] [line: 102]
!   !   !   Child: 0  Id: h [type int] [line: 102]
!   !   !   Child: 1  Const: 0 [type int] [line: 102]
!   !   Sibling: 8  While [type void] [line: 103]
!   !   !   Child: 0  Op: < [type bool] [line: 103]
!   !   !   !   Child: 0  Id: h [type int] [line: 103]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 103]
!   !   !   Child: 1  Compound [type void] [line: 103]
!   !   !   !   Child: 1  Call: output [type void] [line: 105]
!   !   !   !   !   Child: 0  Id: h [type int] [line: 105]
!   !   !   !   Sibling: 0  Call: output [type void] [line: 106]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 106]
!   !   !   !   !   !   Child: 0  Id: hands [type int] [line: 106]
!   !   !   !   !   !   Child: 1  Id: h [type int] [line: 106]
!   !   !   !   Sibling: 1  Call: outnl [type void] [line: 107]
!   !   !   !   Sibling: 2  Assign: = [type int] [line: 108]
!   !   !   !   !   Child: 0  Id: h [type int] [line: 108]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 108]
!   !   !   !   !   !   Child: 0  Id: h [type int] [line: 108]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 108]
!   !   Sibling: 9  Return [type void] [line: 111]
!   !   !   Child: 0  Const: 0 [type int] [line: 111]
Number of warnings: 0
Number of errors: 0
