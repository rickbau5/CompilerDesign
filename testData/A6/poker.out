Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var numSuits  [ref: Global, size: 1, loc: 0] [type int] [line: 4]
Sibling: 7  Var numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 4]
Sibling: 8  Var numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 4]
Sibling: 9  Func suit returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 6]
!   Child: 0  Param c  [ref: Param, size: 1, loc: -2] [type int] [line: 6]
!   Child: 1  Compound [type void] [line: 6]
!   !   Child: 1  Return [type void] [line: 6]
!   !   !   Child: 0  Op: % [type int] [line: 6]
!   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -2] [type int] [line: 6]
!   !   !   !   Child: 1  Id: numSuits  [ref: Global, size: 1, loc: 0] [type int] [line: 6]
Sibling: 10  Func pips returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 7]
!   Child: 0  Param c  [ref: Param, size: 1, loc: -2] [type int] [line: 7]
!   Child: 1  Compound [type void] [line: 7]
!   !   Child: 1  Return [type void] [line: 7]
!   !   !   Child: 0  Op: / [type int] [line: 7]
!   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -2] [type int] [line: 7]
!   !   !   !   Child: 1  Id: numSuits  [ref: Global, size: 1, loc: 0] [type int] [line: 7]
Sibling: 11  Func p returns type bool [ref: Global, size: -4, loc: 0] [type bool] [line: 9]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 9]
!   Sibling: 0  Param b  [ref: Param, size: 1, loc: -3] [type int] [line: 9]
!   Child: 1  Compound [type void] [line: 9]
!   !   Child: 1  Return [type void] [line: 9]
!   !   !   Child: 0  Op: == [type bool] [line: 9]
!   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 9]
!   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 9]
!   !   !   !   Child: 1  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 9]
!   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 9]
Sibling: 12  Func ppp returns type bool [ref: Global, size: -5, loc: 0] [type bool] [line: 10]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 10]
!   Sibling: 0  Param b  [ref: Param, size: 1, loc: -3] [type int] [line: 10]
!   Sibling: 1  Param c  [ref: Param, size: 1, loc: -4] [type int] [line: 10]
!   Child: 1  Compound [type void] [line: 10]
!   !   Child: 1  Return [type void] [line: 10]
!   !   !   Child: 0  Op: and [type bool] [line: 10]
!   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 10]
!   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 10]
!   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 10]
!   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 10]
!   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 10]
!   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 10]
Sibling: 13  Func pppp returns type bool [ref: Global, size: -6, loc: 0] [type bool] [line: 11]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 11]
!   Sibling: 0  Param b  [ref: Param, size: 1, loc: -3] [type int] [line: 11]
!   Sibling: 1  Param c  [ref: Param, size: 1, loc: -4] [type int] [line: 11]
!   Sibling: 2  Param d  [ref: Param, size: 1, loc: -5] [type int] [line: 11]
!   Child: 1  Compound [type void] [line: 11]
!   !   Child: 1  Return [type void] [line: 11]
!   !   !   Child: 0  Op: and [type bool] [line: 11]
!   !   !   !   Child: 0  Op: and [type bool] [line: 11]
!   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 11]
!   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 11]
!   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 11]
!   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 11]
!   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 11]
!   !   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 11]
!   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 11]
!   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 11]
!   !   !   !   !   Sibling: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 11]
Sibling: 14  Func handtype returns type int [ref: Global, size: -8, loc: 0] [type int] [line: 13]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 13]
!   Sibling: 0  Param b  [ref: Param, size: 1, loc: -3] [type int] [line: 13]
!   Sibling: 1  Param c  [ref: Param, size: 1, loc: -4] [type int] [line: 13]
!   Sibling: 2  Param d  [ref: Param, size: 1, loc: -5] [type int] [line: 13]
!   Sibling: 3  Param e  [ref: Param, size: 1, loc: -6] [type int] [line: 13]
!   Child: 1  Compound [type void] [line: 14]
!   !   Child: 0  Var isflush  [ref: Local, size: 1, loc: -7] [type bool] [line: 15]
!   !   Child: 1  Assign: = [type bool] [line: 17]
!   !   !   Child: 0  Id: isflush  [ref: Local, size: 1, loc: -7] [type bool] [line: 17]
!   !   !   Child: 1  Op: and [type bool] [line: 19]
!   !   !   !   Child: 0  Op: and [type bool] [line: 18]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 17]
!   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 17]
!   !   !   !   !   !   !   Child: 0  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   !   !   !   !   !   !   Child: 1  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 17]
!   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 17]
!   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 18]
!   !   !   !   !   !   !   Child: 0  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 18]
!   !   !   !   !   !   !   Child: 1  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 18]
!   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 18]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 19]
!   !   !   !   !   !   Child: 0  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 19]
!   !   !   !   !   !   Child: 1  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 19]
!   !   !   !   Child: 1  Op: == [type bool] [line: 20]
!   !   !   !   !   Child: 0  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 20]
!   !   !   !   !   Child: 1  Call: suit [ref: None, size: -3, loc: 0] [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 20]
!   !   Sibling: 0  If [type void] [line: 23]
!   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   !   Child: 0  Op: and [type bool] [line: 23]
!   !   !   !   !   !   Child: 0  Id: isflush  [ref: Local, size: 1, loc: -7] [type bool] [line: 23]
!   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 23]
!   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 23]
!   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 23]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 23]
!   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 23]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 23]
!   !   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 23]
!   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 23]
!   !   !   !   Child: 1  Op: == [type bool] [line: 23]
!   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 23]
!   !   !   !   !   !   Child: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 23]
!   !   !   !   !   Child: 1  Op: - [type int] [line: 23]
!   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 23]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 23]
!   !   !   Child: 1  Return [type void] [line: 24]
!   !   !   !   Child: 0  Const: 0 [type int] [line: 24]
!   !   !   Child: 2  If [type void] [line: 27]
!   !   !   !   Child: 0  Op: and [type bool] [line: 27]
!   !   !   !   !   Child: 0  Id: isflush  [ref: Local, size: 1, loc: -7] [type bool] [line: 27]
!   !   !   !   !   Child: 1  Op: == [type bool] [line: 27]
!   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 27]
!   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 27]
!   !   !   !   !   !   Child: 1  Op: - [type int] [line: 27]
!   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 27]
!   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 27]
!   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 27]
!   !   !   !   Child: 1  Return [type void] [line: 28]
!   !   !   !   !   Child: 0  Const: 1 [type int] [line: 28]
!   !   !   !   Child: 2  If [type void] [line: 31]
!   !   !   !   !   Child: 0  Op: or [type bool] [line: 31]
!   !   !   !   !   !   Child: 0  Call: pppp [ref: None, size: -6, loc: 0] [type bool] [line: 31]
!   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 1  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 2  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 31]
!   !   !   !   !   !   Child: 1  Call: pppp [ref: None, size: -6, loc: 0] [type bool] [line: 31]
!   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 1  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 31]
!   !   !   !   !   !   !   Sibling: 2  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 31]
!   !   !   !   !   Child: 1  Return [type void] [line: 32]
!   !   !   !   !   !   Child: 0  Const: 2 [type int] [line: 32]
!   !   !   !   !   Child: 2  If [type void] [line: 35]
!   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 35]
!   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 35]
!   !   !   !   !   !   !   !   Child: 0  Call: ppp [ref: None, size: -5, loc: 0] [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 1  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 35]
!   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 35]
!   !   !   !   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 35]
!   !   !   !   !   !   !   !   Child: 1  Call: ppp [ref: None, size: -5, loc: 0] [type bool] [line: 35]
!   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 35]
!   !   !   !   !   !   !   !   !   Sibling: 1  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 35]
!   !   !   !   !   !   Child: 1  Return [type void] [line: 36]
!   !   !   !   !   !   !   Child: 0  Const: 3 [type int] [line: 36]
!   !   !   !   !   !   Child: 2  If [type void] [line: 39]
!   !   !   !   !   !   !   Child: 0  Id: isflush  [ref: Local, size: 1, loc: -7] [type bool] [line: 39]
!   !   !   !   !   !   !   Child: 1  Return [type void] [line: 40]
!   !   !   !   !   !   !   !   Child: 0  Const: 4 [type int] [line: 40]
!   !   !   !   !   !   !   Child: 2  If [type void] [line: 43]
!   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 43]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 43]
!   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 0 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 4 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   Child: 1  Op: == [type bool] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: pips [ref: None, size: -3, loc: 0] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: - [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 44]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 44]
!   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 45]
!   !   !   !   !   !   !   !   !   Child: 0  Const: 5 [type int] [line: 45]
!   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 48]
!   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: ppp [ref: None, size: -5, loc: 0] [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: ppp [ref: None, size: -5, loc: 0] [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   Child: 1  Call: ppp [ref: None, size: -5, loc: 0] [type bool] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 48]
!   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 49]
!   !   !   !   !   !   !   !   !   !   Child: 0  Const: 6 [type int] [line: 49]
!   !   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 52]
!   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: and [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 52]
!   !   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 53]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 7 [type int] [line: 53]
!   !   !   !   !   !   !   !   !   !   Child: 2  If [type void] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: or [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: p [ref: None, size: -4, loc: 0] [type bool] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Param, size: 1, loc: -5] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: e  [ref: Param, size: 1, loc: -6] [type int] [line: 56]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Return [type void] [line: 57]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 8 [type int] [line: 57]
!   !   !   !   !   !   !   !   !   !   !   Child: 2  Return [type void] [line: 59]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Const: 9 [type int] [line: 59]
Sibling: 15  Func main returns type int [ref: Global, size: -21, loc: 0] [type int] [line: 62]
!   Child: 1  Compound [type void] [line: 63]
!   !   Child: 0  Var hands is array  [ref: Local, size: 11, loc: -3] [type int] [line: 64]
!   !   Sibling: 0  Var a  [ref: Local, size: 1, loc: -13] [type int] [line: 65]
!   !   Sibling: 1  Var b  [ref: Local, size: 1, loc: -14] [type int] [line: 65]
!   !   Sibling: 2  Var c  [ref: Local, size: 1, loc: -15] [type int] [line: 65]
!   !   Sibling: 3  Var d  [ref: Local, size: 1, loc: -16] [type int] [line: 65]
!   !   Sibling: 4  Var e  [ref: Local, size: 1, loc: -17] [type int] [line: 65]
!   !   Sibling: 5  Var h  [ref: Local, size: 1, loc: -18] [type int] [line: 65]
!   !   Sibling: 6  Var possible  [ref: Local, size: 1, loc: -19] [type int] [line: 65]
!   !   Sibling: 7  Var i  [ref: Local, size: 1, loc: -20] [type int] [line: 65]
!   !   Child: 1  Assign: = [type int] [line: 67]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -20] [type int] [line: 67]
!   !   !   Child: 1  Const: 0 [type int] [line: 67]
!   !   Sibling: 0  While [type void] [line: 68]
!   !   !   Child: 0  Op: < [type bool] [line: 68]
!   !   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -20] [type int] [line: 68]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 68]
!   !   !   Child: 1  Compound [type void] [line: 68]
!   !   !   !   Child: 1  Assign: = [type int] [line: 69]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 69]
!   !   !   !   !   !   Child: 0  Id: hands is array  [ref: Local, size: 11, loc: -3] [type int] [line: 69]
!   !   !   !   !   !   Child: 1  Id: i  [ref: Local, size: 1, loc: -20] [type int] [line: 69]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 69]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 70]
!   !   !   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -20] [type int] [line: 70]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 70]
!   !   !   !   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -20] [type int] [line: 70]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 70]
!   !   Sibling: 1  Assign: = [type int] [line: 73]
!   !   !   Child: 0  Id: numSuits  [ref: Global, size: 1, loc: 0] [type int] [line: 73]
!   !   !   Child: 1  Const: 4 [type int] [line: 73]
!   !   Sibling: 2  Assign: = [type int] [line: 74]
!   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 74]
!   !   !   Child: 1  Const: 5 [type int] [line: 74]
!   !   Sibling: 3  Assign: = [type int] [line: 75]
!   !   !   Child: 0  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 75]
!   !   !   Child: 1  Op: - [type int] [line: 75]
!   !   !   !   Child: 0  Op: * [type int] [line: 75]
!   !   !   !   !   Child: 0  Id: numPips  [ref: Global, size: 1, loc: -1] [type int] [line: 75]
!   !   !   !   !   Child: 1  Id: numSuits  [ref: Global, size: 1, loc: 0] [type int] [line: 75]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 75]
!   !   Sibling: 4  Assign: = [type int] [line: 77]
!   !   !   Child: 0  Id: possible  [ref: Local, size: 1, loc: -19] [type int] [line: 77]
!   !   !   Child: 1  Const: 0 [type int] [line: 77]
!   !   Sibling: 5  Assign: = [type int] [line: 78]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 78]
!   !   !   Child: 1  Const: 0 [type int] [line: 78]
!   !   Sibling: 6  While [type void] [line: 79]
!   !   !   Child: 0  Op: <= [type bool] [line: 79]
!   !   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 79]
!   !   !   !   Child: 1  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 79]
!   !   !   Child: 1  Compound [type void] [line: 79]
!   !   !   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 80]
!   !   !   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 80]
!   !   !   !   Sibling: 0  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 80]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 81]
!   !   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -14] [type int] [line: 81]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 81]
!   !   !   !   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 81]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 81]
!   !   !   !   Sibling: 2  While [type void] [line: 82]
!   !   !   !   !   Child: 0  Op: <= [type bool] [line: 82]
!   !   !   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -14] [type int] [line: 82]
!   !   !   !   !   !   Child: 1  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 82]
!   !   !   !   !   Child: 1  Compound [type void] [line: 82]
!   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 83]
!   !   !   !   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -15] [type int] [line: 83]
!   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 83]
!   !   !   !   !   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -14] [type int] [line: 83]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 83]
!   !   !   !   !   !   Sibling: 0  While [type void] [line: 84]
!   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 84]
!   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -15] [type int] [line: 84]
!   !   !   !   !   !   !   !   Child: 1  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 84]
!   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 84]
!   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 85]
!   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -16] [type int] [line: 85]
!   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -15] [type int] [line: 85]
!   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 85]
!   !   !   !   !   !   !   !   Sibling: 0  While [type void] [line: 86]
!   !   !   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -16] [type int] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 1  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 86]
!   !   !   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 86]
!   !   !   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Local, size: 1, loc: -17] [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -16] [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 87]
!   !   !   !   !   !   !   !   !   !   Sibling: 0  While [type void] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: <= [type bool] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Local, size: 1, loc: -17] [type int] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: numCards  [ref: Global, size: 1, loc: -2] [type int] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   Child: 1  Compound [type void] [line: 88]
!   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Assign: = [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: possible  [ref: Local, size: 1, loc: -19] [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: possible  [ref: Local, size: 1, loc: -19] [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 89]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Assign: = [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Call: handtype [ref: None, size: -8, loc: 0] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 0  Id: b  [ref: Local, size: 1, loc: -14] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Id: c  [ref: Local, size: 1, loc: -15] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 2  Id: d  [ref: Local, size: 1, loc: -16] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Sibling: 3  Id: e  [ref: Local, size: 1, loc: -17] [type int] [line: 90]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 1  Assign: = [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: hands is array  [ref: Local, size: 11, loc: -3] [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Op: + [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Op: [ [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: hands is array  [ref: Local, size: 11, loc: -3] [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 91]
!   !   !   !   !   !   !   !   !   !   !   !   Sibling: 2  Assign: ++ [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: e  [ref: Local, size: 1, loc: -17] [type int] [line: 92]
!   !   !   !   !   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 94]
!   !   !   !   !   !   !   !   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -16] [type int] [line: 94]
!   !   !   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 96]
!   !   !   !   !   !   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -15] [type int] [line: 96]
!   !   !   !   !   !   Sibling: 1  Assign: ++ [type int] [line: 98]
!   !   !   !   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -14] [type int] [line: 98]
!   !   !   !   Sibling: 3  Assign: ++ [type int] [line: 100]
!   !   !   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -13] [type int] [line: 100]
!   !   Sibling: 7  Assign: = [type int] [line: 102]
!   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 102]
!   !   !   Child: 1  Const: 0 [type int] [line: 102]
!   !   Sibling: 8  While [type void] [line: 103]
!   !   !   Child: 0  Op: < [type bool] [line: 103]
!   !   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 103]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 103]
!   !   !   Child: 1  Compound [type void] [line: 103]
!   !   !   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 105]
!   !   !   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 105]
!   !   !   !   Sibling: 0  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 106]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 106]
!   !   !   !   !   !   Child: 0  Id: hands is array  [ref: Local, size: 11, loc: -3] [type int] [line: 106]
!   !   !   !   !   !   Child: 1  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 106]
!   !   !   !   Sibling: 1  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 107]
!   !   !   !   Sibling: 2  Assign: = [type int] [line: 108]
!   !   !   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 108]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 108]
!   !   !   !   !   !   Child: 0  Id: h  [ref: Local, size: 1, loc: -18] [type int] [line: 108]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 108]
!   !   Sibling: 9  Return [type void] [line: 111]
!   !   !   Child: 0  Const: 0 [type int] [line: 111]
Offset for end of global space: -3
Number of warnings: 0
Number of errors: 0
