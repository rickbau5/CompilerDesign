Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func min returns type int [ref: Global, size: -4, loc: 0] [type int] [line: 1]
!   Child: 0  Param x  [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   Sibling: 0  Param y  [ref: Param, size: 1, loc: -3] [type int] [line: 1]
!   Child: 1  If [type void] [line: 1]
!   !   Child: 0  Op: > [type bool] [line: 1]
!   !   !   Child: 0  Id: x  [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   !   !   Child: 1  Id: y  [ref: Param, size: 1, loc: -3] [type int] [line: 1]
!   !   Child: 1  Return [type void] [line: 1]
!   !   !   Child: 0  Id: y  [ref: Param, size: 1, loc: -3] [type int] [line: 1]
!   !   Child: 2  Return [type void] [line: 1]
!   !   !   Child: 0  Id: x  [ref: Param, size: 1, loc: -2] [type int] [line: 1]
Sibling: 7  Func f returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 2]
!   Child: 0  Param n  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
!   Child: 1  If [type void] [line: 2]
!   !   Child: 0  Op: <= [type bool] [line: 2]
!   !   !   Child: 0  Id: n  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
!   !   !   Child: 1  Const: 2 [type int] [line: 2]
!   !   Child: 1  Return [type void] [line: 2]
!   !   !   Child: 0  Const: 1 [type int] [line: 2]
!   !   Child: 2  Return [type void] [line: 2]
!   !   !   Child: 0  Op: + [type int] [line: 2]
!   !   !   !   Child: 0  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 2]
!   !   !   !   !   Child: 0  Op: - [type int] [line: 2]
!   !   !   !   !   !   Child: 0  Id: n  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
!   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 2]
!   !   !   !   Child: 1  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 2]
!   !   !   !   !   Child: 0  Op: - [type int] [line: 2]
!   !   !   !   !   !   Child: 0  Id: n  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 2]
Sibling: 8  Func g returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 3]
!   Child: 0  Param n  [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   Child: 1  Return [type void] [line: 3]
!   !   Child: 0  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 3]
!   !   !   Child: 0  Call: min [ref: None, size: -4, loc: 0] [type int] [line: 3]
!   !   !   !   Child: 0  Const: 10 [type int] [line: 3]
!   !   !   !   Sibling: 0  Op: - [type int] [line: 3]
!   !   !   !   !   Child: 0  Op: * [type int] [line: 3]
!   !   !   !   !   !   Child: 0  Const: 666 [type int] [line: 3]
!   !   !   !   !   !   Child: 1  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 3]
!   !   !   !   !   !   !   Child: 0  Id: n  [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   !   !   !   !   Child: 1  Op: * [type int] [line: 3]
!   !   !   !   !   !   Child: 0  Const: 777 [type int] [line: 3]
!   !   !   !   !   !   Child: 1  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 3]
!   !   !   !   !   !   !   Child: 0  Op: + [type int] [line: 3]
!   !   !   !   !   !   !   !   Child: 0  Id: n  [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   !   !   !   !   !   !   !   Child: 1  Const: 1 [type int] [line: 3]
Sibling: 9  Func main returns type void [ref: Global, size: -2, loc: 0] [type void] [line: 5]
!   Child: 1  Compound [type void] [line: 6]
!   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 7]
!   !   !   Child: 0  Op: + [type int] [line: 7]
!   !   !   !   Child: 0  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 7]
!   !   !   !   !   Child: 0  Const: 2 [type int] [line: 7]
!   !   !   !   Child: 1  Call: f [ref: None, size: -3, loc: 0] [type int] [line: 7]
!   !   !   !   !   Child: 0  Const: 3 [type int] [line: 7]
!   !   Sibling: 0  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 7]
!   !   Sibling: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 8]
!   !   !   Child: 0  Call: g [ref: None, size: -3, loc: 0] [type int] [line: 8]
!   !   !   !   Child: 0  Const: 2 [type int] [line: 8]
!   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 8]
!   !   Sibling: 3  If [type void] [line: 9]
!   !   !   Child: 0  Const: false [type bool] [line: 9]
!   !   !   Child: 1  Call: main [ref: None, size: -2, loc: 0] [type void] [line: 9]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
