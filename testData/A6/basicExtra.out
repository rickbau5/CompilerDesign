WARNING(4): Expecting to return type char but function 'toads' has no return statement.
ERROR(15): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(15): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(15): The operation '<' does not work with arrays.
ERROR(16): The operation '<' does not work with arrays.
ERROR(19): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(19): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(20): '/' requires operands of type int but lhs is of type bool.
ERROR(21): '/' requires operands of type int but rhs is of type bool.
ERROR(22): '%' requires operands of type int but lhs is of type bool.
ERROR(23): '%' requires operands of type int but rhs is of type bool.
ERROR(24): '-' requires operands of type int but lhs is of type bool.
ERROR(25): '-' requires operands of type int but rhs is of type bool.
ERROR(26): '<' requires operands of type char or type int but lhs is of type void.
ERROR(26): '<' requires operands of type char or type int but rhs is of type void.
ERROR(28): '<' requires operands of type char or type int but lhs is of type void.
ERROR(29): '<' requires operands of type char or type int but rhs is of type void.
ERROR(31): Symbol 'k' is not defined.
ERROR(32): Symbol 'k' is not defined.
ERROR(33): Symbol 'k' is not defined.
ERROR(33): Symbol 'k' is not defined.
ERROR(34): Function 'k' is not defined.
ERROR(35): 'i' is a simple variable and cannot be called.
Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func frogs returns type void [ref: Global, size: -2, loc: 0] [type void] [line: 3]
Sibling: 7  Func toads returns type char [ref: Global, size: -2, loc: 0] [type char] [line: 4]
Sibling: 8  Func main returns type void [ref: Global, size: -30, loc: 0] [type void] [line: 6]
!   Child: 1  Compound [type void] [line: 7]
!   !   Child: 0  Var ii is array  [ref: Local, size: 6, loc: -3] [type int] [line: 8]
!   !   Sibling: 0  Var jj is array  [ref: Local, size: 6, loc: -9] [type int] [line: 8]
!   !   Sibling: 1  Var aa is array  [ref: Local, size: 6, loc: -15] [type bool] [line: 9]
!   !   Sibling: 2  Var bb is array  [ref: Local, size: 6, loc: -21] [type bool] [line: 9]
!   !   Sibling: 3  Var i  [ref: Local, size: 1, loc: -26] [type int] [line: 10]
!   !   Sibling: 4  Var j  [ref: Local, size: 1, loc: -27] [type int] [line: 10]
!   !   Sibling: 5  Var a  [ref: Local, size: 1, loc: -28] [type bool] [line: 11]
!   !   Sibling: 6  Var b  [ref: Local, size: 1, loc: -29] [type bool] [line: 11]
!   !   Child: 1  Assign: = [type bool] [line: 13]
!   !   !   Child: 0  Id: aa is array  [ref: Local, size: 6, loc: -15] [type bool] [line: 13]
!   !   !   Child: 1  Id: bb is array  [ref: Local, size: 6, loc: -21] [type bool] [line: 13]
!   !   Sibling: 0  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: ii is array  [ref: Local, size: 6, loc: -3] [type int] [line: 14]
!   !   !   Child: 1  Id: jj is array  [ref: Local, size: 6, loc: -9] [type int] [line: 14]
!   !   Sibling: 1  Op: < [type bool] [line: 15]
!   !   !   Child: 0  Id: aa is array  [ref: Local, size: 6, loc: -15] [type bool] [line: 15]
!   !   !   Child: 1  Id: bb is array  [ref: Local, size: 6, loc: -21] [type bool] [line: 15]
!   !   Sibling: 2  Op: < [type bool] [line: 16]
!   !   !   Child: 0  Id: ii is array  [ref: Local, size: 6, loc: -3] [type int] [line: 16]
!   !   !   Child: 1  Id: jj is array  [ref: Local, size: 6, loc: -9] [type int] [line: 16]
!   !   Sibling: 3  Op: == [type bool] [line: 17]
!   !   !   Child: 0  Id: aa is array  [ref: Local, size: 6, loc: -15] [type bool] [line: 17]
!   !   !   Child: 1  Id: bb is array  [ref: Local, size: 6, loc: -21] [type bool] [line: 17]
!   !   Sibling: 4  Op: == [type bool] [line: 18]
!   !   !   Child: 0  Id: ii is array  [ref: Local, size: 6, loc: -3] [type int] [line: 18]
!   !   !   Child: 1  Id: jj is array  [ref: Local, size: 6, loc: -9] [type int] [line: 18]
!   !   Sibling: 5  Op: < [type bool] [line: 19]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 19]
!   !   !   Child: 1  Id: b  [ref: Local, size: 1, loc: -29] [type bool] [line: 19]
!   !   Sibling: 6  Op: / [type int] [line: 20]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 20]
!   !   !   Child: 1  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 20]
!   !   Sibling: 7  Op: / [type int] [line: 21]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 21]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 21]
!   !   Sibling: 8  Op: % [type int] [line: 22]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 22]
!   !   !   Child: 1  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 22]
!   !   Sibling: 9  Op: % [type int] [line: 23]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 23]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 23]
!   !   Sibling: 10  Op: - [type int] [line: 24]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 24]
!   !   !   Child: 1  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 24]
!   !   Sibling: 11  Op: - [type int] [line: 25]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 25]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -28] [type bool] [line: 25]
!   !   Sibling: 12  Op: < [type bool] [line: 26]
!   !   !   Child: 0  Call: frogs [ref: None, size: -2, loc: 0] [type void] [line: 26]
!   !   !   Child: 1  Call: frogs [ref: None, size: -2, loc: 0] [type void] [line: 26]
!   !   Sibling: 13  Op: < [type bool] [line: 27]
!   !   !   Child: 0  Call: toads [ref: None, size: -2, loc: 0] [type char] [line: 27]
!   !   !   Child: 1  Call: toads [ref: None, size: -2, loc: 0] [type char] [line: 27]
!   !   Sibling: 14  Op: < [type bool] [line: 28]
!   !   !   Child: 0  Call: frogs [ref: None, size: -2, loc: 0] [type void] [line: 28]
!   !   !   Child: 1  Call: toads [ref: None, size: -2, loc: 0] [type char] [line: 28]
!   !   Sibling: 15  Op: < [type bool] [line: 29]
!   !   !   Child: 0  Call: toads [ref: None, size: -2, loc: 0] [type char] [line: 29]
!   !   !   Child: 1  Call: frogs [ref: None, size: -2, loc: 0] [type void] [line: 29]
!   !   Sibling: 16  Assign: = [type int] [line: 31]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 31]
!   !   !   Child: 1  Op: + [type int] [line: 31]
!   !   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 31]
!   !   !   !   Child: 1  Id: k  [ref: None, size: 1, loc: 0] [undefined type] [line: 31]
!   !   Sibling: 17  Assign: = [type int] [line: 32]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 32]
!   !   !   Child: 1  Op: + [type int] [line: 32]
!   !   !   !   Child: 0  Id: k  [ref: None, size: 1, loc: 0] [undefined type] [line: 32]
!   !   !   !   Child: 1  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 32]
!   !   Sibling: 18  Assign: = [type int] [line: 33]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 33]
!   !   !   Child: 1  Op: + [type int] [line: 33]
!   !   !   !   Child: 0  Id: k  [ref: None, size: 1, loc: 0] [undefined type] [line: 33]
!   !   !   !   Child: 1  Id: k  [ref: None, size: 1, loc: 0] [undefined type] [line: 33]
!   !   Sibling: 19  Assign: = [type int] [line: 34]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 34]
!   !   !   Child: 1  Op: + [type int] [line: 34]
!   !   !   !   Child: 0  Call: k [ref: None, size: 1, loc: 0] [undefined type] [line: 34]
!   !   !   !   Child: 1  Const: 7 [type int] [line: 34]
!   !   Sibling: 20  Assign: = [type int] [line: 35]
!   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -26] [type int] [line: 35]
!   !   !   Child: 1  Op: + [type int] [line: 35]
!   !   !   !   Child: 0  Call: i [ref: None, size: 1, loc: 0] [type int] [line: 35]
!   !   !   !   Child: 1  Const: 8 [type int] [line: 35]
Offset for end of global space: 0
Number of warnings: 1
Number of errors: 22
