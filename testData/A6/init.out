ERROR(2): Symbol 's' is not defined.
ERROR(2): Initializer for variable 's' is not a constant expression.
ERROR(2): Variable 't' is of type int but is being initialized with an expression of type char.
ERROR(2): Variable 'u' is of type int but is being initialized with an expression of type char.
ERROR(9): Initializer for variable 'lenx' is not a constant expression.
Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var s  [ref: Global, size: 1, loc: 0] [type int] [line: 2]
!   Child: 0  Id: s  [ref: None, size: 1, loc: 0] [undefined type] [line: 2]
Sibling: 7  Var t  [ref: Global, size: 1, loc: -1] [type int] [line: 2]
!   Child: 0  Const: '"' [type char] [line: 2]
Sibling: 8  Var u  [ref: Global, size: 1, loc: -2] [type int] [line: 2]
!   Child: 0  Const: ''' [type char] [line: 2]
Sibling: 9  Func main returns type void [ref: Global, size: -85, loc: 0] [type void] [line: 4]
!   Child: 1  Compound [type void] [line: 4]
!   !   Child: 0  Var i  [ref: Local, size: 1, loc: -2] [type int] [line: 5]
!   !   !   Child: 0  Const: 666 [type int] [line: 5]
!   !   Sibling: 0  Var a  [ref: Static, size: 1, loc: -3] [type int] [line: 6]
!   !   !   Child: 0  Const: 666 [type int] [line: 6]
!   !   Sibling: 1  Var y  [ref: Local, size: 1, loc: -3] [type char] [line: 7]
!   !   !   Child: 0  Const: 'a' [type char] [line: 7]
!   !   Sibling: 2  Var b is array  [ref: Local, size: 11, loc: -5] [type char] [line: 7]
!   !   !   Child: 0  Const: 'x' [type char] [line: 7]
!   !   Sibling: 3  Var x is array  [ref: Local, size: 11, loc: -16] [type int] [line: 8]
!   !   Sibling: 4  Var k  [ref: Local, size: 1, loc: -26] [type int] [line: 9]
!   !   !   Child: 0  Op: + [type int] [line: 9]
!   !   !   !   Child: 0  Op: * [type int] [line: 9]
!   !   !   !   !   Child: 0  Const: 4 [type int] [line: 9]
!   !   !   !   !   Child: 1  Const: 5 [type int] [line: 9]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 9]
!   !   Sibling: 5  Var lenx  [ref: Local, size: 1, loc: -27] [type int] [line: 9]
!   !   !   Child: 0  Op: * [type int] [line: 9]
!   !   !   !   Child: 0  Id: x is array  [ref: Local, size: 11, loc: -16] [type int] [line: 9]
!   !   Sibling: 6  Var ba  [ref: Local, size: 1, loc: -28] [type bool] [line: 10]
!   !   !   Child: 0  Const: true [type bool] [line: 10]
!   !   Sibling: 7  Var bb  [ref: Local, size: 1, loc: -29] [type bool] [line: 10]
!   !   !   Child: 0  Op: and [type bool] [line: 10]
!   !   !   !   Child: 0  Const: true [type bool] [line: 10]
!   !   !   !   Child: 1  Op: not [type bool] [line: 10]
!   !   !   !   !   Child: 0  Const: false [type bool] [line: 10]
!   !   Sibling: 8  Var bc  [ref: Local, size: 1, loc: -30] [type bool] [line: 10]
!   !   !   Child: 0  Op: > [type bool] [line: 10]
!   !   !   !   Child: 0  Const: 5 [type int] [line: 10]
!   !   !   !   Child: 1  Const: 4 [type int] [line: 10]
!   !   Sibling: 9  Var ca  [ref: Local, size: 1, loc: -31] [type char] [line: 11]
!   !   !   Child: 0  Const: 'a' [type char] [line: 11]
!   !   Child: 1  Assign: = [type int] [line: 13]
!   !   !   Child: 0  Op: [ [type int] [line: 13]
!   !   !   !   Child: 0  Id: x is array  [ref: Local, size: 11, loc: -16] [type int] [line: 13]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 13]
!   !   !   Child: 1  Const: 111 [type int] [line: 13]
!   !   Sibling: 0  Assign: = [type int] [line: 14]
!   !   !   Child: 0  Id: a  [ref: Static, size: 1, loc: -3] [type int] [line: 14]
!   !   !   Child: 1  Op: * [type int] [line: 14]
!   !   !   !   Child: 0  Id: b is array  [ref: Local, size: 11, loc: -5] [type char] [line: 14]
!   !   Sibling: 1  While [type void] [line: 15]
!   !   !   Child: 0  Op: < [type bool] [line: 15]
!   !   !   !   Child: 0  Id: i  [ref: Local, size: 1, loc: -2] [type int] [line: 15]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 15]
!   !   !   Child: 1  Compound [type void] [line: 15]
!   !   !   !   Child: 0  Var y is array  [ref: Local, size: 21, loc: -33] [type int] [line: 16]
!   !   !   !   Sibling: 0  Var t  [ref: Local, size: 1, loc: -53] [type bool] [line: 17]
!   !   !   !   Child: 1  If [type void] [line: 18]
!   !   !   !   !   Child: 0  Id: t  [ref: Local, size: 1, loc: -53] [type bool] [line: 18]
!   !   !   !   !   Child: 1  Break [type void] [line: 18]
!   !   !   !   Sibling: 0  If [type void] [line: 19]
!   !   !   !   !   Child: 0  Id: t  [ref: Local, size: 1, loc: -53] [type bool] [line: 19]
!   !   !   !   !   Child: 1  Break [type void] [line: 19]
!   !   !   !   !   Child: 2  Return [type void] [line: 19]
!   !   !   !   Sibling: 1  Assign: = [type int] [line: 20]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 20]
!   !   !   !   !   !   Child: 0  Id: y is array  [ref: Local, size: 21, loc: -33] [type int] [line: 20]
!   !   !   !   !   !   Child: 1  Const: 2 [type int] [line: 20]
!   !   !   !   !   Child: 1  Const: 222 [type int] [line: 20]
!   !   Sibling: 2  Compound [type void] [line: 22]
!   !   !   Child: 1  Compound [type void] [line: 23]
!   !   !   !   Child: 0  Var z is array  [ref: Local, size: 31, loc: -55] [type int] [line: 24]
!   !   !   !   Child: 1  Assign: = [type int] [line: 25]
!   !   !   !   !   Child: 0  Op: [ [type int] [line: 25]
!   !   !   !   !   !   Child: 0  Id: z is array  [ref: Local, size: 31, loc: -55] [type int] [line: 25]
!   !   !   !   !   !   Child: 1  Const: 3 [type int] [line: 25]
!   !   !   !   !   Child: 1  Const: 333 [type int] [line: 25]
!   !   Sibling: 3  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 28]
!   !   !   Child: 0  Const: 666 [type int] [line: 28]
Offset for end of global space: -4
Number of warnings: 0
Number of errors: 5
