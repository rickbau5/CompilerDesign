Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func dog returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 2]
!   Child: 0  Param pig  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
!   Child: 1  Return [type void] [line: 2]
!   !   Child: 0  Id: pig  [ref: Param, size: 1, loc: -2] [type int] [line: 2]
Sibling: 7  Func main returns type void [ref: Global, size: -6, loc: 0] [type void] [line: 4]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 4]
!   Child: 1  If [type void] [line: 5]
!   !   Child: 0  Const: true [type bool] [line: 5]
!   !   Child: 1  Compound [type void] [line: 5]
!   !   !   Child: 0  Var z  [ref: Local, size: 1, loc: -3] [type int] [line: 6]
!   !   !   Child: 1  Assign: = [type int] [line: 7]
!   !   !   !   Child: 0  Id: z  [ref: Local, size: 1, loc: -3] [type int] [line: 7]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 7]
!   !   !   Sibling: 0  Compound [type void] [line: 8]
!   !   !   !   Child: 0  Var x  [ref: Local, size: 1, loc: -4] [type int] [line: 9]
!   !   !   !   Child: 1  Assign: = [type int] [line: 11]
!   !   !   !   !   Child: 0  Id: x  [ref: Local, size: 1, loc: -4] [type int] [line: 11]
!   !   !   !   !   Child: 1  Const: 222 [type int] [line: 11]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 12]
!   !   !   !   !   Child: 0  Id: x  [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 12]
!   !   !   !   !   !   Child: 0  Const: 666 [type int] [line: 12]
!   !   !   !   !   !   Child: 1  Call: dog [ref: None, size: -3, loc: 0] [type int] [line: 12]
!   !   !   !   !   !   !   Child: 0  Id: x  [ref: Local, size: 1, loc: -4] [type int] [line: 12]
!   !   !   !   Sibling: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 13]
!   !   !   !   !   Child: 0  Id: x  [ref: Local, size: 1, loc: -4] [type int] [line: 13]
!   !   !   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 13]
!   !   !   Sibling: 1  Compound [type void] [line: 15]
!   !   !   !   Child: 0  Var y  [ref: Local, size: 1, loc: -5] [type int] [line: 16]
!   !   !   !   Child: 1  Assign: = [type int] [line: 18]
!   !   !   !   !   Child: 0  Id: y  [ref: Local, size: 1, loc: -5] [type int] [line: 18]
!   !   !   !   !   Child: 1  Const: 333 [type int] [line: 18]
!   !   !   !   Sibling: 0  Assign: = [type int] [line: 19]
!   !   !   !   !   Child: 0  Id: y  [ref: Local, size: 1, loc: -5] [type int] [line: 19]
!   !   !   !   !   Child: 1  Op: + [type int] [line: 19]
!   !   !   !   !   !   Child: 0  Const: 666 [type int] [line: 19]
!   !   !   !   !   !   Child: 1  Call: dog [ref: None, size: -3, loc: 0] [type int] [line: 19]
!   !   !   !   !   !   !   Child: 0  Id: y  [ref: Local, size: 1, loc: -5] [type int] [line: 19]
!   !   !   !   Sibling: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 20]
!   !   !   !   !   Child: 0  Id: y  [ref: Local, size: 1, loc: -5] [type int] [line: 20]
!   !   !   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 20]
!   !   !   Sibling: 2  Assign: = [type int] [line: 23]
!   !   !   !   Child: 0  Id: z  [ref: Local, size: 1, loc: -3] [type int] [line: 23]
!   !   !   !   Child: 1  Op: + [type int] [line: 23]
!   !   !   !   !   Child: 0  Const: 666 [type int] [line: 23]
!   !   !   !   !   Child: 1  Call: dog [ref: None, size: -3, loc: 0] [type int] [line: 23]
!   !   !   !   !   !   Child: 0  Id: z  [ref: Local, size: 1, loc: -3] [type int] [line: 23]
!   !   !   Sibling: 3  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 24]
!   !   !   !   Child: 0  Id: z  [ref: Local, size: 1, loc: -3] [type int] [line: 24]
!   !   !   Sibling: 4  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 24]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
