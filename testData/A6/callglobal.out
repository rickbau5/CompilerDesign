Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func scalar returns type void [ref: Global, size: -5, loc: 0] [type void] [line: 1]
!   Child: 0  Param a  [ref: Param, size: 1, loc: -2] [type int] [line: 1]
!   Sibling: 0  Param b  [ref: Param, size: 1, loc: -3] [type bool] [line: 1]
!   Sibling: 1  Param c  [ref: Param, size: 1, loc: -4] [type char] [line: 1]
!   Child: 1  Compound [type void] [line: 2]
!   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 3]
!   !   !   Child: 0  Id: a  [ref: Param, size: 1, loc: -2] [type int] [line: 3]
!   !   Sibling: 0  Call: outputb [ref: None, size: -3, loc: 0] [type void] [line: 4]
!   !   !   Child: 0  Id: b  [ref: Param, size: 1, loc: -3] [type bool] [line: 4]
!   !   Sibling: 1  Call: outputc [ref: None, size: -3, loc: 0] [type void] [line: 5]
!   !   !   Child: 0  Id: c  [ref: Param, size: 1, loc: -4] [type char] [line: 5]
!   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 6]
Sibling: 7  Func array returns type void [ref: Global, size: -5, loc: 0] [type void] [line: 10]
!   Child: 0  Param a is array  [ref: Param, size: 1, loc: -2] [type int] [line: 10]
!   Sibling: 0  Param b is array  [ref: Param, size: 1, loc: -3] [type bool] [line: 10]
!   Sibling: 1  Param c is array  [ref: Param, size: 1, loc: -4] [type char] [line: 10]
!   Child: 1  Compound [type void] [line: 11]
!   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 12]
!   !   !   Child: 0  Op: [ [type int] [line: 12]
!   !   !   !   Child: 0  Id: a is array  [ref: Param, size: 1, loc: -2] [type int] [line: 12]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 12]
!   !   Sibling: 0  Call: outputb [ref: None, size: -3, loc: 0] [type void] [line: 13]
!   !   !   Child: 0  Op: [ [type bool] [line: 13]
!   !   !   !   Child: 0  Id: b is array  [ref: Param, size: 1, loc: -3] [type bool] [line: 13]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 13]
!   !   Sibling: 1  Call: outputc [ref: None, size: -3, loc: 0] [type void] [line: 14]
!   !   !   Child: 0  Op: [ [type char] [line: 14]
!   !   !   !   Child: 0  Id: c is array  [ref: Param, size: 1, loc: -4] [type char] [line: 14]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 14]
!   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 15]
Sibling: 8  Var x  [ref: Global, size: 1, loc: 0] [type int] [line: 19]
Sibling: 9  Var y  [ref: Global, size: 1, loc: -1] [type bool] [line: 19]
Sibling: 10  Var z  [ref: Global, size: 1, loc: -2] [type char] [line: 19]
Sibling: 11  Var XX is array  [ref: Global, size: 4, loc: -4] [type int] [line: 20]
Sibling: 12  Var YY is array  [ref: Global, size: 6, loc: -8] [type bool] [line: 20]
Sibling: 13  Var ZZ is array  [ref: Global, size: 8, loc: -14] [type char] [line: 20]
Sibling: 14  Func main returns type void [ref: Global, size: -2, loc: 0] [type void] [line: 22]
!   Child: 1  Compound [type void] [line: 23]
!   !   Child: 1  Assign: = [type int] [line: 24]
!   !   !   Child: 0  Id: x  [ref: Global, size: 1, loc: 0] [type int] [line: 24]
!   !   !   Child: 1  Const: 333 [type int] [line: 24]
!   !   Sibling: 0  Assign: = [type bool] [line: 25]
!   !   !   Child: 0  Id: y  [ref: Global, size: 1, loc: -1] [type bool] [line: 25]
!   !   !   Child: 1  Const: true [type bool] [line: 25]
!   !   Sibling: 1  Assign: = [type char] [line: 26]
!   !   !   Child: 0  Id: z  [ref: Global, size: 1, loc: -2] [type char] [line: 26]
!   !   !   Child: 1  Const: 'z' [type char] [line: 26]
!   !   Sibling: 2  Assign: = [type int] [line: 28]
!   !   !   Child: 0  Op: [ [type int] [line: 28]
!   !   !   !   Child: 0  Id: XX is array  [ref: Global, size: 4, loc: -4] [type int] [line: 28]
!   !   !   !   Child: 1  Const: 1 [type int] [line: 28]
!   !   !   Child: 1  Const: 444 [type int] [line: 28]
!   !   Sibling: 3  Assign: = [type bool] [line: 29]
!   !   !   Child: 0  Op: [ [type bool] [line: 29]
!   !   !   !   Child: 0  Id: YY is array  [ref: Global, size: 6, loc: -8] [type bool] [line: 29]
!   !   !   !   Child: 1  Const: 2 [type int] [line: 29]
!   !   !   Child: 1  Const: false [type bool] [line: 29]
!   !   Sibling: 4  Assign: = [type char] [line: 30]
!   !   !   Child: 0  Op: [ [type char] [line: 30]
!   !   !   !   Child: 0  Id: ZZ is array  [ref: Global, size: 8, loc: -14] [type char] [line: 30]
!   !   !   !   Child: 1  Const: 3 [type int] [line: 30]
!   !   !   Child: 1  Const: 'a' [type char] [line: 30]
!   !   Sibling: 5  Call: scalar [ref: None, size: -5, loc: 0] [type void] [line: 32]
!   !   !   Child: 0  Id: x  [ref: Global, size: 1, loc: 0] [type int] [line: 32]
!   !   !   Sibling: 0  Id: y  [ref: Global, size: 1, loc: -1] [type bool] [line: 32]
!   !   !   Sibling: 1  Id: z  [ref: Global, size: 1, loc: -2] [type char] [line: 32]
!   !   Sibling: 6  Call: array [ref: None, size: -5, loc: 0] [type void] [line: 33]
!   !   !   Child: 0  Id: XX is array  [ref: Global, size: 4, loc: -4] [type int] [line: 33]
!   !   !   Sibling: 0  Id: YY is array  [ref: Global, size: 6, loc: -8] [type bool] [line: 33]
!   !   !   Sibling: 1  Id: ZZ is array  [ref: Global, size: 8, loc: -14] [type char] [line: 33]
Offset for end of global space: -21
Number of warnings: 0
Number of errors: 0
