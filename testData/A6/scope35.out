Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var a  [ref: Global, size: 1, loc: 0] [type int] [line: 1]
Sibling: 7  Var aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 2]
Sibling: 8  Func fox returns type void [ref: Global, size: -4, loc: 0] [type void] [line: 4]
!   Child: 0  Param fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 4]
!   Sibling: 0  Param fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 4]
!   Child: 1  Compound [type void] [line: 5]
!   !   Child: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 6]
!   !   !   Child: 0  Id: fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 6]
!   !   Sibling: 0  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 7]
!   !   !   Child: 0  Op: * [type int] [line: 7]
!   !   !   !   Child: 0  Id: fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 7]
!   !   Sibling: 1  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 8]
!   !   !   Child: 0  Op: [ [type int] [line: 8]
!   !   !   !   Child: 0  Id: fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 8]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 8]
!   !   Sibling: 2  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 9]
!   !   !   Child: 0  Op: [ [type int] [line: 9]
!   !   !   !   Child: 0  Id: fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 9]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 9]
!   !   Sibling: 3  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 10]
Sibling: 9  Func bat returns type void [ref: Global, size: -4, loc: 0] [type void] [line: 14]
!   Child: 0  Param fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 14]
!   Sibling: 0  Param fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 14]
!   Child: 1  Compound [type void] [line: 15]
!   !   Child: 1  Call: outputc [ref: None, size: -3, loc: 0] [type void] [line: 16]
!   !   !   Child: 0  Const: 'B' [type char] [line: 16]
!   !   Sibling: 0  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 17]
!   !   !   Child: 0  Id: fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 17]
!   !   !   Sibling: 0  Id: fpaa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 17]
Sibling: 10  Func th returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 20]
!   Child: 0  Param fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 20]
!   Child: 1  Return [type void] [line: 20]
!   !   Child: 0  Id: fpa  [ref: Param, size: 1, loc: -2] [type int] [line: 20]
Sibling: 11  Func tha returns type int [ref: Global, size: -3, loc: 0] [type int] [line: 22]
!   Child: 0  Param fpaa is array  [ref: Param, size: 1, loc: -2] [type int] [line: 22]
!   Child: 1  Return [type void] [line: 22]
!   !   Child: 0  Op: [ [type int] [line: 22]
!   !   !   Child: 0  Id: fpaa is array  [ref: Param, size: 1, loc: -2] [type int] [line: 22]
!   !   !   Child: 1  Const: 0 [type int] [line: 22]
Sibling: 12  Func main returns type void [ref: Global, size: -43, loc: 0] [type void] [line: 24]
!   Child: 0  Param pa  [ref: Param, size: 1, loc: -2] [type int] [line: 24]
!   Sibling: 0  Param paa is array  [ref: Param, size: 1, loc: -3] [type int] [line: 24]
!   Child: 1  Compound [type void] [line: 25]
!   !   Child: 0  Var b  [ref: Local, size: 1, loc: -4] [type int] [line: 26]
!   !   Sibling: 0  Var bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 27]
!   !   Child: 1  Assign: = [type int] [line: 29]
!   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 29]
!   !   !   Child: 1  Const: 111 [type int] [line: 29]
!   !   Sibling: 0  Assign: = [type int] [line: 30]
!   !   !   Child: 0  Op: [ [type int] [line: 30]
!   !   !   !   Child: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 30]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 30]
!   !   !   Child: 1  Const: 110 [type int] [line: 30]
!   !   Sibling: 1  Assign: = [type int] [line: 31]
!   !   !   Child: 0  Op: [ [type int] [line: 31]
!   !   !   !   Child: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 31]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 31]
!   !   !   Child: 1  Const: 112 [type int] [line: 31]
!   !   Sibling: 2  Assign: = [type int] [line: 33]
!   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 33]
!   !   !   Child: 1  Const: 222 [type int] [line: 33]
!   !   Sibling: 3  Assign: = [type int] [line: 34]
!   !   !   Child: 0  Op: [ [type int] [line: 34]
!   !   !   !   Child: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 34]
!   !   !   !   Child: 1  Const: 0 [type int] [line: 34]
!   !   !   Child: 1  Const: 220 [type int] [line: 34]
!   !   Sibling: 4  Assign: = [type int] [line: 35]
!   !   !   Child: 0  Op: [ [type int] [line: 35]
!   !   !   !   Child: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 35]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 35]
!   !   !   Child: 1  Const: 222 [type int] [line: 35]
!   !   Sibling: 5  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 37]
!   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 37]
!   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 37]
!   !   Sibling: 6  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 38]
!   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 38]
!   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 38]
!   !   Sibling: 7  Compound [type void] [line: 40]
!   !   !   Child: 0  Var c  [ref: Local, size: 1, loc: -17] [type int] [line: 41]
!   !   !   Sibling: 0  Var cc is array  [ref: Local, size: 12, loc: -19] [type int] [line: 42]
!   !   !   Child: 1  Assign: = [type int] [line: 44]
!   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -17] [type int] [line: 44]
!   !   !   !   Child: 1  Const: 333 [type int] [line: 44]
!   !   !   Sibling: 0  Assign: = [type int] [line: 45]
!   !   !   !   Child: 0  Op: [ [type int] [line: 45]
!   !   !   !   !   Child: 0  Id: cc is array  [ref: Local, size: 12, loc: -19] [type int] [line: 45]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 45]
!   !   !   !   Child: 1  Const: 330 [type int] [line: 45]
!   !   !   Sibling: 1  Assign: = [type int] [line: 46]
!   !   !   !   Child: 0  Op: [ [type int] [line: 46]
!   !   !   !   !   Child: 0  Id: cc is array  [ref: Local, size: 12, loc: -19] [type int] [line: 46]
!   !   !   !   !   Child: 1  Const: 10 [type int] [line: 46]
!   !   !   !   Child: 1  Const: 334 [type int] [line: 46]
!   !   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 48]
!   !   !   Sibling: 3  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 49]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 49]
!   !   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 49]
!   !   !   Sibling: 4  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 50]
!   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 50]
!   !   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 50]
!   !   !   Sibling: 5  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 51]
!   !   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -17] [type int] [line: 51]
!   !   !   !   Sibling: 0  Id: cc is array  [ref: Local, size: 12, loc: -19] [type int] [line: 51]
!   !   Sibling: 8  Compound [type void] [line: 53]
!   !   !   Child: 0  Var d  [ref: Local, size: 1, loc: -30] [type int] [line: 54]
!   !   !   Sibling: 0  Var dd is array  [ref: Local, size: 12, loc: -32] [type int] [line: 55]
!   !   !   Child: 1  Assign: = [type int] [line: 57]
!   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -30] [type int] [line: 57]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 57]
!   !   !   Sibling: 0  Assign: = [type int] [line: 58]
!   !   !   !   Child: 0  Op: [ [type int] [line: 58]
!   !   !   !   !   Child: 0  Id: dd is array  [ref: Local, size: 12, loc: -32] [type int] [line: 58]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 58]
!   !   !   !   Child: 1  Const: 440 [type int] [line: 58]
!   !   !   Sibling: 1  Assign: = [type int] [line: 59]
!   !   !   !   Child: 0  Op: [ [type int] [line: 59]
!   !   !   !   !   Child: 0  Id: dd is array  [ref: Local, size: 12, loc: -32] [type int] [line: 59]
!   !   !   !   !   Child: 1  Const: 10 [type int] [line: 59]
!   !   !   !   Child: 1  Const: 445 [type int] [line: 59]
!   !   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 61]
!   !   !   Sibling: 3  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 62]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 62]
!   !   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 62]
!   !   !   Sibling: 4  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 63]
!   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 63]
!   !   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 63]
!   !   !   Sibling: 5  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 64]
!   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -30] [type int] [line: 64]
!   !   !   !   Sibling: 0  Id: dd is array  [ref: Local, size: 12, loc: -32] [type int] [line: 64]
!   !   !   Sibling: 6  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 66]
!   !   !   Sibling: 7  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 67]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 67]
!   !   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 67]
!   !   !   Sibling: 8  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 68]
!   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 68]
!   !   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 68]
!   !   !   Sibling: 9  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 69]
!   !   !   !   Child: 0  Id: d  [ref: Local, size: 1, loc: -30] [type int] [line: 69]
!   !   !   !   Sibling: 0  Id: dd is array  [ref: Local, size: 12, loc: -32] [type int] [line: 69]
!   !   Sibling: 9  Compound [type void] [line: 71]
!   !   !   Child: 0  Var e  [ref: Static, size: 1, loc: -13] [type int] [line: 72]
!   !   !   Sibling: 0  Var ee is array  [ref: Static, size: 12, loc: -15] [type int] [line: 73]
!   !   !   Child: 1  Assign: = [type int] [line: 75]
!   !   !   !   Child: 0  Id: e  [ref: Static, size: 1, loc: -13] [type int] [line: 75]
!   !   !   !   Child: 1  Const: 555 [type int] [line: 75]
!   !   !   Sibling: 0  Assign: = [type int] [line: 76]
!   !   !   !   Child: 0  Op: [ [type int] [line: 76]
!   !   !   !   !   Child: 0  Id: ee is array  [ref: Static, size: 12, loc: -15] [type int] [line: 76]
!   !   !   !   !   Child: 1  Const: 0 [type int] [line: 76]
!   !   !   !   Child: 1  Const: 550 [type int] [line: 76]
!   !   !   Sibling: 1  Assign: = [type int] [line: 77]
!   !   !   !   Child: 0  Op: [ [type int] [line: 77]
!   !   !   !   !   Child: 0  Id: ee is array  [ref: Static, size: 12, loc: -15] [type int] [line: 77]
!   !   !   !   !   Child: 1  Const: 10 [type int] [line: 77]
!   !   !   !   Child: 1  Const: 556 [type int] [line: 77]
!   !   !   Sibling: 2  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 79]
!   !   !   Sibling: 3  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 80]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 80]
!   !   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 80]
!   !   !   Sibling: 4  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 81]
!   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 81]
!   !   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 81]
!   !   !   Sibling: 5  Call: fox [ref: None, size: -4, loc: 0] [type void] [line: 82]
!   !   !   !   Child: 0  Id: e  [ref: Static, size: 1, loc: -13] [type int] [line: 82]
!   !   !   !   Sibling: 0  Id: ee is array  [ref: Static, size: 12, loc: -15] [type int] [line: 82]
!   !   !   Sibling: 6  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 84]
!   !   !   Sibling: 7  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 85]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 85]
!   !   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 85]
!   !   !   Sibling: 8  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 86]
!   !   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -4] [type int] [line: 86]
!   !   !   !   Sibling: 0  Id: bb is array  [ref: Local, size: 12, loc: -6] [type int] [line: 86]
!   !   !   Sibling: 9  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 87]
!   !   !   !   Child: 0  Id: e  [ref: Static, size: 1, loc: -13] [type int] [line: 87]
!   !   !   !   Sibling: 0  Id: ee is array  [ref: Static, size: 12, loc: -15] [type int] [line: 87]
!   !   Sibling: 10  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 90]
!   !   Sibling: 11  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 91]
!   !   !   Child: 0  Call: th [ref: None, size: -3, loc: 0] [type int] [line: 91]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 91]
!   !   Sibling: 12  Call: output [ref: None, size: -3, loc: 0] [type void] [line: 92]
!   !   !   Child: 0  Call: tha [ref: None, size: -3, loc: 0] [type int] [line: 92]
!   !   !   !   Child: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 92]
!   !   Sibling: 13  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 93]
!   !   Sibling: 14  Call: bat [ref: None, size: -4, loc: 0] [type void] [line: 94]
!   !   !   Child: 0  Call: th [ref: None, size: -3, loc: 0] [type int] [line: 94]
!   !   !   !   Child: 0  Id: a  [ref: Global, size: 1, loc: 0] [type int] [line: 94]
!   !   !   Sibling: 0  Id: aa is array  [ref: Global, size: 12, loc: -2] [type int] [line: 94]
!   !   Sibling: 15  Call: outnl [ref: None, size: -2, loc: 0] [type void] [line: 95]
Offset for end of global space: -26
Number of warnings: 0
Number of errors: 0
