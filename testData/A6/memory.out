ERROR(22): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(27): '=' requires operands of the same type but lhs is type char and rhs is type int.
Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Var g  [ref: Global, size: 1, loc: 0] [type bool] [line: 1]
Sibling: 7  Var h is array  [ref: Global, size: 21, loc: -2] [type bool] [line: 1]
Sibling: 8  Var ee  [ref: Global, size: 1, loc: -22] [type int] [line: 2]
Sibling: 9  Func ant returns type int [ref: Global, size: -5, loc: 0] [type int] [line: 4]
!   Child: 0  Param x  [ref: Param, size: 1, loc: -2] [type int] [line: 4]
!   Sibling: 0  Param y  [ref: Param, size: 1, loc: -3] [type int] [line: 4]
!   Sibling: 1  Param z  [ref: Param, size: 1, loc: -4] [type int] [line: 4]
!   Child: 1  Return [type void] [line: 4]
!   !   Child: 0  Const: 666 [type int] [line: 4]
Sibling: 10  Var bat  [ref: Global, size: 1, loc: -23] [type char] [line: 6]
Sibling: 11  Func main returns type char [ref: Global, size: -120, loc: 0] [type char] [line: 8]
!   Child: 0  Param x  [ref: Param, size: 1, loc: -2] [type int] [line: 8]
!   Sibling: 0  Param y  [ref: Param, size: 1, loc: -3] [type int] [line: 8]
!   Sibling: 1  Param z is array  [ref: Param, size: 1, loc: -4] [type int] [line: 8]
!   Child: 1  Compound [type void] [line: 8]
!   !   Child: 0  Var c  [ref: Local, size: 1, loc: -5] [type char] [line: 9]
!   !   Sibling: 0  Var d  [ref: Local, size: 1, loc: -6] [type char] [line: 9]
!   !   Sibling: 1  Var ee  [ref: Local, size: 1, loc: -7] [type char] [line: 9]
!   !   Child: 1  Assign: = [type char] [line: 11]
!   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -5] [type char] [line: 11]
!   !   !   Child: 1  Const: 'x' [type char] [line: 11]
!   !   Sibling: 0  Assign: = [type bool] [line: 12]
!   !   !   Child: 0  Id: g  [ref: Global, size: 1, loc: 0] [type bool] [line: 12]
!   !   !   Child: 1  Const: true [type bool] [line: 12]
!   !   Sibling: 1  Call: ant [ref: None, size: -5, loc: 0] [type int] [line: 13]
!   !   !   Child: 0  Const: 111 [type int] [line: 13]
!   !   !   Sibling: 0  Const: 222 [type int] [line: 13]
!   !   !   Sibling: 1  Const: 333 [type int] [line: 13]
!   !   Sibling: 2  Compound [type void] [line: 14]
!   !   !   Child: 0  Var ee  [ref: Static, size: 1, loc: -24] [type char] [line: 15]
!   !   !   Sibling: 0  Var b is array  [ref: Local, size: 11, loc: -9] [type bool] [line: 16]
!   !   !   Child: 1  Call: ant [ref: None, size: -5, loc: 0] [type int] [line: 18]
!   !   !   !   Child: 0  Const: 444 [type int] [line: 18]
!   !   !   !   Sibling: 0  Const: 555 [type int] [line: 18]
!   !   !   !   Sibling: 1  Const: 666 [type int] [line: 18]
!   !   !   Sibling: 0  Assign: = [type char] [line: 19]
!   !   !   !   Child: 0  Id: ee  [ref: Static, size: 1, loc: -24] [type char] [line: 19]
!   !   !   !   Child: 1  Const: 'E' [type char] [line: 19]
!   !   !   Sibling: 1  Assign: = [type bool] [line: 20]
!   !   !   !   Child: 0  Op: [ [type bool] [line: 20]
!   !   !   !   !   Child: 0  Id: b is array  [ref: Local, size: 11, loc: -9] [type bool] [line: 20]
!   !   !   !   !   Child: 1  Const: 7 [type int] [line: 20]
!   !   !   !   Child: 1  Const: false [type bool] [line: 20]
!   !   Sibling: 3  Assign: = [type char] [line: 22]
!   !   !   Child: 0  Id: ee  [ref: Local, size: 1, loc: -7] [type char] [line: 22]
!   !   !   Child: 1  Const: 73 [type int] [line: 22]
!   !   Sibling: 4  Compound [type void] [line: 24]
!   !   !   Child: 0  Var tmp is array  [ref: Local, size: 101, loc: -20] [type int] [line: 25]
!   !   !   Child: 1  Assign: = [type char] [line: 27]
!   !   !   !   Child: 0  Id: ee  [ref: Local, size: 1, loc: -7] [type char] [line: 27]
!   !   !   !   Child: 1  Const: 107 [type int] [line: 27]
!   !   Sibling: 5  Return [type void] [line: 30]
!   !   !   Child: 0  Const: 'B' [type char] [line: 30]
Sibling: 12  Var cow  [ref: Global, size: 1, loc: -25] [type bool] [line: 33]
Offset for end of global space: -26
Number of warnings: 0
Number of errors: 2
