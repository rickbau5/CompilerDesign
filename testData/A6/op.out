ERROR(8): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(9): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(10): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(11): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(11): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(12): '<' requires operands of type char or type int but lhs is of type bool.
ERROR(13): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(14): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(17): Symbol 'x' is not defined.
ERROR(18): Symbol 'x' is not defined.
ERROR(18): '<' requires operands of type char or type int but rhs is of type bool.
ERROR(19): Symbol 'x' is not defined.
Func input returns type int [ref: Global, size: -2, loc: 0] [type int] [line: -1]
Sibling: 0  Func output returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type int] [line: -1]
Sibling: 1  Func inputb returns type bool [ref: Global, size: -2, loc: 0] [type bool] [line: -1]
Sibling: 2  Func outputb returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type bool] [line: -1]
Sibling: 3  Func inputc returns type char [ref: Global, size: -2, loc: 0] [type char] [line: -1]
Sibling: 4  Func outputc returns type void [ref: Global, size: -3, loc: 0] [type void] [line: -1]
!   Child: 0  Param *dummy*  [ref: Param, size: 1, loc: -2] [type char] [line: -1]
Sibling: 5  Func outnl returns type void [ref: Global, size: -2, loc: 0] [type void] [line: -1]
Sibling: 6  Func main returns type void [ref: Global, size: -5, loc: 0] [type void] [line: 1]
!   Child: 1  Compound [type void] [line: 2]
!   !   Child: 0  Var a  [ref: Local, size: 1, loc: -2] [type int] [line: 3]
!   !   Sibling: 0  Var b  [ref: Local, size: 1, loc: -3] [type bool] [line: 4]
!   !   Sibling: 1  Var c  [ref: Local, size: 1, loc: -4] [type char] [line: 5]
!   !   Child: 1  Op: < [type bool] [line: 7]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 7]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 7]
!   !   Sibling: 0  Op: < [type bool] [line: 8]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 8]
!   !   !   Child: 1  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 8]
!   !   Sibling: 1  Op: < [type bool] [line: 9]
!   !   !   Child: 0  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 9]
!   !   !   Child: 1  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 9]
!   !   Sibling: 2  Op: < [type bool] [line: 10]
!   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 10]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 10]
!   !   Sibling: 3  Op: < [type bool] [line: 11]
!   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 11]
!   !   !   Child: 1  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 11]
!   !   Sibling: 4  Op: < [type bool] [line: 12]
!   !   !   Child: 0  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 12]
!   !   !   Child: 1  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 12]
!   !   Sibling: 5  Op: < [type bool] [line: 13]
!   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 13]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 13]
!   !   Sibling: 6  Op: < [type bool] [line: 14]
!   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 14]
!   !   !   Child: 1  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 14]
!   !   Sibling: 7  Op: < [type bool] [line: 15]
!   !   !   Child: 0  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 15]
!   !   !   Child: 1  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 15]
!   !   Sibling: 8  Op: < [type bool] [line: 17]
!   !   !   Child: 0  Id: x  [ref: None, size: 1, loc: 0] [undefined type] [line: 17]
!   !   !   Child: 1  Id: a  [ref: Local, size: 1, loc: -2] [type int] [line: 17]
!   !   Sibling: 9  Op: < [type bool] [line: 18]
!   !   !   Child: 0  Id: x  [ref: None, size: 1, loc: 0] [undefined type] [line: 18]
!   !   !   Child: 1  Id: b  [ref: Local, size: 1, loc: -3] [type bool] [line: 18]
!   !   Sibling: 10  Op: < [type bool] [line: 19]
!   !   !   Child: 0  Id: x  [ref: None, size: 1, loc: 0] [undefined type] [line: 19]
!   !   !   Child: 1  Id: c  [ref: Local, size: 1, loc: -4] [type char] [line: 19]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 12
